{pre}
<style type="text/css">
.checkhighlight{border:2px solid #FF0000;}
</style>
#template("analytics.vm")
#template("javascripts.vm")
<script type="text/javascript" language="javascript">
var AdWordJumpPage=Class.create({
    initialize:function(options){
        this.options={
            logurl:'/xwiki/bin/view/AdWordsJump/LandingPageLogWriter',
            jumpname:'$doc.name',
            subjectParent:'',
            subject:'',
            searchText:'',
            searchTextWrapper:'',
            searchTextAutoButton:'',
            defaultSearchText:'',
            allowEmptySearchText:true,
            emailCheck:'',
            emailCheckWrapper:'',
            email:'',
            emailWrapper:'',
            emailAutoButton:'',
            defaultEmailText:'',
            searchButton:'',
            emailButton:'',
            searchAndEmailButton:'',
            autoDecideButton:'',
            highlight:'checkhighlight'
        };
        this.configCheck={};
        Object.extend(this.options,options||{});
        if(this.checkOptions()){
            this.attachEvents();
        }
    },
    checkOptions:function(){
        this.configCheck.hasSearchText=this.options.searchText&&$(this.options.searchText);
        this.configCheck.hasSearchButton=this.options.searchButton&&$(this.options.searchButton);
        this.configCheck.hasEmailCheck=this.options.emailCheck&&$(this.options.emailCheck);
        this.configCheck.hasEmail=this.options.email&&$(this.options.email);
        this.configCheck.hasEmailButton=this.options.emailButton&&$(this.options.emailButton);
        this.configCheck.hasSearchAndEmailButton=this.options.searchAndEmailButton&&$(this.options.searchAndEmailButton);
        this.configCheck.hasAutoDecideButton=this.options.autoDecideButton&&$(this.options.autoDecideButton);
        this.configCheck.hasSearchTextAutoButton=this.options.searchTextAutoButton&&$(this.options.searchTextAutoButton);
        this.configCheck.hasEmailAutoButton=this.options.emailAutoButton&&$(this.options.emailAutoButton);
        if(this.configCheck.hasSearchButton){
            if(!this.configCheck.hasSearchText){
                alert('Search term field is missing');
                return false;
            }
        }
        if(this.configCheck.hasEmailButton){
            if(!this.configCheck.hasEmail){
                alert('Email entry field is missing');
                return false;
            }
        }
        if(this.configCheck.hasSearchAndEmailButton){
            if(!this.configCheck.hasSearchText){
                alert('Search term field is missing');
                return false;
            }
            if(!this.configCheck.hasEmail){
                alert('Email entry field is missing');
                return false;
            }
        }
        if(this.configCheck.hasEmailCheck){
            if(!this.configCheck.hasEmail){
                alert('Email entry field is missing');
                return false;
            }
        }
        if(this.configCheck.hasAutoDecideButton){
            if(!this.configCheck.hasSearchText&&!this.configCheck.hasEmail){
                alert('Both search term field and email entry field are missing');
                return false;
            }
        }
        if(this.configCheck.hasSearchTextAutoButton){
            if(this.getButtonFunction(this.options.searchTextAutoButton)==null){
                alert('Invalid searchTextAutoButton, please make it point to search/searchAndEmailButton/autoDecide button');
                return false;
            }
        }
        if(this.configCheck.hasEmailAutoButton){
            if(this.getButtonFunction(this.options.emailAutoButton)==null){
                alert('Invalid emailAutoButton, please make it point to email/searchAndEmailButton/autoDecide button');
                return false;
            }
        }
        if(!this.configCheck.hasSearchText && !this.configCheck.hasEmail){
            alert('Both search term field and email entry field are missing');
            return false;
        }
        return true;
    },
    attachEvents:function(){
        var caller=this;
        if(caller.configCheck.hasSearchText){
            // set search field default text
            var search=$(caller.options.searchText);
            search.setValue(caller.options.defaultSearchText);
            Event.observe(caller.options.searchText,'focus',function(){
                if($F(caller.options.searchText)==caller.options.defaultSearchText){
                    search.setValue('');
                }
            });
            Event.observe(caller.options.searchText,'blur',function(){
                if(!$F(caller.options.searchText)){
                    search.setValue(caller.options.defaultSearchText);
                }
            });
            // check and set search text auto button
            if(caller.configCheck.hasSearchTextAutoButton){
                Event.observe(caller.options.searchText,'keypress',function(event){
                    if(event.keyCode==Event.KEY_RETURN){
                        caller.getButtonFunction(caller.options.searchTextAutoButton).apply(caller);
                    }
                });
            }
        }
        if(caller.configCheck.hasEmail){
            // set email default text
            var email=$(caller.options.email);
            email.setValue(caller.options.defaultEmailText);
            Event.observe(caller.options.email,'focus',function(){
                if($F(caller.options.email)==caller.options.defaultEmailText){
                    email.setValue('');
                }
            });
            Event.observe(caller.options.email,'blur',function(){
                if(!$F(caller.options.email)){
                    email.setValue(caller.options.defaultEmailText);
                }
            });
            // set email checkbox events
            if(caller.configCheck.hasEmailCheck){
                var email_check=$(caller.options.emailCheck);
                email.disabled=!email_check.getValue();
                Event.observe(caller.options.emailCheck,'click',function(){
                    email.disabled=!email_check.getValue();
                });
                if(caller.configCheck.hasEmailButton){
                    var email_button=$(caller.options.emailButton);
                    email_button.disabled=!email_check.getValue();
                    Event.observe(caller.options.emailCheck,'click',function(){
                        email_button.disabled=!email_check.getValue();
                    });
                }
                if(caller.configCheck.hasAutoDecideButton&&!caller.configCheck.hasSearchText){
                    var auto_button=$(caller.options.autoDecideButton);
                    auto_button.disabled=!email_check.getValue();
                    Event.observe(caller.options.emailCheck,'click',function(){
                        auto_button.disabled=!email_check.getValue();
                    });
                }
            }
            if(caller.options.emailAutoButton&&$(caller.options.emailAutoButton)){
                Event.observe(caller.options.email,'keypress',function(event){
                    if(event.keyCode==Event.KEY_RETURN){
                        caller.getButtonFunction(caller.options.emailAutoButton).apply(caller);
                    }
                });
            }
        }
        if(this.options.searchButton&&$(caller.options.searchButton)){
            Event.observe(caller.options.searchButton,'click',function(){caller.searchSubmit()});
        }
        if(caller.options.emailButton&&$(caller.options.emailButton)){
            Event.observe(caller.options.emailButton,'click',function(){caller.emailSubmit()});
        }
        if(caller.options.searchAndEmailButton&&$(caller.options.searchAndEmailButton)){
            Event.observe(caller.options.searchAndEmailButton,'click',function(){caller.searchAndEmailSubmit()});
        }
        if(caller.options.autoDecideButton&&$(caller.options.autoDecideButton)){
            Event.observe(caller.options.autoDecideButton,'click',function(){caller.autoDecideSubmit()});
        }
    },
    searchSubmit:function(){
        var errmsg=this.checkSearchText('');
        if(errmsg!=''){
            alert(errmsg);
            return;
        }
        var caller=this;
        var subjectparent=this.options.subjectParent?$F(this.options.subjectParent)||'':'';
        var subject=this.options.subject?$F(this.options.subject)||'':'';
        var searchtxt=this.options.searchText?$F(this.options.searchText)||'':'';
        searchtxt=searchtxt==this.options.defaultSearchText?'':searchtxt;
        var pars = {
            xpage:'plain',
            jumpname:this.options.jumpname,
            subjectparent_escaped:subjectparent?escape(escape(escape(escape(subjectparent)))):'',
            subject_escaped:subject?escape(escape(escape(escape(subject)))):'',
            txt:searchtxt,
            txt_escaped:searchtxt?escape(escape(escape(escape(searchtxt)))):''
        };
        Curriki.showLoading();
        new Ajax.Request(caller.options.logurl,{
            method: 'get',
            parameters: pars,
            onComplete: function(request){
                Curriki.hideLoading();
                caller.submitToNextPage(request);
            }
        });
    },
    emailSubmit:function(){
        var errmsg=this.checkEmail('');
        if(errmsg!=''){
            alert(errmsg);
            return;
        }
        var caller=this;
        var inform=!this.options.emailCheck||$F(this.options.emailCheck)?'1':'0';
        var email=this.options.email?$F(this.options.email)||'':'';
        email=email==this.options.defaultEmailText?'':email;
        if(email==''){
            return;
        }
        var pars = {
            xpage:'plain',
            jumpname:this.options.jumpname,
            inform:inform,
            email:email
        };
        Curriki.showLoading();
        new Ajax.Request(caller.options.logurl,{
            method: 'get',
            parameters: pars,
            onComplete: function(){
                Curriki.hideLoading();
                alert('The information was successfully submitted.');
            }
        });
    },
    searchAndEmailSubmit:function(){
        var errmsg=this.checkSearchText('');
        errmsg=this.checkEmail(errmsg);
        if(errmsg!=''){
            alert(errmsg);
            return;
        }
        var caller=this;
        var subjectparent=this.options.subjectParent?$F(this.options.subjectParent)||'':'';
        var subject=this.options.subject?$F(this.options.subject)||'':'';
        var searchtxt=this.options.searchText?$F(this.options.searchText)||'':'';
        searchtxt=searchtxt==this.options.defaultSearchText?'':searchtxt;
        var inform=!this.options.emailCheck||$F(this.options.emailCheck)?'1':'0';
        var email=this.options.email?$F(this.options.email)||'':'';
        email=email==this.options.defaultEmailText?'':email;
        var pars = {
            xpage:'plain',
            jumpname:this.options.jumpname,
            subjectparent_escaped:subjectparent?escape(escape(escape(escape(subjectparent)))):'',
            subject_escaped:subject?escape(escape(escape(escape(subject)))):'',
            txt:searchtxt,
            txt_escaped:searchtxt?escape(escape(escape(escape(searchtxt)))):'',
            inform:inform,
            email:email
        };
        Curriki.showLoading();
        new Ajax.Request(caller.options.logurl,{
            method: 'get',
            parameters: pars,
            onComplete: function(request){
                Curriki.hideLoading();
                caller.submitToNextPage(request);
            }
        });
    },
    autoDecideSubmit:function(){
        var errmsg=this.checkSearchText('');
        errmsg=this.checkEmail(errmsg);
        if(errmsg!=''){
            alert(errmsg);
            return;
        }
        var caller=this;
        var subjectparent=this.options.subjectParent?$F(this.options.subjectParent)||'':'';
        var subject=this.options.subject?$F(this.options.subject)||'':'';
        var searchtxt=this.options.searchText?$F(this.options.searchText)||'':'';
        searchtxt=searchtxt==this.options.defaultSearchText?'':searchtxt;
        var inform=!this.options.emailCheck||$F(this.options.emailCheck)?'1':'0';
        var email=this.options.email?$F(this.options.email)||'':'';
        email=email==this.options.defaultEmailText?'':email;
        var pars = {
            xpage:'plain',
            jumpname:this.options.jumpname,
            subjectparent_escaped:subjectparent?escape(escape(escape(escape(subjectparent)))):'',
            subject_escaped:subject?escape(escape(escape(escape(subject)))):'',
            txt:searchtxt,
            txt_escaped:searchtxt?escape(escape(escape(escape(searchtxt)))):'',
            inform:inform,
            email:email
        };
        Curriki.showLoading();
        new Ajax.Request(caller.options.logurl,{
            method: 'get',
            parameters: pars,
            onComplete: function(request){
                Curriki.hideLoading();
                if(caller.configCheck.hasSearchText){
                    caller.submitToNextPage(request);
                }else if(caller.configCheck.hasEmail){
                    alert('The information was successfully submitted.');
                }
            }
        });
    },
    submitToNextPage:function(request){
        var text = request.responseText;
//        var res = eval('[' + text + '][0]');
//        var redirect_form=document.getElementById('redirect_form');
//        if(redirect_form==null){
//            redirect_form=document.createElement('form');
//            redirect_form.id='redirect_form';
//            document.body.appendChild(redirect_form);
//        }
//        redirect_form.action=res.rurl;
//        redirect_form.submit();
        location.href=eval('[' + text + '][0].rurl');
    },
    checkSearchText:function(errmsg){
        if(!this.options.allowEmptySearchText&&this.options.searchText){
            this.switchCheckClass('remove','searchText');
            var searchtxt=$(this.options.searchText);
            var searchtxt_value=searchtxt.getValue();
            if(searchtxt_value==this.options.defaultSearchText){
                searchtxt_value='';
            }
            if(!searchtxt_value){
                if(errmsg==''){
                    searchtxt.focus();
                }else{
                    errmsg+='\r\n';
                }
                errmsg+='$!msg.get("AdWordsJump.AdWordsJumpPageTemplate.validate.txt.alert")';
                this.switchCheckClass('add','searchText');
            }
        }
        return errmsg;
    },
    checkEmail:function(errmsg){
        if(this.options.email){
            this.switchCheckClass('remove','emailCheck');
            this.switchCheckClass('remove','email');
            var emailcheck=null;
            if(this.options.emailCheck){
                emailcheck=$(this.options.emailCheck);
            }
            var email=$(this.options.email);
            var email_value=email.getValue();
            if(email_value==this.options.defaultEmailText){
                email_value='';
            }
            if(!emailcheck||emailcheck.getValue()){
                var error=false;
                if(email_value==''){
                    error=true
                }else{
                    var pos=email_value.indexOf('@');
                    if(pos==-1||pos==email_value.length-1||email_value.lastIndexOf('@')!=pos||
                       email_value.lastIndexOf(".")<= pos+1||email_value.lastIndexOf(".")==email_value.length-1||email_value.charAt(pos+1)=='.'||
                       email_value.replace(/^[a-zA-Z0-9_+=\.-]+@[a-zA-Z0-9_+=\.-]+$/g,'')!=''){
                        error=true;
                    }
                }
                if(error){
                    if(errmsg==''){
                        email.focus();
                    }else{
                        errmsg+='\r\n';
                    }
                    errmsg+='The information you have submitted is not in the correct format.';
                    this.switchCheckClass('add','email');
                }
            }else if(emailcheck&&!emailcheck.getValue()&&email_value!=''){
                if(errmsg==''){
                    emailcheck.focus();
                }else{
                    errmsg+='\r\n';
                }
                errmsg+='Please check the box to indicate you would like to receive emails from Curriki.';
                this.switchCheckClass('add','emailCheck');
            }
        }
        return errmsg;
    },
    switchCheckClass:function(type,field){
        if(type=='add'){
            if(field=='searchText'){
                if(this.options.searchTextWrapper){
                    $(this.options.searchTextWrapper).addClassName(this.options.highlight);
                }else if(this.options.searchText){
                    $(this.options.searchText).addClassName(this.options.highlight);
                }
            }else if(field=='emailCheck'){
                if(this.options.emailCheckWrapper){
                    $(this.options.emailCheckWrapper).addClassName(this.options.highlight);
                }else if(this.options.emailCheck){
                    $(this.options.emailCheck).addClassName(this.options.highlight);
                }
            }else if(field=='email'){
                if(this.options.emailWrapper){
                    $(this.options.emailWrapper).addClassName(this.options.highlight);
                }else if(this.options.email){
                    $(this.options.email).addClassName(this.options.highlight);
                }
            }
        }else if(type='remove'){
            if(field=='searchText'){
                if(this.options.searchTextWrapper){
                    $(this.options.searchTextWrapper).removeClassName(this.options.highlight);
                }else if(this.options.searchText){
                    $(this.options.searchText).removeClassName(this.options.highlight);
                }
            }else if(field=='emailCheck'){
                if(this.options.emailCheckWrapper){
                    $(this.options.emailCheckWrapper).removeClassName(this.options.highlight);
                }else if(this.options.emailCheck){
                    $(this.options.emailCheck).removeClassName(this.options.highlight);
                }
            }else if(field=='email'){
                if(this.options.emailWrapper){
                    $(this.options.emailWrapper).removeClassName(this.options.highlight);
                }else if(this.options.email){
                    $(this.options.email).removeClassName(this.options.highlight);
                }
            }
        }
    },
    getButtonFunction:function(buttonId){
        if(buttonId==this.options.searchButton){
            return this.searchSubmit;
        }
        if(buttonId==this.options.emailButton){
            return this.emailSubmit;
        }
        if(buttonId==this.options.searchAndEmailButton){
            return this.searchAndEmailSubmit;
        }
        if(buttonId==this.options.autoDecideButton){
            return this.autoDecideSubmit;
        }
        return null;
    }
});
</script>
{/pre}