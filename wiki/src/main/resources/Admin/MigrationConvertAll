<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
<web>Admin</web>
<name>MigrationConvertAll</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent></parent>
<creator>XWiki.LudovicDubost</creator>
<author>XWiki.LudovicDubost</author>
<customClass></customClass>
<contentAuthor>XWiki.LudovicDubost</contentAuthor>
<creationDate>1229719215000</creationDate>
<date>1234818239000</date>
<contentUpdateDate>1234818239000</contentUpdateDate>
<version>9.1</version>
<title></title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment>Latest migration script</comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/1.0</syntaxId>
<object>
<class>
<name>XWiki.TagClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<tags>
<cache>0</cache>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>tags</name>
<number>1</number>
<prettyName>Tags</prettyName>
<relationalStorage>1</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>30</size>
<unmodifiable>0</unmodifiable>
<values></values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</tags>
</class>
<name>Admin.MigrationConvertAll</name>
<number>0</number>
<className>XWiki.TagClass</className>
<property>
<tags/>
</property>
</object>
<content>1 Convert

&lt;%
import com.xpn.xwiki.*;

econtext = context.context.getEngineContext()
faillist = new ArrayList()
econtext.setAttribute("migration_faillist", faillist)
econtext.setAttribute("migration_enddate", null)
econtext.setAttribute("migration_startdate", new Date())
nb = 0
totalnb = xwiki.search("select count(*) from XWikiDocument as doc,BaseObject as obj where doc.fullName=obj.name and obj.className='XWiki.AssetClass' and doc.web not in ('AssetTemp')").get(0)

econtext.setAttribute("migration_totalnb", totalnb)

println "${totalnb} docs to convert"
System.out.println("${totalnb} docs to convert")

for(item in xwiki.searchDocuments(",BaseObject as obj where doc.fullName=obj.name and obj.className='XWiki.AssetClass' and doc.web not in ('AssetTemp')")) {
nb = nb + 1
econtext.setAttribute("migration_nb", nb)

System.out.println("CONVERT: ${nb} ${item}")
def url = ""
def itemdoc;
def isNew = "";
def customclass = "no custom class found"
try {
 itemdoc = xwiki.getDocument(item)
 url = itemdoc.getExternalURL()
 isNew = itemdoc.isNew();
 customclass = itemdoc.document.getCustomClass()
} catch (Exception e) {
 url = "cannot load document"
 e.printStackTrace()
 println "Exception while reading document ${e.message}"
}

itemname = xwiki.escapeText(item)

println "&lt;br /&gt;Doc number ${nb}: &lt;ul&gt;&lt;li&gt;${itemname}&lt;li&gt;${url}&lt;li&gt;${isNew}&lt;li&gt;Custom class: ${customclass}&lt;/ul&gt;"

 if (request.confirm) {

  // we need to force the custom class to the right class otherwise
  // we cannot call convert
  if (itemdoc!=null &amp;&amp; customclass != "org.curriki.xwiki.plugin.asset.Asset") {
     itemdoc.setCustomClass("org.curriki.xwiki.plugin.asset.Asset");
     itemdoc.saveWithProgrammingRights();
  }

  try {
    xwiki.getDocument(item).convert()
 } catch (XWikiException e) {
   System.out.println("CONVERT FAIL: ${nb} ${item}")
   faillist.add(item)
   e.printStackTrace()
    println "Exception while converting ${e.fullMessage}"
 } catch (Exception e) {
    System.out.println("CONVERT FAIL: ${nb} ${item}")
    faillist.add(item)
    e.printStackTrace()
    println "Exception while converting ${e.message}"
  }
 }
}

econtext.setAttribute("migration_enddate", new Date())

if(!request.confirm)
 println "[Confirm conversion&gt;${doc.fullName}?confirm=1]"

%&gt;

</content></xwikidoc>