<?xml version="1.0" encoding="utf-8"?>

<xwikidoc>
<web>CreateResources</web>
<name>ACELessonPlan</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent></parent>
<creator>XWiki.Admin</creator>
<author>XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>XWiki.Admin</contentAuthor>
<creationDate>1221565524000</creationDate>
<date>1224082415000</date>
<contentUpdateDate>1224082415000</contentUpdateDate>
<version>19.1</version>
<title>CreateResources.ACELessonPlan</title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment>undefined</comment>
<minorEdit>false</minorEdit>
<attachment>
<filename>exclamation.png</filename>
<filesize>1381</filesize>
<author>XWiki.Admin</author>
<date>1223904982000</date>
<version>1.2</version>
<comment></comment>
<content>iVBORw0KGgoAAAANSUhEUgAAABYAAAAUCAYAAACJfM0wAAAABGdBTUEAAK/INwWK6QAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAT3SURBVHjabFXdb1RFHP3N/drvux9l24YuLVRsgVAQiBIRoxjfFEMQxGiMPvAH+Ef4TPTFN2OIUR9MhCgEiS8QCCSNRARECkjp2mW7bWl37+79mPsx1zN3oWribO7eu3dmzpw558xvWRzH5Pk8wyjGh0VE8sZS+LbThhF3HUfxvICqlaJ41GozVYlpqFqOMYfJltINgTnE8Rs3BZdIGalYky993+dmvpAMaFtWKgwj27b5pCfYIctyeHOpe6LnkB/4fkPXI14bLp0o5/VvCxljrGBm62lDd3L5QtSzLT0WjAOYmGT8tIVRqIZRZP5646+Ts0vWwVjJkJrSSFEZaYZCfiTI6XLy3ICcThs0XZp6ZvDogVd2nDI0PcJ8HTCapmpuwjgUkdwGBUFo/H5/ecPMgndQy+Ypk1YBqlAa4LWKTpYT0KqhURAKcis5Wl1u08/TjbdLZuaXPXsm65BQsszhcqUmpClq7Hs+Xb72cP+lm82zQgOgHMIYCaieAvjGaomq+Yw0gESsUEpRKF80KTNQevfk91e+OnvmYs3nfoTOx/REbLLtntJodfK3Hqx+qaf0WoT+ANsWAa4wgjEhtdsW9Xo2BXgWWM3DmBD9o8Nl0qpj+3+8/PDz2dn5AkxU14CBkbN6/DgnNgKhKIoiGBqSjy2DILnQ9PZ8h+ZXXDgoIFks9SM51odHo8MlyhXLbzQWuhsUVe2rkCSh6/Pp6/MnXC+JHBRgpCcrxrRzokg6fkdMJcv26G6jSz4PKeRRAhyBgGx6pkA/XVv8QNe1Tw+8vGMhQV9cbL8/t+gAJwZLMA1CsBLEARD4DkEQ2jhUoMFiGsbJ3UAK3F2M5dgdx101DOJCvfP1uT+6a1IsrnSMtiMQNwHtcPEACwQJwwvXF+m3e8trkZSL+rLfDwh5xwIh5vTJMN9+a2xQi9ek8G1vBPQQSw0hVMgVGiQMsKqfrF1Mi37OBY6jzcl2AQSmAipIAwM8O3inhJGrsvAfjUvFTFtnnt/jWSMjAIIZEaKt6BrFUUA2GCYNXVJfzwOwzKEcCiMjLBh4XB6YW7WhAW9NitpI5bPxEXPO55ABA50A+kHHBITLWMWIZ5wgy2cXwAGHH14/djI9XrdNW6eedVuiQmvAZjGX2jRe+cIQHsgK6IXJPoCwxU3rS1Rbl5NZIcNQaWzYpFxaSwx04EcAtq0li1qNP8/ByFNcHoCnUjCFhYNm6hs99nZ1uX5Mhc7yKOt5lQ6/uplSAETiqGxm6bXnR8lA3/npBgXYRQhvbl27SmOFlR9en1TrE1smk/KQFCGULYZTxc6fv2Seu3z3/mMaHsiZZUrhaKcBmnBQ+hrL+Musyzg+ajao8eAGbSmtnn7v2JvHjxw98jgMQ0XTNJEwNnQjrpSN+KV9uzppjR0+c+HmxZUViyKzBsd11BLWN4/1kyEjtlyfo079Ck3V0qc/+vCdT57btbvTFzcpRH3GKHcMpS550VpoqVevTk/cnmkdqXf0Qwur7m4XlONYhYEwz+uhVng0ZPg0sUH7+MUX9ny3d9/eZnVdNX5Sek1gWf+px0/b0tJSrtlsGg9m6+6dmbmBxkJrpNvz0hjbzmc0a3T9OrF925ZN45vHL23dtlX8e67jOko2kxUJsO3YrL9RFNNsLhlod3tqrpCXf1V0b+YeczxHehZvn9rp0/80YChPHlPAcP8WYADnK/w3MFxCuwAAAABJRU5ErkJggg==</content>
</attachment>
<object>
<class>
<name>XWiki.TagClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<tags>
<cache>0</cache>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>tags</name>
<number>1</number>
<prettyName>Tags</prettyName>
<relationalStorage>1</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>30</size>
<unmodifiable>0</unmodifiable>
<values></values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</tags>
</class>
<name>CreateResources.ACELessonPlan</name>
<number>0</number>
<className>XWiki.TagClass</className>
<property>
<tags/>
</property>
</object>
<content>
####################################	If not login, show login information
#if( $context.user=="XWiki.XWikiGuest" )
  #set( $logredir = $xwiki.getRequestURL() )
  #set( $url = $xwiki.getURL("XWiki.XWikiLogin","login","xredirect=$logredir") )
  $msg.get("createresources.needaccount", [$url])
#else
####################################	If logined, show ACELessonPlan page
  #includeMacros("CreateResources.StyledMacros")

  #set( $pageName   = $request.getParameter("pageName") )
  #set( $cameFrom   = $request.getParameter("cameFrom") )
  #set( $flow       = $request.getParameter("flow") )
  #set( $parentPage = $request.getParameter("parentPage") )
  #set( $publishSpace = $request.getParameter("publishSpace") )
  #if( "$!pageName" != "" ) 
     #set( $newAsset  = $xwiki.curriki.fetchAsset($pageName) )
  #else
     #set( $newAsset = $xwiki.curriki.createAsset($xwiki.null) )
  #end 

####################################	If newAsset is null, show error message
  #if( "$!newAsset"=="" ) 
    #if( "$!pageName" != "" )&lt;p&gt;asset creation error:&lt;/p&gt;#else&lt;p&gt;asset lookup error:&lt;/p&gt;#end
    &lt;dl&gt;
      &lt;dt&gt;request.method&lt;/dt&gt;&lt;dd&gt;$!request.method&lt;/dd&gt;
      &lt;dt&gt;request.page&lt;/dt&gt;&lt;dd&gt;$!request.page&lt;/dd&gt;
      &lt;dt&gt;getParameter("pageName")&lt;/dt&gt;&lt;dd&gt;$!pageName&lt;/dd&gt;
      &lt;dt&gt;getParameter("cameFrom")&lt;/dt&gt;&lt;dd&gt;$!cameFrom&lt;/dd&gt;
      &lt;dt&gt;getParameter("flow")&lt;/dt&gt;&lt;dd&gt;$!flow&lt;/dd&gt;
      &lt;dt&gt;getParameter("parentPage")&lt;/dt&gt;&lt;dd&gt;$!parentPage&lt;/dd&gt;
      &lt;dt&gt;getParameter("publishSpace")&lt;/dt&gt;&lt;dd&gt;$!publishSpace&lt;/dd&gt;
    &lt;/dl&gt;
  #else
####################################	else ,show page
{pre}
&lt;script language="javascript" type="text/javascript"&gt;

function checkStandardLessonPlanForm() {
  var missed_fields_str = '';
  if (getFieldContentStr('XWiki.AssetClass_0_title') == null) {
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.title')');
  }
  if (getFieldContentStr('XWiki.AssetClass_0_description') == null) {
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.description')');
  }
  {
    var form_fw_items = getFieldContentStr('XWiki.AssetClass_0_fw_items');
    if ((form_fw_items == null) || (form_fw_items == 'FW_masterFramework.WebHome')) {
      missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.subject')');
    }
  }
  { // Eductional-Level -- for validation, must look at "checked" on each button.
    var one_checked = false;
    for (var idx = 0, form_checkboxes = document.forms.inline['XWiki.AssetClass_0_educational_level2'];
	 ((idx &lt; form_checkboxes.length) &amp;&amp; !one_checked);
	 idx++) {
      if (form_checkboxes[idx].checked) {
	one_checked = true;
      }
    }
    if (!one_checked) {
      missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.level')');
    } 
  }

  if (getFieldContentStr('slp_number_days') == null) {
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '- $msg.get('Number of Days')');
  }
  if (getFieldContentStr('slp_prior_knowledge') == null) {
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '- $msg.get('Prior Knowledge')');
  }
  if (getFieldContentStr('slp_lesson_objective') == null) {
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '- $msg.get('Lesson Objective')');
  }
  if (getFieldContentStr('slp_lesson_assessment') == null) {
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '- $msg.get('Lesson Assessment')');
  }

if(!chekcTableText()){
	missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '- $msg.get('Procedures')');
}

  if (getFieldContentStr('XWiki.AssetLicenseClass_0_rightsHolder') == null) {
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, '$msg.get('lesson.plan.required.fields.dialog.rights')');
  }
  if (getAttachmentsSize() &gt; $msg.get("lesson.plan.file.size.maximum")) {
    missed_fields_str = missed_fields_str + '\n\n' + '$msg.get('lesson.plan.file.size.oversize')';
  }
  var error_msg = "";
  if(missed_fields_str != ''){
	error_msg = '$msg.get('lesson.plan.required.fields.dialog')' + missed_fields_str;
  }else{
    if (getFieldContentStr('XWiki.AssetClass_0_title').length &gt; 250) {
      error_msg = '$msg.get("ace.lesson.plan.title.more.250")';
    }
  }

  if (error_msg != '') { // since theres error messages, validation failed... bail out.
    alert(error_msg);
    setTextAssetToWikiText('$msg.get('form.done.wysiwyg.error.wikitext')');  // not POSTing due to 'false' return below, so this should not matter -- reset in case of going "back" in browser after successful POST??
    setSuccessMessage('');     //not POSTing due to 'false' return below, so this should not matter -- reset in case of going "back" in browser after successful POST??
    return false;
  }
  else { 
  
    setTextAssetToWikiText(formatTextareasIntoWikiText());
    setSuccessMessage('$msg.get('form.done.created.lessonplan')');
    return true;
  }
}

function checkStandardLessonPlanDirty() {
  if (getAttachmentsSize() &gt; 0) {
    return true;
  }
  if (getFieldContentStr('XWiki.AssetClass_0_title') != null) {
    return true;
  }
  if (getFieldContentStr('XWiki.AssetClass_0_description') != null) {
    return true;
  }
  if (getFieldContentStr('slp_number_days') != null) {
    return true;
  }
  if (getFieldContentStr('slp_prior_knowledge') != null) {
    return true;
  }
  if (getFieldContentStr('slp_lesson_objective') != null) {
    return true;
  }
  if (getFieldContentStr('slp_lesson_assessment') != null) {
    return true;
  }

  return false;
}

function formatTextareasIntoWikiText() { 			
  var slp_str = '';		// the string we concat into the TextAssetClass contents
  var title_markup_str = '*';
  var vert_break_str = '\\\\\n\n'

  slp_str = title_markup_str + '$msg.get("ace.lesson.plan.output.heading.content")' + title_markup_str +  vert_break_str + '&lt;div id="div_form_title_img"&gt;&lt;img src="$msg.get("ace.lesson.plan.output.heading.icon.url")" width="$msg.get("ace.lesson.plan.output.heading.icon.width")" height="$msg.get("ace.lesson.plan.output.heading.icon.height")"/&gt;&lt;/div&gt;';

  {
    var form_number_days = getFieldContentStr('slp_number_days');
    if (form_number_days != null) {
      slp_str = ((slp_str != '') ? (slp_str + vert_break_str) : '') + title_markup_str + '$msg.get("ace.lesson.plan.number.days.title")' + title_markup_str +  vert_break_str + '&lt;div id="div_form_number_days"&gt;' + form_number_days + '&lt;/div&gt;';
    }
  } 

  {
    var form_prior_knowledge = getFieldContentStr('slp_prior_knowledge');
    if (form_prior_knowledge != null) {
      slp_str = ((slp_str != '') ? (slp_str + vert_break_str) : '') + title_markup_str + '$msg.get("ace.lesson.plan.prior.knowledge.title")' + title_markup_str +  vert_break_str + '&lt;div id="div_form_prior_knowledge"&gt;' + form_prior_knowledge + '&lt;/div&gt;';
    }
  } 
  {
    var form_lesson_objective = getFieldContentStr('slp_lesson_objective');
    if (form_lesson_objective != null) {
      slp_str = ((slp_str != '') ? (slp_str + vert_break_str) : '') + title_markup_str + '$msg.get("ace.lesson.plan.lesson.objective.title")' + title_markup_str +  vert_break_str + '&lt;div id="div_form_lesson_objective"&gt;' + form_lesson_objective + '&lt;/div&gt;';
    }
  } 
  {
    var form_lesson_assessment = getFieldContentStr('slp_lesson_assessment');
    if (form_lesson_assessment != null) {
      slp_str = ((slp_str != '') ? (slp_str + vert_break_str) : '') + title_markup_str + '$msg.get("ace.lesson.plan.lesson.assessment.title")' + title_markup_str +  vert_break_str + '&lt;div id="div_form_lesson_assessment"&gt;' + form_lesson_assessment + '&lt;/div&gt;';
    }
  } 
  {
    var form_benchmark_standards = getFieldContentStr('slp_benchmark_standards');
    if (form_benchmark_standards != null) {
      slp_str = ((slp_str != '') ? (slp_str + vert_break_str) : '') + title_markup_str + '$msg.get("ace.lesson.plan.benchmark.standards.title")' + title_markup_str +  vert_break_str + '&lt;div id="div_form_benchmark_standards"&gt;' + form_benchmark_standards + '&lt;/div&gt;';

    }
  } 
  {
    var form_materials_needed = getFieldContentStr('slp_materials_needed');
    if (form_materials_needed != null) {
      slp_str = ((slp_str != '') ? (slp_str + vert_break_str) : '') + title_markup_str + '$msg.get("ace.lesson.plan.materials.needed.title")' + title_markup_str +  vert_break_str + '&lt;div id="div_form_materials_needed"&gt;' + form_materials_needed + '&lt;/div&gt;';
    }
  } 
  {
    var form_enrichment = getFieldContentStr('slp_enrichment');
    if (form_enrichment != null) {
      slp_str = ((slp_str != '') ? (slp_str + vert_break_str) : '') + title_markup_str + '$msg.get("ace.lesson.plan.enrichment.title")' + title_markup_str +  vert_break_str + '&lt;div id="div_form_enrichment"&gt;' + form_enrichment + '&lt;/div&gt;';
    }
  } 
  {
    var form_accommodations = getFieldContentStr('slp_accommodations');
    if (form_accommodations != null) {
      slp_str = ((slp_str != '') ? (slp_str + vert_break_str) : '') + title_markup_str + '$msg.get("ace.lesson.plan.accommodations.title")' + title_markup_str +  vert_break_str + '&lt;div id="div_form_accommodations"&gt;' + form_accommodations + '&lt;/div&gt;';
    }
  } 
  {
    var form_anticipated_problems = getFieldContentStr('slp_anticipated_problems');
    if (form_anticipated_problems != null) {
      slp_str = ((slp_str != '') ? (slp_str + vert_break_str) : '') + title_markup_str + '$msg.get("ace.lesson.plan.anticipated.problems.title")' + title_markup_str +  vert_break_str + '&lt;div id="div_form_anticipated_problems"&gt;' + form_anticipated_problems + '&lt;/div&gt;';
    }
  } 

  {	//js table
    var form_table_text = getTableText();
    if (form_table_text != null) {
      slp_str = ((slp_str != '') ? (slp_str + vert_break_str) : '') + title_markup_str + '$msg.get("ace.lesson.plan.procedures.title")' + title_markup_str +  vert_break_str + form_table_text
    }
  } 

  {
    var file_list = getAttachmentsNames();
    if (file_list.length &gt; 0) {
      slp_str = ((slp_str != '') ? (slp_str + vert_break_str) : '') + title_markup_str + '$msg.get("ace.lesson.plan.attachments.title")' + title_markup_str + vert_break_str + '#' + 'currikiattachmentBegin()\n';
      for (var idx = 0; (idx &lt; file_list.length); idx++) {
	// for macro currikiattachment($fname) see web/src/main/webapp/skins/curriki8/macros.vm
	slp_str = slp_str + '#' + 'currikiattachment("' + file_list[idx] + '")\n';
      }
      slp_str = slp_str + '#' + 'currikiattachmentEnd()\n' + vert_break_str;
    }
  }
  return (slp_str);
}

function setTextAssetToWikiText(str) {
  var input_field_TextAssetClass_o = $('XWiki.TextAssetClass_0_text');
  if (input_field_TextAssetClass_o != null) {
    input_field_TextAssetClass_o.value = str;
  }
  else { alert('error in setTextAssetToWikiText()'); }
}

function getFieldContentStr(field_id_str) {
  var field_content_o   = $(field_id_str);
  var field_content_str = (field_content_o==null) ? "" : field_content_o.value;
  if ((field_content_str.length &lt;= 1) || (field_content_str.trim() == '')) {
    return (null);
  }
  else {
    return (field_content_str);
  }
}

function setSuccessMessage(str) {
  var input_field_successMessage_o = $('successMessage');
  if (input_field_successMessage_o != null) {
    input_field_successMessage_o.value = str;
  }
  else { alert('error in setSuccessMessage()'); }
}

function appendSeparatedErrorMessageStr(message_str, missed_field_err_str) {
  return(message_str + '\n\t\t' + missed_field_err_str);
}

var needUnloadDialog = false;
function clearUnloadDialog() {
  needUnloadDialog = false;
}

function onWindowUnloading(e) {
  // if the form is not "dirty" don't pop form.leaving.dialog
  if (needUnloadDialog &amp;&amp; checkStandardLessonPlanDirty()) {
    e.browserEvent.returnValue = "$msg.get('form.leaving.dialog')";
  }
}

function setUnloadDialog() {
  // window.onbeforeunload = unloadDialog;
  Ext.EventManager.on(window, 'beforeunload', onWindowUnloading); 
  needUnloadDialog = true;
}

function getAttachmentsSize() {
  return (window.frames['attachment_iframe'].getAttachmentsSize());
}

function getAttachmentsNames() {
  return (window.frames['attachment_iframe'].getAttachmentsNames());
}

function setAttachmentsIframeSize() {
  var iframe_o = document.getElementById('attachment_iframe');
  try {
    if (iframe_o != null) {
      iframe_o.height = iframe_o.style.height = 50;  // attempt reset because FF behavior is grow-only
    }
    // this is portable way of getting at iframe DOM content per
    // http://www.mabaloo.com/Web-Development/Creating-controlling-and-manipulating-an-Iframe-through-JavaScript.html
    var doc_o = (iframe_o.contentWindow || iframe_o.contentDocument);  
    if (doc_o.document) {
      doc_o = doc_o.document;
    }
    // the iframe needs more space than 'scrollHeight' says, or we get
    // scrollbars. 5 seems to accomodate the inner and outer margin, and
    // inner and outer border, with one pixel for the margin itself.
    // nb: iframe_o.style.height only works in IE, does nothing in FF.
    // do em both for good measure?!
    if (iframe_o != null) {
      iframe_o.height = iframe_o.style.height = doc_o.body.scrollHeight + 5;
    }
  }
  catch(e) {
    if (iframe_o != null) {
      iframe_o.height = iframe_o.style.height = 300; // bigger default height value if things go wrong
    }
  } 
}
&lt;/script&gt;

&lt;style type="text/css"&gt;
.x-grid3-td-0{border-right: 1px solid lightgrey; padding-left: 0px !important;padding-right: 0px !important}
.x-grid3-td-1{border-right: 1px solid lightgrey; padding-left: 0px !important;padding-right: 0px !important}
.x-grid3-td-2{padding-left: 0px !important;padding-right: 0px !important}
.x-grid3-col-0{white-space: normal; word-break: break-all;}
.x-grid3-col-1{white-space: normal; word-break: break-all;}
.x-grid3-col-2{white-space: normal; word-break: break-all;}
.x-form-field-ace{overflow:hidden}

/* Curriki-form */
.curriki-form1 .headerbar { background-color: #93c53c; }
.curriki-form1 .headerbar { padding-left: 0.95em; }
.curriki-form1 em { font-style:normal; color: #fb0f0c; }
.curriki-form1 .header p { padding: 0 0 1em; }
.curriki-form1 .header p img { margin-bottom: -8px; height: 25px; width: 25px; }
.curriki-form1 .frame{ margin-bottom: 2em; }
.curriki-form1 .frame-content { padding: 0.5em 1em 1.5em; }
.curriki-form1 h3 { padding-top: 1em; }
.curriki-form1 .medium { width: 75%; }
.curriki-form1 .small { font-size: 100%; width: 50%; }
.curriki-form1 .entry { padding: 2em 0 0; }
.curriki-form1 .entry h5 { font-size: 1.1em; }
.curriki-form1 .entry h5 em { font-weight: normal; }
.curriki-form1 .entry h5 img { margin-bottom: -5px; }
.curriki-form1 .entry p.instruction { line-height: 130%; padding-bottom: 7px; }
.curriki-form1 .entry input.input { width: 90%; }
.curriki-form1 .entry textarea { height: 9em; width: 90%; }
.curriki-form1 .entry label { display: block; }
.curriki-form1 table.subject-educational { font-size: 1em; width: 95%; }
.curriki-form1 table.subject-educational td { width: 50%; padding-right: 1em; }
.curriki-form1 table.subject-educational td td { width: auto; }
.curriki-form1 .links { padding-bottom: 0; text-align: center; }
.curriki-form1 .links button { display: inline; margin-right: 1.5em; }
.curriki-form1 table.subject-educational th { background-color: transparent; }
.curriki-form1 table.subject-educational td { vertical-align: top; }
.curriki-form1 span.xwiki-form-listclass { display: block; margin: 3px 0 !important; margin: 0 0 2px; }
.curriki-form1 #XWiki\.AssetClass_0_title { width: 99% !important; width: 95%; }
.curriki-form1 textarea { height: 120px; }
.curriki-form1 textarea { padding: 1px 0; }
.curriki-form1 .mceEditorIframe { height: 18em !important; width: 100%  !important; }
.curriki-form1 .subject-educational .xwiki-form-listclass { padding-bottom: 1px !important; padding-bottom: 0; }
.curriki-form1 .subject-educational .ygtvlabel { display: block; padding-top: 4px; }
.curriki-form1 #attachment_iframe { padding: 10px; width: 100%; }

.curriki-form1_textarea { width: 99.5% !important; width: 95%; }
&lt;/style&gt;

&lt;script&gt; 

// ------------------------------------ extend extjs ------------------------------------
Ext.apply(Ext.grid.GridView.prototype,{
    // remove red triangles
    doRender : function(cs, rs, ds, startRow, colCount, stripe){
        var ts = this.templates, ct = ts.cell, rt = ts.row, last = colCount-1;
        var tstyle = 'width:'+this.getTotalWidth()+';';
        var buf = [], cb, c, p = {}, rp = {tstyle: tstyle}, r;
        for(var j = 0, len = rs.length; j &lt; len; j++){
            r = rs[j]; cb = [];
            var rowIndex = (j+startRow);
            for(var i = 0; i &lt; colCount; i++){
                c = cs[i];
                p.id = c.id;
                p.css = i == 0 ? 'x-grid3-cell-first ' : (i == last ? 'x-grid3-cell-last ' : '');
                p.attr = p.cellAttr = "";
                p.value = c.renderer(r.data[c.name], p, r, rowIndex, i, ds);
                p.style = c.style;
                if(p.value == undefined || p.value === "") p.value = "&amp;#160;";
                cb[cb.length] = ct.apply(p);
            }
            var alt = [];
            if(stripe &amp;&amp; ((rowIndex+1) % 2 == 0)){
                alt[0] = "x-grid3-row-alt";
            }
            if(r.dirty){
                alt[1] = " x-grid3-dirty-row";
            }
            rp.cols = colCount;
            if(this.getRowClass){
                alt[2] = this.getRowClass(r, rowIndex, rp, ds);
            }
            rp.alt = alt.join(" ");
            rp.cells = cb.join("");
            buf[buf.length] =  rt.apply(rp);
        }
        return buf.join("");
    },
    
    // private
    layout : function(){
        if(!this.mainBody){
            return; // not rendered
        }
        var g = this.grid;
        var c = g.getGridEl();
        var csize = c.getSize(true);
        var vw = csize.width;

        if(vw &lt; 20 || csize.height &lt; 20){ // display: none?
            return;
        }

        if(g.autoHeight){
            this.scroller.dom.style.overflow = 'hidden';
        }else{
            this.el.setSize(csize.width, csize.height);

            var hdHeight = this.mainHd.getHeight();
            var vh = csize.height - (hdHeight);

            this.scroller.setSize(vw, vh);
            if(this.innerHd){
                this.innerHd.style.width = (vw)+'px';
            }
        }
        if(this.forceFit){
            if(this.lastViewWidth != vw){
                this.fitColumns(false, false);
                this.lastViewWidth = vw;
            }
        }else {
            this.autoExpand();
            this.syncHeaderScroll();
        }
        this.onLayout(vw, vh);
    }
});
Ext.apply(Ext.grid.EditorGridPanel.prototype,{
    // multi-lines wrapper and clear default value
    preEditValue : function(r, field){
        var value = r.data[field];
        if(!r.dirty||(r.dirty &amp;&amp; typeof r.modified[field] == 'undefined')){
            value='';
        }else if(typeof value == 'string'){
            value=value.replace(/&lt;br\/&gt;/gi,'\r\n');
            value=this.autoEncode ? Ext.util.Format.htmlDecode(value) : value;
        }
        return value;
    },
    postEditValue : function(value, originalValue, r, field){
        if(typeof value == 'string'){
            value=this.autoEncode ? Ext.util.Format.htmlEncode(value) : value;
            value=value.replace(/\r\n/gi,"&lt;br/&gt;").replace(/\n/gi,'&lt;br/&gt;');
        }
        delete Ext.currentCellNode;
        return value;
    }
});
Ext.apply(Ext.grid.GridEditor.prototype, {
    // set auto size
    autoSize: true,
    doAutoSize : function(){
        if(this.autoSize){
            var parentNode=this.boundEl.dom.parentNode;
            var width=parentNode.clientWidth;
            var height=parentNode.clientHeight;
            switch(this.autoSize){
                case "width":
                    this.setSize(width,  "");
                break;
                case "height":
                    this.setSize("",  height-1);
                break;
                default:
                    this.setSize(width,  height-1);
            }
            Ext.currentCellNode=parentNode;
        }
    }
});
Ext.apply(Ext.form.TextArea.prototype, {
    // auto size cell
    onKeyUpBuffered : function(e){
        if(!e.isNavKeyPress()||e.getKey()==e.ENTER){
            this.autoSize();
        }
    },
    autoSize : function(){
        if(!this.grow || !this.textSizeEl){
            return;
        }
        var el = this.el;
        var v = el.dom.value;
        var ts = this.textSizeEl;
        ts.innerHTML = '';
        ts.appendChild(document.createTextNode(v));
        v = ts.innerHTML;
        Ext.fly(ts).setWidth(this.el.getWidth());
        if(v.length &lt; 1){
            v = "&amp;#160;&amp;#160;";
        }else{
            if(Ext.isIE){
                v = v.replace(/\n/g, '&lt;p&gt;&amp;#160;&lt;/p&gt;');
            }
            v += this.growAppend;
        }
        ts.innerHTML = v;
        var h = Math.min(this.growMax, Math.max(ts.offsetHeight, this.growMin)+this.growPad);
        if(h != this.lastHeight){
            if(Ext.currentCellNode){
                if(h&gt;Ext.currentCellNode.clientHeight){
                    this.lastHeight = h;
                    this.el.setHeight(h);
                    this.fireEvent("autosize", this, h);
                    if(Ext.isIE){
                        Ext.currentCellNode.style.height=h;
                    }else{
                        Ext.currentCellNode.setStyle('height:'+h+'px');

                    }
                }
            }else{
                this.lastHeight = h;
                this.el.setHeight(h);
                this.fireEvent("autosize", this, h);
            }
        }
    }
});
// ------------------------------------ wzToolTip tt_Init ------------------------------------
function tt_Init2(){
    if(!(tt_op || tt_n4 || tt_n6 || tt_ie || tt_w3c)) return;
    var htm = tt_n4? '&lt;div style="position:absolute;"&gt;&lt;/div&gt;' : '', tags, t_tj, over, esc = 'return escape(';
    var i = tt_tags.length;
    while(i--){
        tags = tt_ie? (document.all.tags(tt_tags[i]) || 1)
            : document.getElementsByTagName? (document.getElementsByTagName(tt_tags[i]) || 1)
            : (!tt_n4 &amp;&amp; tt_tags[i]=="a")? document.links
            : 1;
        if(tt_n4 &amp;&amp; (tt_tags[i] == "a" || tt_tags[i] == "layer")) tags = tt_N4Tags(tt_tags[i]);
        var j = tags.length;
        while(j--){
            if(typeof (t_tj = tags[j]).onmouseover == "function" &amp;&amp; t_tj.onmouseover.toString().indexOf(esc) != -1 &amp;&amp; !tt_n6 || tt_n6 &amp;&amp; (over = t_tj.getAttribute("onmouseover")) &amp;&amp; over.indexOf(esc) != -1){
                if(over) t_tj.onmouseover = new Function(over);
                var txt = unescape(t_tj.onmouseover());
                htm += tt_Htm(
                    t_tj,
                    "tOoLtIp"+i+""+j,
                    txt.wzReplace("&amp; ","&amp;")
                );
                t_tj.onmouseover = new Function('e',
                    'tt_Show(e,'+
                    '"tOoLtIp' +i+''+j+ '",'+
                    ((typeof t_tj.T_ABOVE != tt_u)? t_tj.T_ABOVE : ttAbove)+','+
                    ((typeof t_tj.T_DELAY != tt_u)? t_tj.T_DELAY : ttDelay)+','+
                    ((typeof t_tj.T_FIX != tt_u)? '"'+t_tj.T_FIX+'"' : '""')+','+
                    ((typeof t_tj.T_LEFT != tt_u)? t_tj.T_LEFT : ttLeft)+','+
                    ((typeof t_tj.T_OFFSETX != tt_u)? t_tj.T_OFFSETX : ttOffsetX)+','+
                    ((typeof t_tj.T_OFFSETY != tt_u)? t_tj.T_OFFSETY : ttOffsetY)+','+
                    ((typeof t_tj.T_STATIC != tt_u)? t_tj.T_STATIC : ttStatic)+','+
                    ((typeof t_tj.T_STICKY != tt_u)? t_tj.T_STICKY : ttSticky)+','+
                    ((typeof t_tj.T_TEMP != tt_u)? t_tj.T_TEMP : ttTemp)+
                    ');'
                );
                t_tj.onmouseout = tt_Hide;
                if(t_tj.alt) t_tj.alt = "";
                if(t_tj.title) t_tj.title = "";
            }
        }
    }
    Element.insert("tooltip_div",{bottom:htm});
    if(document.getElementById) tt_ifrm = document.getElementById("TTiEiFrM");
}

// ------------------------------------ edit grid definition ------------------------------------

var data00 = "$msg.get('ace.lesson.plan.procedures.row1.time_sample')";
var data10 = "$msg.get('ace.lesson.plan.procedures.row2.time_sample')";
var data11 = "$msg.get('ace.lesson.plan.procedures.row2.learningtask_sample')";
var data12 = "$msg.get('ace.lesson.plan.procedures.row2.methodorprocedure_sample')";

var data=[
{id:1,time:data00,task:'',method:''},
{id:1,time:data10,task:data11,method:data12},
{id:1,time:'',task:'',method:''},
{id:1,time:'',task:'',method:''},
{id:1,time:'',task:'',method:''},
{id:1,time:'',task:'',method:''},
{id:1,time:'',task:'',method:''},
{id:1,time:'',task:'',method:''}
];

var store=new Ext.data.JsonStore(
{data:data,fields:["id","time","task","method"]}); 
#set($info_img = '/xwiki/skins/curriki8/icons/exclamation.png')
var tooltip1="&lt;span class=\"tooltip-generator\"&gt;&lt;span class=\"tooltip_span\" onmouseover=\"this.WIDTH='300'; return escape('$msg.get("ace.lesson.plan.procedures.time.tooltip")');\"&gt;&lt;img src='/xwiki/skins/curriki8/icons/exclamation.png' id='tooltip-image-instruction' class='tooltip-image'/&gt;&lt;/span&gt;&lt;/span&gt;";
var tooltip2="&lt;span class=\"tooltip-generator\"&gt;&lt;span class=\"tooltip_span\" onmouseover=\"this.WIDTH='300'; return escape('$msg.get("ace.lesson.plan.procedures.learningtask.tooltip")');\"&gt;&lt;img src='/xwiki/skins/curriki8/icons/exclamation.png' id='tooltip-image-instruction' class='tooltip-image'/&gt;&lt;/span&gt;&lt;/span&gt;";
var tooltip3="&lt;span class=\"tooltip-generator\"&gt;&lt;span class=\"tooltip_span\" onmouseover=\"this.WIDTH='300'; return escape('$msg.get("ace.lesson.plan.procedures.methods.tooltip")');\"&gt;&lt;img src='/xwiki/skins/curriki8/icons/exclamation.png' id='tooltip-image-instruction' class='tooltip-image'/&gt;&lt;/span&gt;&lt;/span&gt;";

var colM = new Ext.grid.ColumnModel([
        {id:"0",header:"Time"+tooltip1,dataIndex:"time",sortable:false,fixed:true,width:100,menuDisabled:true,editor:new Ext.form.TextArea({grow:true,fieldClass:'x-form-field-ace'})},
        {id:"1",header:"Learning Task"+tooltip2,dataIndex:"task",sortable:false,fixed:true,width:200,menuDisabled:true,editor:new Ext.form.TextArea({grow:true,fieldClass:'x-form-field-ace'})},
        {id:"2",header:"Method or Procedure"+tooltip3,dataIndex:"method",sortable:false,fixed:true,menuDisabled:true,editor:new Ext.form.TextArea({grow:true,fieldClass:'x-form-field-ace'})}
    ]);



function fn() { 
var grid = new Ext.grid.EditorGridPanel(
{renderTo:"procedures_div",title:"",height:200,width:570, cm:colM,store:store,autoExpandColumn:2,clicksToEdit:1,autoHeight:true,autoEncode:true,
	cls :' x-form-field-ace;',
	viewConfig: {scrollOffset: 2},
	fitContainer: true});

grid.on("cellclick", this.cellClick);
grid.on("afteredit",this.afterEdit,this);

tt_Init2();

} 

Ext.onReady(fn); 

function cellClick(obj, row, col, e){

	var record = obj.store.getAt(row);
	if(row == 0 &amp;&amp; col == 0){
		if(record.get("time") == data00)
			record.set("time", "");
	}else if(row == 1 &amp;&amp; col == 0){
		if(record.get("time") == data10)
			record.set("time", "");
	}else if(row == 1 &amp;&amp; col == 1){
		if(record.get("task") == data11)
			record.set("task", "");
	}else if(row == 1 &amp;&amp; col == 2){
		if(record.get("method") == data12)
			record.set("method", "");
	}
	//store.commitChanges(); 
}


function afterEdit(obj, row, col, e){
	var r=obj.record;
	var id=r.get("id");
	var name=r.get("name");
    //store.commitChanges(); 
	//Ext.MessageBox.alert("alertdiv","Hello,easyjf open source"); 
}

// insert new row
function addrow(){
	data=[{id:1,time:'',task:'',method:''}];
	store.loadData(data, true);
	return false;
}
function chekcTableText(){
	
	var arr = store.data;
	for(i=0;i&lt;arr.length;i++){
		var record = store.getAt(i);
		if(i == 0){
			if((record.get("time") != data00 &amp;&amp; record.get("time") != "") || record.get("task") != "" || record.get("method") != ""){
				return true;
			}
		}else if(i == 1){
			if((record.get("time") != data10 &amp;&amp; record.get("time") != "") || (record.get("task") != data11 &amp;&amp; record.get("task") != "") 
				|| (record.get("method") != data12 &amp;&amp; record.get("method") != "")){
				return true;
			}
		}else if(record.get("time") != "" || record.get("task") != "" || record.get("method") != ""){
			return true;
		}
	}
	return false;
}	

function formatTableString(str){
    str = str.replace(/&lt;br\/&gt;/gi,'\r\n');
    str = Ext.util.Format.htmlDecode(str);
	str = formatString(str, /#/g, "&amp;#35;");
	str = formatString(str, /1/g, "&amp;#49;");
	str = formatString(str, /\*/g, "&amp;#42;");
	str = formatString(str, /a/g, "&amp;#97;");
	str = formatString(str, /A/g, "&amp;#65;");
	str = formatString(str, /i/g, "&amp;#105;");
	str = formatString(str, /I/g, "&amp;#73;");
	str = formatString(str, /g/g, "&amp;#103;");
	str = formatString(str, /h/g, "&amp;#104;");
	str = formatString(str, /k/g, "&amp;#107;");
	str = formatString(str, /_/g, "&amp;#95;");
	str = formatString(str, /~/g, "&amp;#126;");
	str = formatString(str, /-/g, "&amp;#45;");
	str = formatString(str, /{/g, "&amp;#123;");
	str = formatString(str, /}/g, "&amp;#125;");
	str = formatString(str, /\(/g, "&amp;#40;");
	str = formatString(str, /\)/g, "&amp;#41;");
	str = formatString(str, /\|/g, "&amp;#124;");
	str = formatString(str, /\$/g, "&amp;#36;");
	str = formatString(str, /@/g, "&amp;#64;");
	str = formatString(str, /\[/g, "&amp;#91;");
	str = formatString(str, /\]/g, "&amp;#93;");
	str = formatString(str, /&lt;/g, "&amp;#60;");
	str = formatString(str, /&gt;/g, "&amp;#62;");
    str = str.replace(/\r\n/gi,"\\\\")
	return str;
}
function formatString(str, reg, repls){
    return str.replace(reg, repls)
}	

function getTableText(){
	var str = '\{table\}';
	str += 'Time | Learning Task | Method or Procedure\r\n';

	var arr = store.data;
	for(i=0;i&lt;arr.length;i++){
		var record = store.getAt(i);
		var time = record.get("time");
		var task = record.get("task");
		var method = record.get("method");
		
		if(i == 0 &amp;&amp; time == data00){
			time = "";
		}
		if(i == 1){
			if(time == data10){
				time = "";
			}
			if(task == data11){
				task = "";
			}
			if(method == data12){
				method = "";
			}
		}

		if(time != "" || task != "" || method != ""){
			time = formatTableString(time);
			time = (time == "" ? "&amp;#160;" : time);
			task = formatTableString(task);
			task = (task == "" ? "&amp;#160;" : task);
			method = formatTableString(method);
			method = (method == "" ? "&amp;#160;" : method);
			str += time + ' | ' + task + ' | ' + method + '\r\n';
		}
	}
	str += '\{table\}';

	return str;
}
&lt;/script&gt;
{/pre}
####################################	JS end , title
#set( $noDialogs = $request.getParameter("noDialogs") )  ## ?noDialogs=1 turns off add-path dialogs, for testing, or to enable "edit-again"

  &lt;div class="header"&gt;
  #curriki_formtitle($msg.get("ace.lesson.plan.title"))
  $msg.get("ace.lesson.plan.title.description") &lt;a href="$msg.get('ace.lesson.plan.title.description.link1.url')" target="_blank"&gt;$msg.get("ace.lesson.plan.title.description.link1")&lt;/a&gt;&lt;span class="separator"&gt;&amp;nbsp;|&amp;nbsp;&lt;/span&gt;&lt;a href="$msg.get('ace.lesson.plan.title.description.link3.url')" target="_blank"&gt;$msg.get("ace.lesson.plan.title.description.link3")&lt;/a&gt;&lt;span class="separator"&gt;&amp;nbsp;|&amp;nbsp;&lt;/span&gt;&lt;a href="$msg.get('ace.lesson.plan.title.description.link2.url')" target="_blank"&gt;$msg.get("ace.lesson.plan.title.description.link2")&lt;/a&gt;&lt;a href="$msg.get('ace.lesson.plan.title.description.link2.thumbnail.url')"&gt;&lt;img src="$msg.get('ace.lesson.plan.title.description.link2.thumbnail')" align="middle"&gt;&lt;/a&gt;
  &lt;br /&gt;$msg.get("form.required.fields.instruction")
  &lt;/div&gt;

  &lt;form action="" class="curriki-form1" id="inline" method="post"&gt;
	  &lt;input type="hidden" name="xredirect" value="$xwiki.getFormEncoded($xwiki.getRequestURL())" /&gt;
	  ##sign validation result, default is validate not passed
	  &lt;input type="hidden"  name="XWiki.TextAssetClass_0_text" id="XWiki.TextAssetClass_0_text" value="$msg.get('form.done.wysiwyg.error.wikitext')" /&gt;
	  &lt;input type="hidden"  name="XWiki.TextAssetClass_0_type" id="XWiki.TextAssetClass_0_type" value="0" /&gt;
	  &lt;input type="hidden"  name="XWiki.AssetClass_0_instructional_component2" id="XWiki.AssetClass_0_instructional_component2" value="curriculum_lp" /&gt;
	  &lt;input type="hidden"  name="XWiki.AssetClass_0_hidden_from_search" id="XWiki.AssetClass_0_hidden_from_search" value="0" /&gt; 
	  &lt;input type="hidden"  name="XWiki.AssetClass_0_category" id="XWiki.AssetClass_0_category" value="text" /&gt; 
	  ## successMessage is null, validation not passed
	  &lt;input type="hidden" 	name="successMessage" id="successMessage" value=""      /&gt;
	  &lt;input type="hidden" 	name="page"		value="$!request.page"		/&gt;
	  &lt;input type="hidden"	name="pageName"		value="$!newAsset.fullName"	/&gt;
	  &lt;input type="hidden"	name="publishSpace"	value="$!publishSpace"		/&gt;
	  &lt;input type="hidden"	name="parentPage"	value="$!parentPage"		/&gt;
	  #if( "$!noDialogs"!="" )
	    &lt;input type="hidden"	name="noDialogs"	value="$noDialogs"		/&gt;
	  #else                                   
	    &lt;input type="hidden"	name="flow"		value="$!flow"			/&gt;
	    &lt;input type="hidden"	name="cameFrom"  #if( "$!cameFrom"=="" ) value="$msg.get('ace.lesson.plan.url')"  #else   value="$!cameFrom"   #end /&gt;
	  #end             
####################################	step1  
  #curriki_formpart_begin($msg.get("ace.lesson.plan.step1.header"))
  #curriki_forminstructions($msg.get("ace.lesson.plan.step1.instruction"))
  #curriki_formprompt($msg.get("sri.title_title"), $msg.get("ace.lesson.plan.title_tooltip"), $msg.get("ace.lesson.plan.title_txt"), true, "medium")
  $newAsset.display("title","edit")
  #curriki_formprompt($msg.get("sri.description_title"), $msg.get("ace.lesson.plan.description_tooltip"), $msg.get("ace.lesson.plan.description_txt"), true, "medium")
  $newAsset.display("description","edit")
  &lt;table class="subject-educational"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;
  #curriki_formprompt($msg.get("sri.fw_items_title"), $msg.get("sri.fw_items_tooltip"), $msg.get("sri.fw_items_txt"), true, "")
  $newAsset.display("fw_items","edit")
  &lt;/td&gt;&lt;td&gt;
  #curriki_formprompt($msg.get("sri.educational_level_title"), $msg.get("sri.educational_level_tooltip"), $msg.get("sri.educational_level_txt"), true, "medium")
  $newAsset.display("educational_level2","edit")
  &lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt; ##class="subject-educational"
  #curriki_formprompt($msg.get("sri.keywords_title"), $msg.get("sri.keywords_tooltip"), $msg.get("sri.keywords_txt"), false, "medium")
  $newAsset.display("keywords","edit")
  #curriki_formprompt($msg.get("sri.language_title"), $msg.get("sri.language_tooltip"), $msg.get("sri.language_txt"), false, "medium")
  $newAsset.display("language","edit")
  #curriki_formpart_end() 
####################################	step2
  #curriki_formpart_begin($msg.get("ace.lesson.plan.step2.header")) ## {
  #curriki_forminstructions($msg.get("ace.lesson.plan.step2.instruction"))

  #curriki_formprompt($msg.get("ace.lesson.plan.introduction.title"), $msg.get("ace.lesson.plan.introduction.tooltip"), $msg.get("ace.lesson.plan.introduction.instruction"), true, "medium")
  &lt;textarea id='slp_number_days' name='slp_number_days' class='curriki-form1_textarea'&gt;&lt;/textarea&gt;  

  #curriki_formprompt($msg.get("ace.lesson.plan.group.size.title"), $msg.get("ace.lesson.plan.group.size.tooltip"), $msg.get("ace.lesson.plan.group.size.instruction"), true, "medium")
  &lt;textarea id='slp_prior_knowledge' name='slp_prior_knowledge' class='curriki-form1_textarea'&gt;&lt;/textarea&gt;  

  #curriki_formprompt($msg.get("ace.lesson.plan.learning.objectives.title"), $msg.get("ace.lesson.plan.learning.objectives.tooltip"), $msg.get("ace.lesson.plan.learning.objectives.instruction"), true, "medium")
  &lt;textarea id='slp_lesson_objective' name='slp_lesson_objective' class='curriki-form1_textarea'&gt;&lt;/textarea&gt;  

  #curriki_formprompt($msg.get("ace.lesson.plan.assessment.title"), $msg.get("ace.lesson.plan.assessment.tooltip"), $msg.get("ace.lesson.plan.assessment.instruction"), true, "medium")
  &lt;textarea id='slp_lesson_assessment' name='slp_lesson_assessment' class='curriki-form1_textarea'&gt;&lt;/textarea&gt;  

  #curriki_formprompt($msg.get("ace.lesson.plan.standards.title"), $msg.get("ace.lesson.plan.standards.tooltip"), $msg.get("ace.lesson.plan.standards.instruction"), false, "medium")
  &lt;textarea id='slp_benchmark_standards' name='slp_benchmark_standards' class='curriki-form1_textarea'&gt;&lt;/textarea&gt;  

  #curriki_formprompt($msg.get("ace.lesson.plan.materials.title"), $msg.get("ace.lesson.plan.materials.tooltip"), $msg.get("ace.lesson.plan.materials.instruction"), false, "medium")
  &lt;textarea id='slp_materials_needed' name='slp_materials_needed' class='curriki-form1_textarea'&gt;&lt;/textarea&gt;  

  #curriki_formprompt($msg.get("ace.lesson.plan.enrichment.title"), $msg.get("ace.lesson.plan.enrichment.tooltip"), $msg.get("ace.lesson.plan.enrichment.instruction"), false, "medium")
  &lt;textarea id='slp_enrichment' name='slp_enrichment' class='curriki-form1_textarea'&gt;&lt;/textarea&gt;  

  #curriki_formprompt($msg.get("ace.lesson.plan.accommodations.title"), $msg.get("ace.lesson.plan.accommodations.tooltip"), $msg.get("ace.lesson.plan.accommodations.instruction"), false, "medium")
  &lt;textarea id='slp_accommodations' name='slp_accommodations' class='curriki-form1_textarea'&gt;&lt;/textarea&gt;  

  #curriki_formprompt($msg.get("ace.lesson.plan.anticipated.problems.title"), $msg.get("ace.lesson.plan.anticipated.problems.tooltip"), $msg.get("ace.lesson.plan.anticipated.problems.instruction"), false, "medium")
  &lt;textarea id='slp_anticipated_problems' name='slp_anticipated_problems' class='curriki-form1_textarea'&gt;&lt;/textarea&gt;  

  #curriki_formprompt($msg.get("ace.lesson.plan.procedures.title"), $msg.get("ace.lesson.plan.procedures.tooltip"), $msg.get("ace.lesson.plan.procedures.instruction"), true, "medium")
  &lt;div id="procedures_div"&gt; &lt;/div&gt;  &lt;button class="button button-orange" onclick="return addrow();"&gt;$msg.get("ace.lesson.plan.procedures.addrow")&lt;/button&gt;

## Required Resources (attachments) -- fileselection w/ buttons
  #curriki_formprompt($msg.get("lesson.plan.required.attachments.title"), $msg.get("lesson.plan.required.attachments.tooltip"), $msg.get("lesson.plan.required.attachments.instruction"), false, "")
&lt;iframe src="$newAsset.getURL("view", "xpage=lpattachments")"
        onload="try { setAttachmentsIframeSize(); } catch(e) { alert('iframe onload error: '+e+' ...'); return false; }"
        id="attachment_iframe" name="attachment_iframe" width="100%" scrolling="auto" marginheight="0" marginwidth="0"	frameborder="0" &gt;
  &lt;h2&gt;Sorry, your browser doesn't support iframes. Attachment Uploading functionality disabled.&lt;/h2&gt; 
&lt;/iframe&gt;
  #curriki_formpart_end() ## }
####################################	step3
  #curriki_formpart_begin($msg.get("form.scratch.step3.header")) 
  #curriki_forminstructions($msg.get("form.scratch.step3.instruction"))
  #curriki_formprompt($msg.get("sri.right_holder_title"), $msg.get("sri.right_holder_tooltip"), $msg.get("sri.right_holder_txt"), true, "medium")
  $newAsset.display("rightsHolder","edit")
  #curriki_formprompt($msg.get("sri.rights_title"), $msg.get("sri.rights_tooltip"), $msg.get("sri.rights_txt"), false, "medium")
  $newAsset.display("rights","edit")

  #curriki_formprompt($msg.get("sri.license_type_title"), $msg.get("sri.license_type_tooltip"), $msg.get("sri.license_type_txt"), false, "medium")
  &lt;p&gt;&lt;label&gt;$msg.get("sri.license_type_heading")&lt;/label&gt;&lt;/p&gt;		
  $newAsset.display("licenseType2","edit")
  #curriki_formpart_end() 
####################################	step4
  #curriki_formpart_begin($msg.get("form.scratch.step4.header")) 
  &lt;p&gt;&lt;label&gt;$msg.get("ace.form.scratch.step4.instruction")&lt;/label&gt;&lt;/p&gt;
  &lt;p class="links"&gt;
     &lt;button
      onclick="try { if (document.forms.inline.onsubmit) document.forms.inline.onsubmit(); if (checkStandardLessonPlanForm()) { clearUnloadDialog(); startWaitingDialog(); document.forms.inline.action='$msg.get("form.done.url")'; document.forms.inline.submit(); } return false; } catch(e) { alert('$msg.get("form.scratch.submit.button") button onclick error: '+e+' ...'); return false; }"
      &gt;$msg.get("form.scratch.submit.button")&lt;/button&gt;
     #if( "$!cameFrom" != "" ) 
       #set( $cancelURL = $cameFrom )
     #else 
       #set( $cancelURL = $xwiki.getURL("Main.WebHome") ) ## cameFrom not set means go to WebHome
     #end 
     &lt;button class="cancel"
      onclick="try { clearUnloadDialog(); window.location.href='$cancelURL'; return false; } catch(e) { alert('$msg.get("form.scratch.cancel.button") button onclick error: '+e+' ...'); return false; }"
      &gt;$msg.get("form.scratch.cancel.button")&lt;/button&gt;
  &lt;/p&gt;
  #curriki_formpart_end() 
&lt;!--
  &lt;div class="tooltips"&gt;
    {pre} ##$xwiki.addTooltipJS() {/pre}
  &lt;/div&gt;
--&gt;
&lt;div id="tooltip_div" class="tooltips"&gt;&lt;/div&gt;
  &lt;/form&gt;

{pre}
&lt;script language="javascript" type="text/javascript"&gt;
function startWaitingDialog() {
#if( "$!noDialogs"!="1" )
  Curriki.showLoading();
#end
}
setUnloadDialog();
//tinyMCE.convertURL = function(url, node, on_save) { return url; };
&lt;/script&gt;
{/pre}
#end ## } -- else, aka "$!newAsset"!="" 
#end ## } -- $context.user=="XWiki.XWikiGuest"
</content></xwikidoc>