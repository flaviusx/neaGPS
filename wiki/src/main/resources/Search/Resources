<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
<web>Search</web>
<name>Resources</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent></parent>
<creator>XWiki.dward</creator>
<author>XWiki.dward</author>
<customClass></customClass>
<contentAuthor>XWiki.dward</contentAuthor>
<creationDate>1218122764000</creationDate>
<date>1219972967000</date>
<contentUpdateDate>1219972967000</contentUpdateDate>
<version>31.1</version>
<title></title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment>a</comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/1.0</syntaxId>
<object>
<class>
<name>XWiki.TagClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<tags>
<cache>0</cache>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>tags</name>
<number>1</number>
<prettyName>Tags</prettyName>
<relationalStorage>1</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>30</size>
<unmodifiable>0</unmodifiable>
<values></values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</tags>
</class>
<name>Search.Resources</name>
<number>0</number>
<className>XWiki.TagClass</className>
<property>
<tags/>
</property>
</object>
<content>## vim: ts=4:sw=4
{pre}
## start=0&amp;limit=25&amp;sort=title&amp;dir=ASC
## terms=&amp;subject=&amp;filetype=&amp;level=&amp;language=&amp;ict=&amp;special=
## return  root: results, totalProperty: totalCount
##   pagename, title, ict, contributor, contributorName, review
#set($lucene = $xwiki.getPlugin("lucene"))
#if(!$lucene) ##{
	{'resultCount':'0', 'rows':[]}
#else ## }{
	##
	## Set start and limit for result list
	##
	#set($Integer = 0)
	#set($start = 0)
	#if($!request.start != "") ##{
		#set($start = $Integer.parseInt($request.start))
	#end ##}
	#set($start = 1 + $start)
	#set($start = "$start")
	#set($limit = 25)
	#if($!request.limit != "") ##{
		#set($limit = $request.limit)
	#end ##}
	##
	## Set sort field
	##
	#set($sortField = 'XWiki.AssetClass.title')
	#if($!request.sort != "") ##{
		#if($request.sort == "title") ##{
			#set($sortField = 'XWiki.AssetClass.title')
		#end ##}
		#if($request.sort == "ictText") ##{
			#set($sortField = 'XWiki.AssetClass.instructional_component2')
		#end ##}
		#if($request.sort == "contributor") ##{
			#set($sortField = 'creator')
		#end ##}
		#if($request.sort == "review") ##{
			#set($sortField = 'CRS.CurrikiReviewStatusClass.status')
		#end ##}
	#end ##}
	#if($!request.dir == "DESC") ##{
		#set($sortField = "-${sortField}")
	#end ##}
	##
	## Create query
	##
	#set($q = $xwiki.arrayList)
	##
	## Terms
	#if($!request.terms != "") ##{
		#set($junk = $q.add("${request.terms}"))
	#end ##}
	##
	## Subject
	#if($!request.subject != "") ##{
		#set($junk = $q.add("XWiki.AssetClass.fw_items:${request.subject}"))
	#end ##}
	##
	## FileType
	#if($!request.filetype != "") ##{
		#set($junk = $q.add("XWiki.AssetClass.category:${request.filetype}"))
	#end ##}
	##
	## Level
	#if($!request.level != "") ##{
		#set($junk = $q.add("XWiki.AssetClass.educational_level2.key:${request.level}"))
	#end ##}
	##
	## Language
	#if($!request.language != "") ##{
		#set($junk = $q.add("XWiki.AssetClass.language:${request.language}"))
	#end ##}
	##
	## ICT
	#if($!request.ict != "") ##{
		#set($junk = $q.add("XWiki.AssetClass.instructional_component2.key:${request.ict}"))
	#end ##}
	##
	## Review
	## partners, highest_rated
	#if($!request.review != "") ##{
		#if($request.review == "partners")##{
			#set($junk = $q.add("CRS.CurrikiReviewStatusClass.status:P"))
		#end ##}
		#if($request.review == "highest_rated")##{
			#set($junk = $q.add("CRS.CurrikiReviewStatusClass.status:3"))
		#end ##}
	#end ##}
	##
	## Special
	## contributions, collections, resources, updated
	#if($!request.special != "") ##{
		#if($request.special == "mine")##{
			#set($junk = $q.add("creator:${context.user}")) ## This is the full USERNAME, not realname
		#end ##}
		#if($request.special == "collections")##{
			#set($junk = $q.add("XWiki.CompositeAssetClass.type:collection"))
		#end ##}
		#if($request.special == "reviewed")##{
			#set($junk = $q.add("CRS.CurrikiReviewStatusClass.status:(1 OR 2 OR 3 OR P)"))
		#end ##}
		#if($request.special == "updated")##{
			#if($!request.since != "")##{
				#set($junk = $q.add("date:[${request.since} TO 29991231]"))
			#end ##}
		#end ##}
		#if($request.special == "groups")##{
			#set($junk = $q.add("web:Group_Coll_*"))
		#end ##}
	#end ##}
	##
	## Put together query conditions
	#set($conditions = "")
	#foreach($condition in $q) ##{
		#set($conditions = "$conditions AND $condition")
	#end ##}
	##
	## General query information
	#set($wikinames = "xwiki")
	#set($languages = "default,en")
	#set($include = "XWiki.AssetClass.fw_items:FW_masterFramework.WebHome")
	#set($exclude = "AND NOT XWiki.TextAssetClass.type:2 AND NOT web:AssetTemp AND NOT web:Coll_Templates AND NOT name:WebHome AND NOT name:WebPreferences AND NOT name:MyCollections AND NOT name:SpaceIndex AND NOT XWiki.AssetClass.hidden_from_search:1")
	#set($luceneQuery = "$include $conditions $exclude")
	##
	## Do query
	##
	#set($searchResults = $lucene.getSearchResults($luceneQuery, $sortField, $languages))
	#set($results = $searchResults.getResults($start, $limit))
	#set($resultCount = $searchResults.totalHitcount)
	##
	## List out results
	##
	#if($!resultCount == "") ##{
		#set($resultCount = 0)
	#end ##}
	{
'sortedby':'${sortField}',
	'rows':[
	#set($first = true)
	#foreach($result in $results) ##{
		##
		## Get each result
		#set($d = $xwiki.curriki.fetchAsset("${result.web}.${result.name}"))
		##
		## Get Title
		#findCurrikiTitle($d)
		#set($title = $currikiTitle)
		#if(!$title || $title.length() == 0) ## {
			#set($title = $msg.get("caption.untitled"))
		#end ## }
		#set($title = $title.replace("'", "&amp;#39;"))
		##
		## Get ICT
		#set($ict = "")
		#set($ict = $!d.getObject("XWiki.AssetClass").getProperty("instructional_component2").getValue())
		#if($ict == "" || $ict.size() == 0) ## {
			## No ICT set -- nothing to do
			#set($ictIcon = "")
			#set($ictRaw = "")
		#else ## } {
			#if($ict.size() &gt; 1) ## {
				##Multiple
				#set($icon = $xwiki.getSkinFile("icons/ICTIcon-Multiple.gif"))
				#set($text = $msg.get('search.results.col.ict.multiple'))
				#set($ictRaw = "multiple")
				#set($ictText = "search.selector.ict.${ictRaw}")
				#set($ictText = $msg.get($ictText))
			#else ## } {
				##Single
				#set($ict = $ict.get(0))
				#set($ictRaw = $ict)
				#set($ictIcon = "${ict.substring(0,1).toUpperCase()}${ict.substring(1)}")
				#set($ictIcon = $ictIcon.replaceFirst("_.*", ""))
				#set($ictIcon = $xwiki.getSkinFile("icons/ICTIcon-${ictIcon}.gif"))
				#set($ictText = $ict.replaceFirst("_", "."))
				#set($ictText = "search.selector.ict.${ictText}")
				#set($ictText = $msg.get($ictText))
			#end ## if not multiple ## }
		#end ## if not empty ## }
		##
		## Get Review
		#set($review = "")
		#set($review = $!d.getObject("CRS.CurrikiReviewStatusClass").getProperty("status").getValue())
		##
		## Get Asset Type
		#set($meta = $d.getMetadata())
		#foreach($prop in $meta) ##{
			#if($prop.getName() == 'assetType') ##{
				#set($assetType = $prop.getValue())
			#end ##}
		#end ##}
		##
		## Get Description
		#set($desc = "")
		#set($desc = $!d.getObject("XWiki.AssetClass").getProperty("description").getValue())
		#set($desc = $desc.replace("'", "&amp;#39;"))
		#set($desc = $desc.replaceAll("[\n|\r]+", "&lt;br /&gt;"))
		##
		## Get Expanded Info
		## TODO:  Get the proper expanded info here
		#set($info = "")
		#set($isComposite = $!d.getObject("XWiki.CompositeAssetClass"))
		#if($!isComposite) ##{
			#set($sql = ", BaseObject as composite, BaseObject as subasset, StringProperty as cprops, StringProperty as sprops where doc.name != 'Favorites' and composite.name=doc.fullName and composite.className='XWiki.CompositeAssetClass' and composite.id=cprops.id.id and cprops.id.name='type' and (cprops.value='collection' or cprops.value='curriki_document') and subasset.name=doc.fullName and subasset.id=sprops.id.id and subasset.className='XWiki.SubAssetClass' and sprops.id.name='assetpage' and sprops.value='${d.fullName}' order by doc.name")
			#set($parentList = $xwiki.searchDocuments($sql))
			#if($parentList.size() &gt; 0) ##{
				#set($info = "")
				#foreach($parentPage in $parentList) ##{
					#set($parentAsset = $xwiki.getDocument($parentPage))
					#findCurrikiTitle($parentAsset)
					#set($parentTitle = $currikiTitle)
					#if(!$parentTitle || $parentTitle.length() == 0) ## {
						#set($parentTitle = $msg.get("caption.untitled"))
					#end ## }
					## Get Parent Description
					#set($parentDesc = "")
					#set($parentUrl = "")
					#set($parentDesc = $!parentAsset.getObject("XWiki.AssetClass").getProperty("description").getValue())
					#set($parentDesc = $parentDesc.replace('"', "&amp;quot;"))
					#set($parentUrl = $xwiki.getURL($parentPage))
					#set($pinfo = '&lt;a href="'+$parentUrl+'" ext:qtitle="Description" ext:qtip="'+$parentDesc+'"&gt;'+$parentTitle+'&lt;/a&gt;')
					#set($info = $info+'&lt;li&gt;'+$pinfo+'&lt;/li&gt;')
				#end ##}
				#if($info != "") ##{
					#set($info = $msg.get('search.resource.resource.expanded.title')+'&lt;ul&gt;'+$info+'&lt;/ul&gt;')
				#end ##}
			#end ##}
			#set($info = $info.replace("'", "&amp;#39;"))
			#set($info = $info.replaceAll("[\n|\r]+", "&lt;br /&gt;"))
		#end ##}
		##
		##
		#if($first) ##{
			#set($first = false)
		#else ##} {
			,
		#end ##}
		{
		 'page':'${d.fullName}'
		,'title':'${title}'
		,'assetType':'${assetType}'
		,'ict':'${ictRaw}'
		,'ictText':'${ictText}'
		,'ictIcon':'${ictIcon}'
		,'contributor':'${d.creator}'
		,'contributorName':'${xwiki.getUserName($d.creator, false)}'
		,'review':'${review}'
		,'description':'${desc}'
		,'info':'${info}'
		,'updated':'${d.date}'
		}
	#end ##}
	],
	'resultCount':'${resultCount}'
	}
#end ## }
{/pre}
</content></xwikidoc>