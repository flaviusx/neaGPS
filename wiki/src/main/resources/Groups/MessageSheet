<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
<web>Groups</web>
<name>MessageSheet</name>
<language></language>
<defaultLanguage></defaultLanguage>
<translation>0</translation>
<parent></parent>
<creator></creator>
<author>XWiki.mflorea</author>
<customClass></customClass>
<contentAuthor>XWiki.mflorea</contentAuthor>
<creationDate>1200180825000</creationDate>
<date>1207057486000</date>
<contentUpdateDate>1207057486000</contentUpdateDate>
<version>30.1</version>
<title>Message Sheet</title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment>hide edit link in edit mode</comment>
<minorEdit>false</minorEdit>
<object>
<class>
<name>XWiki.TagClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<tags>
<cache>0</cache>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>tags</name>
<number>1</number>
<prettyName>Tags</prettyName>
<relationalStorage>1</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>30</size>
<unmodifiable>0</unmodifiable>
<values></values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</tags>
</class>
<name>Groups.MessageSheet</name>
<number>0</number>
<className>XWiki.TagClass</className>
<property>
<tags/>
</property>
</object>
<content>&lt;!-- Message Start --&gt;
#if("$!request.deletecomment" == "1") ## {
#if("$!request.date" != "") ## {
#set($comments = $doc.getComments())
#set($findDate = $request.date.replace("%20", " "))
#foreach($comment in $comments) ## {
#if(("$findDate" == "${doc.getValue('date', $comment)}") &amp;&amp; ( ($comment.author == $context.user) || $isGroupAdmin || $xwiki.hasAdminRights())) ## {
#set($junk = $doc.removeObject($comment))
#set($junk = $doc.saveWithProgrammingRights())
#end ## }
#end ## }
#end ## }
#if($request.edit=="1")
$response.sendRedirect($xwiki.getURL($doc.fullName, "view", "edit=1"))
#else
$xwiki.getURL($doc.fullName)
$response.sendRedirect($xwiki.getURL($doc.fullName))
#end
#else ## } {
#includeMacros("Groups.Macros")
#groupsinit()
#groupsheader("messages")
#set($obj = $doc.getObject("XWiki.ArticleClass",0))
#set($msgtitle = $doc.display("title", "view"))
#set($msgcontent = $doc.display("content", "view"))
#set($divid = "groups-message-edit")
#if($request.xredirect)
#set($redirect = $request.xredirect)
#else
#set( $redirect = $xwiki.getRequestURL().replaceAll("&amp;", "&amp;amp;"))
#end
#if($doc.hasAccessLevel("edit"))
  ## Includes the JavaScript code needed for the "Send To" input fields
  #messageIncludeCreateJs()
  ## this is the autoincrement value used to create unique ids
  #if(!$counter)
    #set($counter = 1)
  #else
    #set($counter = $counter + 1)
  #end
  #set($editText = $msg.groups_messages_view_message_edit_link)
  #set($deleteText = $msg.groups_messages_view_message_delete_link)
  &lt;div class="frame" id="section_${counter}"&gt;
   &lt;div class="titleheader titleheader-blue"&gt;&lt;h3 class="titleheader-left"&gt;$msgtitle&lt;/h3&gt;
    &lt;div class="titleheader-right"&gt;
     &lt;span id="editLinkContainer" style="padding:0px;"&gt;
      &lt;a href="javascript:editMessage('$doc.space','$doc.name','$divid')" title="$editText"&gt;$editText&lt;/a&gt;
      #sep()
     &lt;/span&gt;
     &lt;a href="javascript:deleteMessage('$doc.space','$doc.name')" title="$deleteText"&gt;$deleteText&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="frame-content" id="section${counter}content"&gt;
#else
#begingroupsection($msgtitle,"Edit","javascript:editMessage('$doc.space','$doc.name','$divid')","blue",false)
#end
#if($doc.hasAccessLevel("edit"))
#groupsajaxjs()
{pre}
&lt;script src="$xwiki.getSkinFile("Pork.Iframe.js")" type="text/javascript"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="${request.contextPath}/tiny_mce/tiny_mce.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="${request.contextPath}/wiki_editor/wiki_editor.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript"&gt;
 wikiEditor.init({
		elements : "",
	    language: "en",
		mode: "exact",
		content_css: "$xwiki.getSkinFile("style.css",true)",
		debug : false,
		remove_linebreaks : false,
		plugins: 'table, contextmenu, paste, searchreplace',
        wiki_use_style: 'true',
        wiki_plugins: 'core,attachments',
        wiki_images_path : '/xwiki/bin/download/${doc.space}/${doc.name}/',
        wiki_attach_path : '/xwiki/bin/view/${doc.space}/${doc.name}'
        });
function editMessage(spaceName,pageName,divid) {
  var pars = "space=" + spaceName + "&amp;page=" + pageName + "&amp;divid=" + divid + "&amp;xpage=plain";
  $(divid).innerHTML = "&lt;p&gt;${msg.groups_loadinginprogress}&lt;/p&gt;";
  // call url to get the edit html to edit the profile
  var myAjax = new Ajax.XWikiRequest( "Groups", "EditMessageService", {method: 'get', parameters: pars, onComplete: editMessageCallback, divid: divid });
}
function editMessageCallback(ajaxreq) {
 var divid = ajaxreq.options.divid;
 $(divid).innerHTML = ajaxreq.transport.responseText;
 var scripts = $(divid).getElementsByTagName('script');
 for(var i=0; i&lt;scripts.length; i++){
  var script = scripts[i];
  try{
   eval(script.innerHTML);
  }catch(e){
   // ignore
  }
 }
 tinyMCE.addMCEControl(document.getElementById("XWiki.ArticleClass_0_content"), "XWiki.ArticleClass_0_content");
 setViewMode(false);
}
function cancelEditMessage(spaceName,pageName,divid) {
  var pars = "space=" + spaceName + "&amp;page=" + pageName + "&amp;divid=" + divid + "&amp;xpage=plain";
  $(divid).innerHTML = "&lt;p&gt;${msg.groups_loadinginprogress}&lt;/p&gt;";
  // call url to get the edit html to edit the profile
  var myAjax = new Ajax.XWikiRequest( "Groups", "ViewMessageService", {method: 'get', parameters: pars, onComplete: cancelEditMessageCallback, divid: divid });
}
function cancelEditMessageCallback(ajaxreq) {
 var divid = ajaxreq.options.divid;
 $(divid).innerHTML = ajaxreq.transport.responseText;
 setViewMode(true);
}
function deleteMessage(spaceName,pageName) {
  if (confirm('$msg.groups_messages_view_message_delete_confirm')) {
   var pars = "confirm=1&amp;ajax=1&amp;xredirect=$xwiki.getURL("${spaceName}.Messages")";
   // call url to get the edit html to edit the profile
   var myAjax = new Ajax.XWikiRequest( spaceName, pageName, {method: 'get', parameters: pars, onComplete: deleteMessageCallback }, "delete");
  }
}
function deleteMessageCallback(ajaxreq) {
  alert('$msg.groups_messages_view_message_delete_done');
  location= '$xwiki.getURL("${spaceName}.Messages")';
}
function setViewMode(viewMode){
 var display = 'none';
 if (viewMode){
  display = 'block';
 }
 // show / hide comments
 document.getElementById('section_2').style.display = display;
 // show / hide attachments
 document.getElementById('section_3').style.display = display;
 // show / hide edit link
 document.getElementById('editLinkContainer').style.display = viewMode ? 'inline':'none';
}
function onAfterSave(ajaxreq){
 setViewMode(true);
 updateSectionTitle(ajaxreq);
}
function updateSectionTitle(ajaxreq){
  var h3s = document.getElementById('section_1').getElementsByTagName('h3');
  if (h3s.length == 0){
    return;
  }
  var sectionTitle = h3s[0];
  var tmpDiv = document.createElement('div');
  tmpDiv.innerHTML = ajaxreq.responseText;
  var ps = tmpDiv.getElementsByTagName('p');
  for(var i=0; i&lt;ps.length; i++){
    if (ps[i].className == 'frame-title'){
      sectionTitle.innerHTML = ps[i].innerHTML;
    }
  }
}
&lt;/script&gt;
{/pre}
#end
&lt;div id="$divid"&gt;
#groupsdisplayarticleblock($doc)
&lt;/div&gt;
#if($request.edit=="1")
&lt;script type="text/javascript"&gt;
 editMessage('$doc.space','$doc.name','$divid');
&lt;/script&gt;
#end
#endgroupsection()
&lt;!-- end of FIRST FRAME --&gt;
&lt;!-- COMMENTS FRAME --&gt;
&lt;a name="comments"&gt;&lt;/a&gt;#begingroupsection($msg.get("groups_messages_view_comments_title"),"","","blue",false)
#set($count = 0)
#set($isFirst = true)
#foreach($comment in $doc.comments) ## {
#if(!$isFirst) ## {
 &lt;hr class="my-curriki-hr"/&gt;
#end ## }
#set($odd = $count%2)
#if($odd==0)
  #set($odd = "")
#else
  #set($odd = " odd-row")
#end
&lt;div id="comment${count}" class="blog-comment${odd}"&gt;
&lt;div class="blog-comment-avatar" "style=float:left;"&gt;
#mycurrikiavatar($xwiki.getDocument($comment.author))
&lt;/div&gt;
&lt;div class="blog-comment-line"&gt; 
&lt;p&gt;&lt;span class="date"&gt;
#set($commentDate = $xwiki.formatDate($doc.getValue("date", $comment), $msg.get('mycurriki.dateFormat')))
$xwiki.getUserName($comment.author) | &lt;span class="blog-comment-date"&gt;$commentDate&lt;/span&gt;
#if(($comment.author == $context.user) || $isGroupAdmin || $xwiki.hasAdminRights()) ##{
&lt;a class="right" href="?deletecomment=1&amp;date=${doc.getValue('date', $comment)}" class="curriki-link" title="${msg.get('mycurriki.blog.comment.delete')}" onclick="return updateHref(this, confirm('${msg.get("mycurriki.blog.comment.delete.confirm")}'));"&gt;$msg.get('mycurriki.blog.comment.delete')&lt;/a&gt; ## Link to delete -- use XWikiComments.author and date to get unique specification
#end ## }
&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
{pre}$doc.getValue("comment", $comment){/pre}
&lt;/div&gt;
#set($count = 1 - $count)
#set($isFirst = false)
#end ## foreach on comments ## }
#if($xwiki.hasAccessLevel("comment")) ## {
&lt;div id="commentscontent" class="xwikiintracontent"&gt;
&lt;div class="button-right"&gt;&lt;a class="button button-orange" onclick="toggleForm(document.getElementById('commentAddForm')); return false;" href="#" title="$msg.get("groups_messages_view_addcomment_btt")"&gt;$msg.get("groups_messages_view_addcomment_btt")&lt;/a&gt;&lt;/div&gt;
#set($cclass = $xwiki.getDocument("XWiki.XWikiComments").getxWikiClass())
#set($comment = $cclass.newObject())
      &lt;form id="commentAddForm" action="$doc.getURL("commentadd")" method="post"&gt;
        &lt;hr class="my-curriki-hr"/&gt;

        &lt;fieldset class="expanded" id="commentform"&gt;
        &lt;input type="hidden" name="xredirect" value="${doc.getURL("view")}" /&gt;
        &lt;input type="hidden" name="XWiki.XWikiComments_author" value="$context.user"/&gt;
        &lt;input type="hidden" name="XWiki.XWikiComments_date" value=""/&gt;
        &lt;div&gt;&lt;textarea id='XWiki.XWikiComments_comment' rows='5' name='XWiki.XWikiComments_comment'&gt;&lt;/textarea&gt;&lt;/div&gt;
        &lt;div&gt;
	&lt;button class="button button-orange" type="submit" onclick="return updateXRedirect('commentAddForm', true);"&gt;$msg.get("caption.saveComment")&lt;/button&gt;
	&lt;button class="button button-grey" type="reset" onclick="hideForm(this.form);"&gt;$msg.get("cancel")&lt;/button&gt;
        &lt;/div&gt;
        &lt;/fieldset&gt;
      &lt;/form&gt;
&lt;/div&gt;
      &lt;script type="text/javascript"&gt;
//&lt;!--
document.getElementById("commentform").className = "collapsed";
//--&gt;
      &lt;/script&gt;
#end ## hasAccessLevel comments ## }
#endgroupsection()  
&lt;!-- end of COMMENTS FRAME --&gt;
&lt;!-- ATTACHMENTS FRAME --&gt;
&lt;a name="attachments"&gt;&lt;/a&gt;#begingroupsection($msg.get("groups_messages_view_attachments_title"),"","","blue",false)
#if($doc.attachmentList.size()&gt;0)
#foreach ($attach in $doc.attachmentList)
    &lt;!-- Each comment row is inside an "attachments" class div --&gt;
  	&lt;div class="attachments"&gt;
	 &lt;!-- Paragraph containing the post infos --&gt;
	 &lt;div class="attachments_icon"&gt;
	 #mimeicon($attach.filename)
	 &lt;/div&gt;
	 &lt;p&gt;&lt;span class="date"&gt;{pre}&lt;a href="$doc.getAttachmentURL("${attach.filename}", "download")" title="$msg.get("downloadthisattachment")"&gt;#packName($attach.filename)&lt;/a&gt;&lt;/span&gt; $attach.version 
&lt;span class="right"&gt;
  &lt;a href="$doc.getAttachmentURL("${attach.filename}", "download")?force-download=1" title="$msg.get("downloadthisattachment")"&gt;$msg.get("download")&lt;/a&gt;
#if($hasedit || $hasadmin)
   | &lt;a href="$doc.getAttachmentURL("${attach.filename}", "delattachment", "xredirect=${redirect}")" onclick="return confirm('$msg.get("confirmdelattachment")');" title="$msg.get("deletethisattachment")"&gt;$msg.get("delete")&lt;/a&gt;
#end
&lt;/span&gt;{/pre}
	 &lt;!-- Paragraph containing the post text --&gt;
	 &lt;p&gt;&lt;span class="date"&gt;$msg.groups_messages_view_attachments_providedby $xwiki.getLocalUserName($attach.author) $msg.groups_messages_view_attachments_on $xwiki.formatDate($doc.creationDate,$msg.get("mycurriki.datetimeFormat"))&lt;/span&gt;&lt;/p&gt;
	&lt;/div&gt;
	&lt;!-- End of an attachments row --&gt;
#end
#end
#if($hasedit || $hasadmin)
&lt;div id="attachmentscontent" class="xwikiintracontent"&gt;
&lt;div class="button-right"&gt;&lt;a class="button button-orange" onclick="toggleForm(document.getElementById('attachmentAddForm'))"&gt;$msg.get("addattachment")&lt;/a&gt;&lt;/div&gt;
&lt;form id="attachmentAddForm" action="$doc.getURL("upload")" enctype="multipart/form-data" method="post"&gt;
&lt;input type="hidden" name="xredirect" value="$xwiki.getFormEncoded($xwiki.getRequestURL())" /&gt;
&lt;fieldset class="expanded" id="attachform"&gt;
&lt;div&gt;&lt;input id="xwikiuploadname" type="hidden" name="filename" value="" size="40"/&gt;&lt;/div&gt;
&lt;div&gt;&lt;label id="xwikiuploadfilelabel" for="xwikiuploadfile"&gt;$msg.get("choosefiletoupload"):&lt;/label&gt;&lt;/div&gt;
&lt;div&gt;&lt;input id="xwikiuploadfile" type="file" name="filepath" value="" size="40"/&gt;&lt;/div&gt;
&lt;div&gt;
{pre}
&lt;script type="text/javascript"&gt;
function isEditMode(){
var child = document.getElementById('${divid}').firstChild;
while(child){
if (child.tagName &amp;&amp; child.tagName.toLowerCase()=='form'){
return true;
}
child = child.nextSibling;
}
return false;
}
function updateXRedirect(formName, returnValue){
var xredirect = document.forms[formName].xredirect;
if (isEditMode()){
xredirect.value = '${doc.getURL("view", "edit=1")}';
}else{
xredirect.value = '${doc.getURL("view")}';
}
return returnValue;
}
function updateHref(anchor, returnValue){
if (isEditMode()){
anchor.href += '&amp;edit=1';
}
return returnValue;
}
&lt;/script&gt;
{/pre}
&lt;span&gt;&lt;input class="button button-orange" type="submit" value="$msg.get("attachthisfile")" onclick="return updateXRedirect('attachmentAddForm', updateAttachName(this.form, '$msg.get("doyouwanttoreplace")'))" /&gt;&lt;/span&gt;
##&lt;span class="button button-orange"&gt;&lt;input type="reset" value="$msg.get("cancel")" onclick="hideForm(this.form);" class="button"/&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;/fieldset&gt;
&lt;/form&gt;
&lt;/div&gt;
      &lt;script type="text/javascript"&gt;
//&lt;!--
document.getElementById("attachform").className = "collapsed";
//--&gt;
      &lt;/script&gt;
#end
#endgroupsection()
 &lt;!-- End of ATTACHMENTS FRAME --&gt;
#groupsfooter()
#end
&lt;!-- Message End --&gt;</content>
</xwikidoc>
