<?xml version="1.0" encoding="ISO-8859-1"?>

<xwikidoc>
<web>XWiki</web>
<name>test</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent>XWiki.XML</parent>
<creator>XWiki.gtext</creator>
<author>XWiki.gtext</author>
<customClass></customClass>
<contentAuthor>XWiki.gtext</contentAuthor>
<creationDate>1154192916000</creationDate>
<date>1154370328000</date>
<contentUpdateDate>1154370328000</contentUpdateDate>
<version>1.26</version>
<title>test intro to xml</title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<content>----
{table}
*Learning objectives*                                    
Define the purpose of SGML, HTML, and XML
{table}


1 Introduction

There are four central problems in data management: capture, storage, retrieval, and exchange.
The purpose of this book is to address *XML*, ~~a technology for managing data exchange~~.  The foundational XML chapters in this book are structured by a 'data model' approach.  The first chapter introduces the reader to the XML document, XML schema, and XML stylesheet with a single entity example.  Subsequent chapters expand upon the XML basics given more than one entity and a one-to-one relationship, a one-to-many relationship, or a many-to-many relationship.

XML is a tool used for data exchange.  Data exchange has long been an issue, but the Internet has elevated its importance. Electronic data interchange (EDI), the traditional data exchange standard for large organizations, is giving way to XML, which is likely to become the data exchange standard for all organizations, irrespective of size.

{link: EDI | http://en.wikipedia.org/wiki/EDI } supports the electronic exchange of standard business document and is currently the major data format for electronic commerce. A structured format is used to exchange common business documents (e.g., invoices and shipping orders) between trading partners. In contrast to the free form of e-mail messages, EDI supports the exchange of repetitive, routine business transactions. Standards mean that routine electronic transactions can be concise and precise. The main standard used in the United States and Canada is known as  {link: X.12 | http://en.wikipedia.org/wiki/ANSI_ASC_X12 }, and the major international standard is {link: UN/EDIFACT | http://en.wikipedia.org/wiki/UN/EDIFACT}. Firms following the same standard can electronically share data.

The Internet is a global network potentially accessible by nearly every firm with  communication costs typically less than with traditional EDI. Consequently, the Internet has become  the electronic transport path of choice between trading partners. The simplest approach is to use the Internet as a means of transporting EDI documents. Another approach is to reexamine the technology of data exchange, since EDI was developed in the 1960s. A result of this rethinking is XML, but before considering XML, we need to learn about SGML, the parent of XML.

1 SGML
For a typical U.S. firm, it is estimated that document management consumes up to 15 percent of its revenue, nearly 25 percent of its labor costs, and anywhere between 10 and 60 percent of an office worker’s time. The *Standard Generalized Markup Language (SGML) * is designed to reduce the cost and increase the efficiency of document management.

A *markup language* embeds information about a document within the document's text. In the following example, the markup tags indicate that the text contains details of a city. Note also that the city's name, state, and population are identified by specific tags. Thus, the reader, a person or computer, is left in no doubt as to meaning of ~~Athens~~, ~~Georgia~~, or ~~100,000~~. Note also the latitude and location of the city are explicitly identified with appropriate tags. SGML’s usefulness is based upon both recording  text and the meaning of that text.

*Exhibit 1: Markup language*

   &lt;city&gt; 
       &lt;cityname&gt;Athens&lt;/cityname&gt; 
       &lt;state&gt;GA&lt;/state&gt;
       &lt;description&gt; Home of the University of Georgia&lt;/description&gt;
       &lt;population&gt;100,000&lt;/population&gt;
       &lt;location&gt;Located about 60 miles Northeast of Atlanta&lt;/location&gt;
       &lt;latitude&gt;33 57' 39"N&lt;/latitude&gt;
       &lt;longitude&gt;83 22' 42" W&lt;/longitude&gt;
   &lt;/city&gt;


SGML is a vendor-independent International Standard (ISO 8879) that defines the structure of documents.  Developed in 1986 as a meta language, SGML is the parent of both HTML and XML. Because SGML documents are standard text files, SGML provides cross-system portability. When technology is rapidly changing, SGML provides a stable platform for managing data exchange. Furthermore, SGML files can be transformed for  publication in a variety of media. The use of SGML preserves textual information independent of how and when it is presented. Organizations reap long-term benefits when they can   store documents in a single, independent standard that can then be converted for display in any desired media.

SGML has three major advantages for data management:
**Reuse*: Information can be created once and reused many times.  
**Flexibility*: SGML documents can be published in any format. The same content can be printed, presented on the Web, or delivered with a text synthesis. Because SGML is content-oriented, presentation decisions can be delayed until the output format is decided. 
**Revision*: SGML supports revision and version control. With content version control, a firm can readily track the changes in documents. 

A short section of SGML demonstrates clearly the features and strength of SGML (see Table 2). The tags surrounding a chunk of text describe its meaning and thus support presentation and retrieval. For example, the pair of tags &lt;airline&gt; and &lt;/airline&gt; surrounding “Delta” identify the airline making the flight.

*Exhibit 2: SGML example*

   &lt;flight&gt;
       &lt;airline&gt;Delta&lt;/airline&gt;
       &lt;flightno&gt;22&lt;/flightno&gt;
       &lt;origin&gt;Atlanta&lt;/origin&gt;
       &lt;destination&gt;Paris&lt;/destination&gt;
       &lt;departure&gt;5:40pm&lt;/departure&gt;
       &lt;arrival&gt;8:10am&lt;/arrival&gt;
   &lt;/flight&gt;

The preceding SGML code can be presented in several ways by applying a stylesheet to the file. For example, it might appear as

Delta flight 22 flies from Atlanta to Paris leaving 5:40pm and arriving 8:10am

or as

{table}   Airline|  Flight|  Origin|  Destination|  Departure|  Arrival
|  Delta|  22|  Atlanta|  Paris|  5:40pm|  8:10am{table}


If the data are stored in HTML format and rendered on a Web site (as in Table 3), then the meaning of the data has to be inferred by the reader. This is generally quite easy for humans, but impossible for machines. Furthermore, the presentation format is fixed and can only be altered by rewriting the HTML. If you are not familiar with HTML, you should read the WikiBooks chapter on {Programming:XHTML|programming in XHTML}, an extension of HTML, before reading the next chapter.

*Exhibit 3: HTML rendering example*
&lt;blockquote style="background: white; border: 1px solid black; padding: 1em;"&gt;
&lt;pre&gt;&lt;nowiki&gt;
    Delta flight 22 flies from Atlanta to Paris leaving 5:40pm and arriving 8:10am
&lt;/nowiki&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

*Meaning and presentation should be independent*, and this is an important reason why SGML is more powerful than HTML.

&lt;blockquote style="background: linen; border: 1px solid black; padding: 1em;"&gt;
SGML is a markup language that defines the structure of documents and is preferred to HTML as it can be transformed into a variety of media.
&lt;/blockquote&gt;

1 XML

Many computer systems contain data in incompatible formats. A time-consuming challenge is to exchange data between such systems. XML is a generic data storage format that comes bundled with a number of tools and technologies that should make it easier to exchange specific XML 'applications' between incompatible systems. Since XML is open and generic, it is expected that as time progresses, more and more organisations and people will jump onto the XML bandwagon, both developers and data users. This should make XML the ultimate viable technology for certain types of data exchange.

XML is not only used for the exchange of information, but it can also be used for the publication of Web pages. XML has a very strict syntax and allows for Web browsers to be smaller and faster and as such is well suited for use with Personal Digital Assistant (PDAs) and cellphones.  Web browsers that interpret HTML documents, on the other hand, are bloated with programming code to compensate for HTML’s not so strict coding.  

The types of data generally well suited for encoding as XML are those where field lengths are unknown and unpredictable and where field contents are predominantly of a textual nature. 


An XML schema allows for the exchange of information in a standardized structure.  A schema defines custom markup tags that can contain attributes to describe the content that is enclosed by these tags.  Information from the tagged data in the XML document can be extracted using an application called a “parser” and with the use of an XML stylesheet the data can be formatted for a Web page.

XML's power lies in the combination of custom markup tags and content in a defined XML document.  The purpose of eXtensible Markup Language (XML) is to make information self-describing. Based on SGML, XML is designed to support electronic  commerce.  The definition of XML,  completed in early 1998 by the {link:World Wide Web Consortium (W3C) | http://www.w3.org/ }, is a meta language—a language to generate languages. XML should steadily replace HTML on many Web sites because of some key advantages. The major differences between XML and HTML are captured in the following table.

*Exhibit 4: XML vs HTML*

{table}  *XML*| *HTML*
| Information content| Information presentation
| Extensible set of tags| Fixed set of tags
| Data exchange language| Data presentation language
| Greater hypertext linking| Limited hypertext linking{table}


The eXtensible in XML means that a new data exchange language can be created by defining its structure and tags.  For example, the {link:OpenGIS Consortium | http://www.opengis.org/ } designed a Geographic Markup Language (GML)  to facilitate the electronic exchange of geographic information. Similarly, the {link:Open Tourism Consortium | http://www.opentourism.org } is working on the definition of TourML to support exchange of tourism information. Another good example of XML in action is {http://www.newsml.org NewsML&amp;trade;}.

In this text, we will cover all the features of XML, but at this point let us introduce a few of the key features.


&lt;blockquote style="background: linen; border: 1px solid black; padding: 1em;"&gt;
*Applications of XML*:



Before we start learning more about how an XML document is structured, let´s point for what XML can be used for. The 4 major applications of XML deal with:




*Publication*: Database content can be converted into XML and afterwards into HTML by using an XSLT stylesheet. By this way complex websites as well as print media like pdf files can be created. XML is an ideal intermediary format between XSLT and HTML. Information no longer has to be inserted into different medias (RTF/DOC, PDF, WWW) from different sources. With XML it can be first converted in the neutral XML format. From this, with the appropriate layout sheets and transformations, brochures, websites or datalists can be generated. (see more in Chapter 17 {http://en.wikibooks.org/wiki/XML:_Managing_Data_Exchange/Database_and_XML})

An example for the capability of XML and XSLT gives the website http://www.emimusic.de: The website contains approximately 20.000 single sites with profiles of the artists, their products and the titles of the songs. These sites are generated with a XSLT script. On basis of the used script the production of a catalog in pdf format is also possible. Please see below for more details.
&lt;br&gt;


*Interaction*: XML can be used for accesing and changing data interactively. This man-machine communication usually happens via browser.

 (see more in Chapter 12 {http://en.wikibooks.org/wiki/XML:_Managing_Data_Exchange/Cocoon})




*Integration* By using XML homogenous and heterogenous applications can be integrated. XML is used to describe data, interfaces and protocols. This machine-machine communication helps integrating relational databases (e.g. by importing/exporting different formats)




*Transaction*: XML helps processing transactions of applications like online marketplaces, supply chain management and e-procurement systems.

&lt;/blockquote&gt;



1.1 Key features of XML
* Elements have both an opening and a closing tag
* Elements follow a strict hierarchy with only one root element
* Elements cannot overlap other elements
* Element names must obey XML naming conventions
* XML is case sensitive

XML will improve the efficiency of data exchange in several important ways, which include
* *write once and format many times:* Once an XML file is created it can be presented in multiple ways by the application of an XML stylesheet. For instance, the information might be displayed on a Web page or printed in a book.
* *hardware and software independence:* XML files are standard text files, which means they can be read by any operating system.
* *write once and exchange many times:* Provided an industry agrees on a XML standard for data exchange, then data can be readily exchanged between all members using this standard.
* *Faster and more precise Web searching:* When the meaning of information can be determined by a computer (by reading the tags), Web searching will be enhanced. For example, if you are looking for a specific book title, it is far more efficient for a computer to search for text between the pair of tags &lt;booktitle&gt; and &lt;/booktitle&gt; than search an entire file looking for the title. Furthermore, spurious results should be eliminated.

1.1 The major XML elements

The major XML elements are:
* *XML document*: An XML file containing XML code.
* *XML schema*: A schema is an XML file that describes the structure of a document and its tags.
* *XML stylesheet*: A stylesheet is an XML containing formatting instructions for an XML file.
In the next few chapters, you will learn how to create and use each of these elements of XML.

1.1 XML at United Parcel Service (UPS)
&lt;blockquote style="background: lightyellow; border: 1px solid black; padding: 1em;"&gt;
“UPS is a service company and it is all about scale and speed,” says Geoff Chalmers, Project Leader at UPS eSolutions Department.  In 2003, UPS had $33.5 billion annual revenue and 357,000 employees worldwide.  Six percent of the United States Gross Domestic Product (GDP) on any given day is in UPS’ system.



UPS uses technology extensively.  The Information Systems department employs 4,000 people.  The Company Web site has 166 different country home pages and is supported by 44 applications.



UPS delivers around 13 million packages everyday, and customers can track these shipments via the UPS Web site, which receives around 200 million hits daily.  Nineteen of the applications within ups.com are XML OnLine Tool (Web services) applications. 

 

UPS’s online tools are developed specifically to be integrated with customers’ applications.  This makes the customer’s task simpler, easier, and faster.  UPS verified the importance of simplicity and speed, via ‘CampusShip’, a product that has been one of the UPS’s most successful in the last 10 years.  UPS CampusShip® is a Web-based, UPS-hosted shipping system.  Using an Internet connection, employees can ship their own packages and letters from any desktop, while management maintains overall control of shipping activities.  UPS CampusShip® allows simultaneous shipper autonomy and managerial cost-control within the organization. This product has been successful because no installation or software maintenance is required and it is quick to implement.  XML Online Tools enabled cheap and fast evolution of the CampusShip®.



UPS favors XML especially because it is agnostic; platform and language independent.  These features make XML very flexible and powerful.  It is also decoupled and scalable. XML has enabled UPS to target a broader market and reduce customer interaction, and thus the cost of customer service. Another positive feature of XML is that it is backward compatible.  The adoption of XML has reduced maintenance, implementation, and usage costs significantly within UPS.



However these advantages don’t come without a price.  “XML is inefficient in so many ways” says Geoff Chalmers.  XML unfortunately takes more CPU and bandwidth than the other technologies.  Yet bandwidth and CPU are cheap and getting cheaper everyday, so this is a gradually disappearing problem.



Nevertheless, Geoff Chalmers also thinks that XML doesn’t work well in databases.  He says that it is too wordy and it is an exchange medium rather than a database medium. There were some early attempts to tightly integrate XML and databases.  Because databases do supply structure and identification to data as does XML, the value-add of XML-database integration is limited to applying hierarchical structure.   On the other hand, if data is to be stored as a blob, then XML makes sense.  Another problem that he points out about XML is that business rules cannot be expressed in XML schemas.

  

Finally, raw XML programming and debugging can be challenging.  Therefore, UPS’s enterprise customers are starting to explore the code generators and embedded facilities to be found in .NET and BEA.  However hand coding by experienced in-house engineers is a must for the high availability, scalability, and performance that UPS requires for the UPS OnLine Tools.
&lt;/blockquote&gt;

1.1 XML at EMI Music
&lt;blockquote style="background: lightyellow; border: 1px solid black; padding: 1em;"&gt;
*How is it used?*



EMI Music Germany GmbH &amp; Co. KG, a famous German record label, displays information about the artists it is affiliated with on its website {http://www.emimusic.de}. Visitors are able to explore all their audio or video productions.
The whole website consists of nearly 20,000 pages that contain information about artists and their products (CD, DVD, LP). Everything is properly linked and systematically grouped.
After all, there is data to be provided for every artist, albums, samples, pictures, descriptions or article codes. The site is updated on a daily basis and is subject to change by a web editor whenever it’s necessary. Now this is a fairly complex and large amount of data to be handled.
This is where XML comes into play. The data which is stored in a database has been transformed into XML code. Now an XSLT-style sheet converts this data into HTML code which can be easily read by any web browser (e.g. Internet Explorer or Firefox).




*What's the benefit?*



The advantage of XML is that the programming effort is considerably lower as compared to other formats. This is because XML lies at the point of intersection of XSLT and HTML.
It’s also no problem for the web editor to update the website. Using XML makes it easy for the person in charge to deal with this large amount of data.




*Going beyond…*



On the basis of the XML scripts thus far produced by EMI Music, the company has a future possibility to produce a pdf-formatted catalogue or to design i-Mode pages for the current mobile phone generation. Thanks to XML this can be done with little extra effort.



&lt;/blockquote&gt;


&lt;blockquote style="background: linen; border: 1px solid black; padding: 1em;"&gt;
XML is a convertible meta language which supports the electronic commerce by sticking to certain rules. 
&lt;/blockquote&gt;

1.1  Creating a markup file 
Any text editor can be used to create a markup file (e.g. an HTML file). In this book, we use the text editor within {link:NetBeans | http://www.NetBeans.org/ }, an open source {link: Integrated Development Environment (IDE) | http://en.wikipedia.org/wiki/Integrated_development_environment} for Java, because NetBeans supports editing and validation of XML files. Before proceeding, you should download and install NetBeans from {link:www.NetBeans.org | http://www.NetBeans.org/ }.

1.1  Netbeans/Alternative 
The examples here use Netbeans to illustrate proper XML code.  For an alternative to Netbeans, look at {XML: Managing Data Exchange/Exchanger XML Lite as an alternative to NetBeans}

1 Why is this book not an XML document?
If you have accepted the ideas presented in this chapter, the question is very pertinent. The simple answer is that we have been unable to find the technology to support the creation of an open text book in XML. We need several pieces of technology
* An XML language for describing a book. {link:DocBook | http://www.docbook.org/ } is such a language, but the structure of a book is quite complex, and DocBook (reflecting this complexity) cannot be quickly mastered
* A Wiki that works with a language such as DocBook
* A XML stylesheet that converts XML into HTML for displaying the book's content

There is a project to create {link:WikiMl | http://wiki.wikiml.org/index.php?WikiMl } (Wiki MarkupLanguage), and this might be used at some point.

1 References

*Initiating author* {link:Richard T. Watson | mailto:rwatson@terry.uga.edu }, University of Georgia
</content></xwikidoc>