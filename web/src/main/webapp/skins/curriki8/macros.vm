#################################################################################
##
##
##
##
##    M A C R O S
##
#################################################################################


##
## GWT
##
##
#macro(gwtEditUrl $docToEdit)
#set($m_gwtUrl = $gwtmainpath)
#set($docToEdit2 = $xwiki.escapeURL($docToEdit))
#set($m_editUrl = "${m_gwtUrl}page=${docToEdit2}&mode=edit")
$m_editUrl#end
##
##
##
##
## General
##
#macro(displayPropName $prop)
#if($msg.get("$class.getName()_$prop.name") == "$class.getName()_$prop.name")
$prop.prettyName#else
$msg.get($prop.name)#end
#end
##
##
#macro(truncatetext $text $maxChars)
#if($text.length() > $maxChars)
#set($i = $text.lastIndexOf(" ", $maxChars))
#set($i = $i + 1)
#set($text = "${text.substring(0, $i)}")
#end
#end
##
##
##
##
##
#macro(breakLinkText $linkToBreak $size)
 #if($linkToBreak.length()<=$size)
$linkToBreak
 #else
#set($slashIndex = $linkToBreak.substring(0, $size).lastIndexOf('/'))
#set($pointIndex = $linkToBreak.substring(0, $size).lastIndexOf('.'))
#if($pointIndex == $slashIndex)
#set($nextLink = $linkToBreak)
#set($nextSize = 10 + $size)
#breakLinkText($nextLink, $nextSize)
#else
#if($pointIndex > $slashIndex)
 #set($index = 1 + $pointIndex)
#else
 #set($index = 1 + $slashIndex)
#end
$linkToBreak.substring(0, $index)
#set($nextLink = $linkToBreak.substring($index))
#breakLinkText($nextLink, $size)
 #end
#end
#end
##
##
##
##
##
#macro(getNewsExtract $fromObj $fromDoc $toStr $maxChars)
#set($toStr = $fromDoc.display("extract", "view", $fromObj))
#if($toStr=="")
#set($toStr = $fromDoc.display("content", "view", $fromObj))
#if($toStr.length() > $maxChars)
#set($i = $toStr.lastIndexOf(" ", $maxChars))
#set($i = $i + 1)
#set($toStr = "${toStr.substring(0, $i)}")
#end
#end
#end
##
##
##
##
#macro(mimeicon $p_fileName)
#if($p_fileName.lastIndexOf(".") == -1)
 #set($m_fileExt = "Unknown")
#else
 #set($m_fileExt = $p_fileName.substring($p_fileName.lastIndexOf(".")))
 #set($m_fileExt = $m_fileExt.substring(1).toUpperCase())
#end
## The next step is done with String to avoid list or set creation as it is not necessary
#set($m_exts = "-ASF-AVI-BIN-BMP-CLASS-CSS-DCR-DIR-DOC-DSR-EXE-GIF-GPE-GTAR-GZ-HTM-HTTP-IHA-IZH-JPG-MOV-MP3-MPG-NOTEBOOK-PDF-PHP-PNG-PPT-PSD-RTF-SCO-SOS-SWF-TIF-TXT-URL-WAV-WMV-WWW-XLS-XML-ZIP-")
#if($m_exts.indexOf("-${m_fileExt}-") == -1)
 #set($m_fileExt = "Unknown")
#end
#set($macro_iconUrl = "")
#set($macro_iconUrl = $xwiki.getSkinFile("mimetypes/${m_fileExt}.gif"))
#end
##
##
##
##
#macro(findUserPrefix $userShortName)
 #set($userdoc = $xwiki.getDocument("XWiki", $userShortName))
 #set($firstName = $!userdoc.display("first_name", "view"))
 #if($firstName && $firstName.length()>0)
  #if($firstName.endsWith("s"))
   #set($userPrefix = "${firstName}'")
  #else
   #set($userPrefix = "${firstName}'s")
  #end
 #else
  #set($userPrefix = "My")
 #end
#end
##
##
##
##
#macro(findCurrikiTitle $currikiDoc)
 #if($currikiDoc.getObject("XWiki.FrameworkItemClass"))
  #set($key = "XWiki.AssetClass_fw_items_${currikiDoc.fullName}")
  #set($currikiTitle = $msg.get($key))
  #if($currikiTitle == $key)
   #set($currikiTitle = $!currikiDoc.displayTitle)
  #end
 #else
 #set($currikiDoc = $currikiDoc.getTranslatedDocument())
 #set($currikiTitle = $!currikiDoc.displayTitle)
 #if($currikiDoc.space.startsWith("Coll_"))
  #findUserPrefix($currikiDoc.space.substring(5))
##  #if($currikiDoc.name == "Default")
##   #set($currikiTitle = "${userPrefix} Default Collection")        
##  #elseif($currikiDoc.name == "WebHome")
  #if($currikiDoc.name == "WebHome")
   #set($currikiTitle = "${userPrefix} Collections")
  #end
 #elseif($currikiDoc.space.startsWith("Blog_"))
  #if($currikiDoc.name == "WebHome")
   #findUserPrefix($currikiDoc.space.substring(5))
   #set($currikiTitle = "${userPrefix} Blog")
  #elseif($currikiDoc.getObject("XWiki.ArticleClass"))
   #set($currikiTitle = $!currikiDoc.display("title", "view", $currikiDoc.getObject("XWiki.ArticleClass")))
  #end
 #elseif($currikiDoc.fullName == "MyCurriki.WebHome" && "$!request.user" != "")
  #set($whofor = $request.user)
  #if(!$whofor.startsWith("XWiki.")) ## {
   #set($whofor = "XWiki.$whofor")
  #end ## }
  #set($userDoc = $xwiki.getDocument($whofor))
  #set($currikiTitle = "$!userDoc.display('first_name', 'view') $!userDoc.display('last_name', 'view')")
 #elseif($currikiDoc.space == "XWiki" && $currikiDoc.getObject("XWiki.XWikiUsers"))
  #findUserPrefix($currikiDoc.name)
  #set($currikiTitle = "${userPrefix} Curriki")
 #end
 #end
#end
##
##
##
##
#macro(showpopup $url $text)
<a href="javascript:void()" onclick="showpopup('${url}?xpage=popup'); return false;">${text}</a>
#end
##
##
##
##
#macro(asterix)
<span style="color: #ff0000; font-size: 16px">! </span>
#end
##
##
##
##
#macro(displayPropName $prop)
#if($msg.get("$class.getName()_$prop.name") == "$class.getName()_$prop.name")
$prop.prettyName#else
$msg.get($prop.name)#end
#end
##
##
##
## buttons
##
#macro(button $text $color $type $id $onclick)
#if($type != "reset" && $type != "submit")
#set($type = "submit")
#end
##<span class="btn-wrapper btn-wrapper-${color}">
<button#if($id != "") id="${id}"#end class="button#if($color != "") button-${color}#end"#if($onclick != "") onclick="${onclick}"#end type="${type}">$text</button>##</span>
#end
##
##
##
##  PARAGRAPHS
##
##
##
#macro(paragraphimg $type $image $imagetitle $text $readmorelink $readmore_linktext $source)
#set($paratypeclass = "withimg")
#if($type == "logo")
#set($imgwidth = "150")
#set($paratypeclass = "withlogo")
#elseif($type == "portrait")
#set($imgwidth = "83")
#set($paratypeclass = "withportrait")
#else
#set($imgwidth = "109")
#end
#normalizeattachment($image)
#normalizelink($readmorelink)
#if($readmore_linktext == "")
#set($readmoretxt = $msg.get("readmore") + "...")
#else
#set($readmoretxt = $readmore_linktext)
#end
<div class="para">
<img src="$image" width="${imgwidth}" alt="${imagetitle}"/>
<div class="${paratypeclass}">$text#if($readmorelink != "") <a href="${readmorelink}" class="readmore">$readmoretxt</a>#end</div>
#if($source != "") <span class="infosource ${paratypeclass}">$source</span>#end
</div>
#end
##
#macro(paragraph $text $readmorelink $readmore_linktext)
#normalizelink($readmorelink)
#if($readmore_linktext == "")
#set($readmoretxt = $msg.get("readmore") + "...")
#else
#set($readmoretxt = $readmore_linktext)
#end
<div class="para">$text#if($readmorelink != "") <a href="${readmorelink}" class="readmore">$readmoretxt</a>#end</div>
#end
##
##
##
##
##  TITLES
##
##
#macro(title $lefttitle $color)
<div class="titlebar titelbar_$color">
<h1 class="titlebar_left">$lefttitle</h1>
</div>
#end
##
##
##
#macro(normalizelink $link)
#if(!($link.startsWith("/") || ($link.startsWith("javascript:")) || ($link.indexOf("://") > 0)) && !$link.equals(""))
#set($link = $xwiki.getURL($link))
#else
#set($link = $context.util.escapeURL($link))
#end
#end
##
##
#macro(normalizeattachment $link)
#if(!($link.startsWith("/") || ($link.startsWith("javascript:")) || ($link.indexOf("://") > 0)) && !$link.equals(""))
#set($link = $doc.getAttachmentURL($link))
#end
#end
##
##
#macro(titlebar $lefttitle $righttitle $link $color)
#normalizelink($link)
#set($righttitletrunc = $righttitle)
#if ($righttitletrunc.length() > 35)
#set($righttitletrunc = $righttitle.substring(0, 34))
#set($righttitletrunc = "${righttitletrunc}...")
#end
<div class="titlebar titlebar_$color"><h3#if($link!="") class="titlebar_left"#end>$lefttitle</h3>#if($link!="")<div class="titlebarRight"><a href="$link" title="$righttitle">$righttitletrunc  &raquo;</a></div>#end
</div>
#end
#macro(subtitlebar $text $righttitle $link $color)
#normalizelink($link)
#set($righttitletrunc = $righttitle)
#if ($righttitle.length() > 35)
#set($righttitletrunc = $righttitle.substring(0, 34))
#set($righttitletrunc = "${righttitletrunc}...")
#end
<div class="subtitlebar_${color} subtitlebar"><h4#if($link!="")  class="subtitlebar_left"#end>$text</h4>#if($link!="")<div class="subtitlebarRight"><a href="$link" title="$righttitle">$righttitletrunc  &raquo;</a></div>#end
</div>
#end
##
##
##
## Section
##
##
#macro(beginsectionandshow $lefttitle $righttitle $link $color $show)
#if(!$seccounter)
#set($seccounter = 1)
#else
#set($seccounter = $seccounter + 1)
#end
#normalizelink($link)
#set($righttitletrunc = $righttitle)
#if ($righttitletrunc.length() > 35)
#set($righttitletrunc = $righttitle.substring(0, 34))
#set($righttitletrunc = "${righttitletrunc}...")
#end
<div id="section_${seccounter}">
<div class="titlebar titlebar_$color" id="section${seccounter}titlebar"><h3 id="section${seccounter}title"#if($link!="") class="titlebar_left"#end>$lefttitle</h3>#if($link!="")<div id="section${seccounter}links" class="titlebarRight"><a href="$link" title="$righttitle">$righttitletrunc </a></div>#end</div>
<script type="text/javascript">
#if(!$togglesectionvisibility)
#set($togglesectionvisibility = 1)
function toggleSectionVisibility(seccounter, showhide){
  var seccontent = document.getElementById("section" + seccounter + "content");
  if(eltHasClass(seccontent, "hidden")){
    rmClass(seccontent, "hidden");
    // change text
    showhide.removeChild(showhide.firstChild);
    showhide.appendChild(document.createTextNode("$msg.get('caption.hide')"));
    // erase cookie
    eraseCookie("Section" + seccounter + "Hidden");
  }
  else{
    addClass(seccontent, "hidden");
    // Change text
    showhide.removeChild(showhide.firstChild);
    showhide.appendChild(document.createTextNode("$msg.get('caption.show')"));
    // set cookie
    createCookie("Section" + seccounter + "Hidden", true, "");
  }
  return false;
}
#end
addClass(document.getElementById("section${seccounter}title"), "titlebar_left");
#if($link=="")
var linksDiv = document.createElement("div");
linksDiv.setAttribute("id", "section${seccounter}links");
linksDiv.setAttribute("class", "titlebarRight");
linksDiv.className = "titlebarRight";
document.getElementById("section${seccounter}titlebar").appendChild(linksDiv);
linksDiv.appendChild(document.createElement("a"));
linksDiv = linksDiv.firstChild;
linksDiv.setAttribute("href", "#section${seccounter}content");
#else
var linksDiv = document.getElementById("section${seccounter}links").firstChild;
linksDiv.appendChild(document.createTextNode(" | "));
#end
var showhide${seccounter} = document.createElement("span");
##showhide${seccounter}.setAttribute("href", "#section${seccounter}content");
#if($show)
showhide${seccounter}.appendChild(document.createTextNode("$msg.get('caption.hide')"));
#else
showhide${seccounter}.appendChild(document.createTextNode("$msg.get('caption.show')"));
#end
showhide${seccounter}.setAttribute("onclick", "toggleSectionVisibility(${seccounter}, showhide${seccounter}); return false;");
showhide${seccounter}.onclick = new Function("toggleSectionVisibility(${seccounter}, showhide${seccounter}); return false;");
linksDiv.appendChild(showhide${seccounter});
</script>
#if($show)
<div id="section${seccounter}content" class="">
#else
<div id="section${seccounter}content" class="hidden">
#end
#end
##
##
#macro(beginsection $lefttitle $righttitle $link $color)
#beginsectionandshow($lefttitle, $righttitle, $link, $color, true)
#end
##
##
##
##
#macro(endsection)
</div>
<div class="clearfloats"></div>
</div>
#end
##
##
##
##  HOME PAGE MODULES
##
##  Home Page Module 1: Large text + image
##
#macro(home_intro $image $imagetitle $title $text $readmorelink)
#normalizeattachment($image)
#normalizelink($readmorelink)
<div class="homepage_m1">
<img src="$image" width="300px" alt="${imagetitle}"/>
<h2 class="homepage_m1_title">$title</h2>
<div class="deck">$text</div>
<a href="${readmorelink}" class="readmore">$msg.get("readmore")...</a>
<div class="clr"></div>
</div>
#end
##
## Home page module 2: latest resources
##
#macro(home_latest_resources $number $left_title $right_title $maxDescLenS)
#if($left_title == "")
#set($lefttitle = "Last resources created")
#else
#set($lefttitle = $left_title)
#end
#if($right_title == "")
#set($righttitle = "Go to the resources section")
#else
#set($righttitle = $right_title)
#end
#if($maxDescLenS == "")
#set($maxDescLen = 50)
#else
#set($maxDescLen = $xwiki.parseInt($maxDescLenS))
#end
#titlebar($lefttitle $righttitle "Main.BrowseSearch" "red")
##
##
#if($isguest)
#set($rightsstr="rights.value = 'public'")
#else
#set($rightsstr="(rights.value = 'public' or rights.value = 'members')")
#end
#set($sql = ", BaseObject obj, StringProperty status, StringProperty rights where doc.web <> 'AssetTemp' and doc.fullName = obj.name and obj.className = 'XWiki.AssetClass' and status.id.id = obj.id and status.id.name = 'status' and (status.value = 'final' or status.value='revised') and rights.id.id = obj.id and rights.id.name = 'rights' and ${rightsstr} order by doc.creationDate desc")
<div class="hlastresources">
#foreach($asset in $xwiki.searchDocuments($sql, $number, 0))
#set($assetdoc = $xwiki.getDocument($asset))
#set($assetobj = $assetdoc.getObject("XWiki.AssetClass"))
#set($assettitle = $assetdoc.display("title", "view", $assetobj))
#set($assetdesc = $assetdoc.display("description", "view", $assetobj))
#set($assetcat = $assetdoc.display("fw_items", "view", $assetobj))
#set($assetlevel = $assetdoc.display("educational_level", "view", $assetobj))
#set($assetDate  = $assetdoc.creationDate)
#set($assetCreator  = $assetdoc.creator)
<div class="resource">
<h4 class="resourcecat">
##$assetcat &ndash;
$assetlevel</h4>
<div class="resourcemeta">$xwiki.formatDate($assetDate, $msg.get("dateFormatLong")) &ndash; $msg.get("createdby") $xwiki.getLocalUserName($assetCreator)</div>
<h4 class="resourcetitle">[$assettitle>$assetdoc.fullName]</h4>
<div class="resourcedesc">
##extract from the description
#truncatetext($assetdesc $maxDescLen)
$assetdesc <a class="readmore" href="$assetdoc.getURL()">$msg.get("readmore")...</a>
<hr/>
</div>
</div>
#end
<div class="clr"></div>
</div>
#end
##
##
##
## HOME PAGE MODULE 3: FEATURED CONTENT
##
##
#macro(itemtitle $title $fulltextlink)
#set($link = $fulltextlink)
#normalizelink($link)
<h4 class="itemtitle">#if ($link != "")<a href="${link}">#end $title#if ($link != "")</a>#end </h4>
#end
##
#macro(featured_content_item $title $text $fulltextlink)
<div class="hitem">
#itemtitle($title $fulltextlink)
#paragraph($text $fulltextlink "")
</div>
#end
##
#macro(home_featured_content $items)
#titlebar($msg.get("featuredContent.title") $msg.get("featuredContent.titlebarRight") "Main.FeaturedContent" "red")
#foreach ($item in $items)
#set($name     = $item.get(0))
#set($subtitle = "featuredContent.${name}.subtitle")
#set($infos    = "featuredContent.${name}.infos")
#set($link     = $item.get(1))
#featured_content_item($msg.get($subtitle) $msg.get($infos) $link)
#end
#end
##
##
##
##
## Home page module 4: Featured Partner
##
##
##
#macro(featured_partner_item $title $text $imagelink $fulltextlink)
<div class="">
#itemtitle($title $fulltextlink)
#set($image = $xwiki.getAttachmentURL("Main.Partners", $imagelink))
#paragraphimg("portrait" $image "" $text $fulltextlink "" "")
<div class="clr"></div>
</div>
#end
##
#macro(home_featured_partners $partner $image $fulltextlink)
#titlebar($msg.get("featuredPartner.title") $msg.get("featuredPartner.titlebarRight") "Main.Partners" "blue")
#set($name = "partners.${partner}.name")
#set($name = $msg.get($name))
#set($desc = "partners.${partner}.intro")
#set($desc = $msg.get($desc))
#featured_partner_item($name $desc $image $fulltextlink)
#end
##
##
##
##
##  Home Page Module 5: News
##
#macro(home_news $nr $lefttitle $righttitle)
#set($nbstart = "0")
#set($space = "News")
#set($color = "purple")
#set($parent = "News.WebHome")
#set($itemname = "News")
#set($spacesql = " and doc.web='${space}'")
#set ($sql = ", BaseObject as obj where obj.name=doc.fullName and obj.className='XWiki.ArticleClass' and doc.name<>'ArticleClassTemplate' and doc.web='News' order by doc.creationDate desc")
#set($inbitems = $nr)
#set($inbstart = $xwiki.parseInt($nbstart))
<div class="homepage_news">
#if($lefttitle == "")
#set($lefttitle = "News - Staff Blogs")
#end
#if($righttitle == "")
#set($righttitle = "Go to the staff blog section")
#end
#titlebar($lefttitle $righttitle "News.WebHome" $color)
#foreach ($item in $xwiki.searchDocuments($sql, $inbitems, $inbstart))
<div class="hnewsentry">
<div class="hnewsmeta">
#set($bentrydoc = $xwiki.getDocument($item))
#set($bentryobj = $bentrydoc.getObject("XWiki.ArticleClass"))
#set($creationDate = $xwiki.formatDate($bentrydoc.creationDate, $msg.get("dateFormatLong")))
#set($author = $bentrydoc.creator)
${creationDate} &ndash; $msg.get("publishedby", [$xwiki.getLocalUserName($author)])
</div> ## hnewsmeta
#set($title = $!bentrydoc.display("title","view", $bentryobj))
#if($title == "")
#set($title = "&nbsp;")
#end

#itemtitle($title $bentrydoc.fullName)
<div class="hnewscontent">
#getNewsExtract($bentryobj $bentrydoc $content 400)
$bentrydoc.getRenderedContent($content)<a href="${bentrydoc.getURL()}" class="readmore">$msg.get("readmore")...</a>
</div> ## hnewscontent
</div> ## hnewsentry
<hr/>
#end
</div> ## homepage_news
#end
##
##
########
##
##  Member home page menu
##
#macro(member_menu $buttons)
<div class="membercontribmenu">
#set($first = "first")
#foreach($button in $buttons)
#if($velocityCount != 1)
#set($first = "")
#end
#member_menu_button($button.get(0) $button.get(1) $button.get(2) "${first}")
#end
<div class="clr"></div>
</div>
#end
#macro(member_menu_button $text $linkro $imagero $first)
#set($image = $imagero)
#normalizeattachment($image)
#set($link = $linkro)
#normalizelink($link)
<a class="membercontribbtn ${first}" style="background-image: url(${image})" href="$link">$text</a>
#end
##
##
##
##
##
## PAGE MODULES
##
##
##
## Module 1: board members
##
##
#macro(board_display_member $name $url $desc)
<tr>
  <td class="personl">[$name>$url]</td>
  <td>$desc</td>
</tr>
#end
##
##
#macro(board_display_member_flag $name $url $country $flag $desc)
<tr>
  <td class="flag"><img src="$xwiki.getAttachmentURL("Main.Board", $flag)" width="24" height="15" alt="${country}"/></td>
  <td class="person">[$name>$url]</td>
  <td>$desc</td>
</tr>
#end
##
##
##
##
##
##
##  MessageBox Macros
##
#macro(messageboxstart $title $color)
    <div class="messagebox $color">
      <div class="titlebar titlebar_$color">$title</div>
      <div class="messageboxcontent">
#end
#macro(messageboxend)
      </div>
    </div>
#end
##
##
##
##  PANEL Macros
##
##
#macro(displaypanelcontent $doc $obj)
$doc.display("content", $obj)
#end
#macro(panelheadercolor $title $color)
#set($cookieName = "${context.user}_${panel}")
#set($expanded = "expanded")
#set($expanded = $xwiki.getUserPreferenceFromCookie($cookieName))
<div class="panel $expanded $color">
<h5 class="xwikipaneltitle $color" onclick="if(eltHasClass(this.parentNode, 'expanded')) createCookie('$cookieName','collapsed', ''); else eraseCookie('$cookieName'); togglePanelVisibility(this.parentNode);">$title</h5>
<div class="xwikipanelcontents">
#end
#macro(panelheadercolornocollapse $title $color)
<div class="panel expanded $color">
<h5 class="xwikipaneltitle $color">$title</h5>
<div class="xwikipanelcontents">
#end
#macro(panelrounded $lefttitle $righttitle $link)
<div style="clear:both; width:670px;">
 <div class="titlebar rounded">
  <div class="titlebar_left">$lefttitle</div>
  <div class="titlebarRight">[$righttitle>$link]</div>
 </div>
 <div class="panelroundedcontent">
#end
#macro(panelroundedfooter)
 </div>
 <div class="panelroundedfooter"></div>
</div>
#end
#macro(panelfooter)
</div>
</div>
#end
#macro(panelheadercustom $color)
<div class="custompanel custompanel_$color xwikipanelcontents">
#end
#macro(panelfootercustom)
</div>
#end
#macro(panelheader $title)
<div class="panel expanded">
<h5 class="xwikipaneltitle" onclick="togglePanelVisibility(this.parentNode);">$title</h5>##<span class="xwikipanelarrow" onclick="alert(5);">&nbsp;</span>
<div class="xwikipanelcontents">
#end
#macro(largepanelheader $title)
<div class="large panel expanded">
<h5 class="xwikipaneltitle" onclick="togglePanelVisibility(this.parentNode);">$title</h5>##<span class="xwikipanelarrow" onclick="alert(5);">&nbsp;</span>
<div class="xwikipanelcontents">
#end
#macro(panelfooter)
</div>
</div>
#end
#macro(panelrounded2 $lefttitle $righttitle $link $color)
<div class="panelrounded panelrounded_$color">
 <div class="panelroundedtitle">
  <div class="panelroundedleft">$lefttitle</div>
  <div class="panelroundedright">#if($link!="")[$righttitle>$link]#end</div>
 </div>
 <div class="panelroundedcontent2">
  <div class="panelroundedcontentinner">
#end
#macro(panelroundedfooter2)
  </div>
 </div>
 <div class="panelroundedfooter2"></div>
</div>
#end
#macro(largepanelcolor $title $color)
<div class="largepanel largepanel_$color expanded">
<h5 class="xwikipaneltitle" onclick="togglePanelVisibility(this.parentNode);">$title</h5>##<span class="xwikipanelarrow" onclick="alert(5);">&nbsp;</span>
<div class="xwikipanelcontents">
#end
##
##
#############################################
##
##  NAVIGATION Panel
##
##  Begin panel: includes link to HOME
#macro(beginNavigationPanel)
<div class="panel expanded curriki-navigation">
<div class="xwikipanelcontents">
<div class="curriki-nav-container">
#set($active = false)
#checkActive("Main.WebHome" $active)
<div class="curriki-nav-main#if($active) mainactive active lactive#end" #if(!$active) onmouseover="addClass(this, 'active mainactive')" onmouseout="rmClass(this, 'active mainactive')" #end><h4>[$msg.get("navigationHome")>Main.WebHome]</h4></div>
#end
##
##  End panel
#macro(endNavigationPanel)
</div> ## nav contents
</div> ## panel contents
</div> ## panel
#end
##
## Macro for verifying if an entry in the nav panel is active
#macro(checkActive $docname $result)
#if($doc.fullName == $docname)
#if($doc.space == "MyCurriki" && "$!request.user" != "")
#set($result = false)
#else
#set($result = true)
#end
#end
#end
##
## Displays a navigation category, with sub-elements
#macro(navigationCategory $text $link $expanded $items)
#if($doc.web.startsWith("Coll_"))
#set($expanded = false)
#set($cookiebase = "${context.user}_asset_")
#else
#set($cookiebase = "${context.user}_")
#end
#if(!$navcatcounter)
#set($navcatcounter = 1)
#else
#set($navcatcounter = $navcatcounter + 1)
#end
#set($id = "currikinavcategory_${navcatcounter}")
#if($expanded == true)
#set($cookiemagic = "if(expanded) createCookie('${cookiebase}${id}','false', ''); else eraseCookie('${cookiebase}${id}');")
#else
#set($cookiemagic = "if(expanded) eraseCookie('${cookiebase}${id}'); else createCookie('${cookiebase}${id}', 'true', '');")
#end
#set($exp2 = "")
#set($exp2 = $xwiki.getUserPreferenceFromCookie("${cookiebase}$id"))
#if(!$exp2.equals(""))
#if($exp2 == 'true')
#set($expanded = true)
#else
#set($expanded = false)
#end
#end
#set($active = false)
#foreach($item in $items)
#checkActive($item.get(1) $active)
#end
<div id="$id" class="curriki-nav-category #if($active) active #end expanded">
#if(!$expanded)
<script type="text/javascript">
togglePanelVisibility(document.getElementById("${id}"));
</script>
#end
#set($theCategLink = $link)
#normalizelink($theCategLink)
<div class="curriki-nav-header" onclick="var expanded = eltHasClass(this.parentNode, 'expanded'); ${cookiemagic} togglePanelVisibility(this.parentNode)" #if(!$active) onmouseover="var expanded = eltHasClass(this.parentNode, 'expanded'); addClass(this.parentNode, 'active'); if (!expanded) addClass(this.parentNode, 'activecollapsed');" onmouseout="rmClass(this.parentNode, 'active'); rmClass(this.parentNode, 'activecollapsed')" #end>
<img src="$xwiki.getSkinFile("pixel.gif")" width="20" height="15" />
<h4>#if($link != "")<a href="$theCategLink" onclick="event.cancelBubble = true;">$text</a>#else $text#end </h4></div>
<ul>
#foreach($item in $items)
#set($active = false)
#checkActive($item.get(1) $active)
#set($theItemLink = $item.get(1))
#normalizelink($theItemLink)
<li class="#if($active) lactive #end #if($velocityCount == $items.size()) last #end"><a href="$theItemLink">$item.get(0)</a></li>#end</ul></div>
#end
##
## Displayes a navigation entry (without sub-elements)
#macro(navigationTopLevelEntry $text $link)
#set($active = false)
#checkActive($link $active)
<div class="curriki-nav-tlentry#if($active)active lactive #end" #if(!$active) onmouseover="addClass(this, 'curriki-nav-tlentryactive')" onmouseout="rmClass(this, 'curriki-nav-tlentryactive')" #end>
<div class="curriki-nav-header"><h4>[$text>$link]</h4></div>
</div>
#end
##
##
#############################################
##
##  FEATURED MEMBERS Panel: Display a Memeber
##
#macro(displayMember $member)
#if(!$member.startsWith("XWiki."))
#set($member = "XWiki.${member}")
#end
#set($memberdoc = $xwiki.getDocument($member))
#if(!$memberdoc.isNew())
#set($memberobj = $memberdoc.getObject("XWiki.XWikiUsers"))
<div class="vcard">
   <div class="userpic">
#if($memberdoc.attachmentList.size()==0)
   <img src="$xwiki.getSkinFile("nouserpicsmall.jpg", true)" alt=""/>
#else
   #set($width = 72)
   #foreach ($attach in $memberdoc.attachmentList)
#if($velocityCount == 1)
     <a href="$memberdoc.getURL()"><img class="photo" src="$memberdoc.getAttachmentURL($attach.filename,"download")" width="${width}" alt="$xwiki.getUserName($member, false)"/></a>
#end
#end
#end
</div> ## userpic
<div class="userdata"><h5 class="fn">$xwiki.getUserName($member, true)</h5>
#set($city = $memberobj.getProperty("city").value)
#set($country = $memberobj.getProperty("country").value)
#set($hasCountry = true)
#if($country.trim().equals("") || $country.trim().equals("---")) #set($hasCountry = false) #end
#set($hasCity = true)
#if($city.trim().equals("") || $city.trim().equals("---")) #set($hasCity = false) #end
#if($hasCountry || $hasCity)<address class="adr">(#if($hasCity)<span class="locality">$city</span>#end#if($hasCountry && $hasCity) - #end#if($hasCountry)<span class="country-name">$memberobj.display("country", "view")</span>#end)</address>#end
<div class="userdesc">#set($content = $memberdoc.display("comment", "view", $memberobj))
#if($content.length()>256)
#set($i = $content.lastIndexOf(" ", 256))
#set($i = $i + 1)
#set($content = "${content.substring(0,$i)} [...>${memberdoc.fullName}]")
#end
$memberdoc.getRenderedContent("$!content")</div>
</div> ## userdata
<div class="clr"></div>
</div> ## vcard
#end
#end
##
##
##
##
## Blogs
##
##
#macro(displayBlogArticle $bentrydoc $bentryobj $displayFully)
#set($creationDay = $xwiki.formatDate($bentrydoc.creationDate,$msg.get("dateFormat")))
#set($creationHour = $xwiki.formatDate($bentrydoc.creationDate,"hh:mm a"))
#set($title = $!bentrydoc.display("title","view", $bentryobj))
#if($title == "")
#set($title = "&nbsp;")
#end
1 $title
#set($extract = $!bentrydoc.display("extract","view", $bentryobj))
<div class="article_content" >
#set($content = $bentrydoc.display("content", "view", $bentryobj))
#if(!$displayFully)
 #if($!extract != "")
  #set($content = $extract)
 #else
  #if($content.length()>400)
   #set($i = $content.lastIndexOf(" ",400))
   #set($i = $i + 1)
   #set($content = "${content.substring(0,$i)}")
  #end
 #end
#end
$bentrydoc.getRenderedContent($content) #if($bentrydoc.fullName != $doc.fullName || !$displayFully)
<div class="clearfloats"></div>

<a href="$bentrydoc.getURL("view", "bc=$!request.bc")" class="curriki-link">$msg.get("caption.readmore")</a>#end
</div>
<div class="clearfloats"></div>
<div class="article_footer" style="border: solid 1px #CDCDCD; padding: 10px; margin-bottom: 5px;">
$msg.get("myBlog.postedBy", [$xwiki.getLocalUserName($bentrydoc.creator), $creationDay, $creationHour]) #sep() [$bentrydoc.comments.size() $msg.get("caption.comment")(s)>#if($bentrydoc.fullName != $doc.fullName)${bentrydoc.fullName}?bc=$!request.bc#end#comments]
</div>
<div class="article_footer" style="border: solid 1px #CDCDCD; padding: 10px; margin-bottom: 5px;">
#if($context.user != "XWiki.XWikiGuest" && $xwiki.hasAccessLevel("view", "XWiki.XWikiGuest", $bentrydoc.fullName))
<a class="curriki-link" href="$bentrydoc.getURL("view")" onclick="stafShow(this.href); return false;">$msg.get("caption.sendToAFriend")</a>
## #sep()
#else
<a class="curriki-link" href="$bentrydoc.getURL("view")" >$msg.get("myBlog.permalink")</a>
#end
#sep() {pre}
#if ($bentrydoc.hasAccessLevel("edit"))
<a class="curriki-link" href="$bentrydoc.getURL("inline")" >$msg.get("caption.edit")</a>
#set($deleteMsg = $msg.get('mycurriki.blog.actions.delete.confirm'))
#set($blogUrl = $xwiki.getURL("MyCurriki.Blog"))
#set($deleteUrl = $xwiki.getURL("XWiki.DeleteDocument", "view", "confirm=1&docName=${bentrydoc.fullName}&sourceDoc=${blogUrl}"))
#sep() <a class="curriki-link" onclick="this.href='$deleteUrl'; return confirm('$deleteMsg');" href="javascript:void()">$msg.get("caption.delete")</a>
#end
{/pre}
</div>
#end
##
##
##
##
##
## AssetTemplate macros
##
##
#macro(beginassetsection $lefttitle $link $showAllvar)
#set($doHide = !$showAllvar)
#if(!$seccounter)
#set($seccounter = 1)
#else
#set($seccounter = $seccounter + 1)
#end
<div id="section_${seccounter}">
#set($closedGif = $xwiki.getSkinFile("icons/collapse.png"))
#set($openedGif = $xwiki.getSkinFile("icons/collapse_down.png"))
#set($defaultGif = $openedGif)
#if($doHide)
 #set($defaultGif = $closedGif)
#end
#findCurrikiTitle($embeddedDoc)
<div class="righttext">
  <span id="section${seccounter}title">
    <div class="lefttext" style="width: 438px;">
      <img src="$defaultGif"/>&nbsp;
      <strong class="strong">$currikiTitle</strong>
    </div>
  </span>
#if(!$isPrint)
  <div>
    <a href="$xwiki.getURL($embeddedDoc.fullName, "view", "bc=$!{bcLocal}")">$msg.get("asset.openToView")</a>
  </div>
#end
</div>
<div class="clearfloats"></div>
<script type="text/javascript">
#if(!$togglesectionvisibility)
#set($togglesectionvisibility = 1)
function toggleSectionVisibility(seccounter, showhide){
  var seccontent = document.getElementById("section" + seccounter + "content");
  if(eltHasClass(seccontent, "hidden")){
    rmClass(seccontent, "hidden");
    // change icon
    var imgElem = showhide.firstChild.firstChild;
    imgElem.setAttribute("src", "$openedGif");
    // erase cookie
    eraseCookie("Section" + seccounter + "Hidden");
  }
  else{
    addClass(seccontent, "hidden");
    // Change icon
    var imgElem = showhide.firstChild.firstChild;
    imgElem.setAttribute("src", "$closedGif");
    // set cookie
    createCookie("Section" + seccounter + "Hidden", true, "");
  }
  return false;
}
#end
addClass(document.getElementById("section${seccounter}title"), "titlebar_left");
var showhide${seccounter} = document.getElementById("section${seccounter}title");
showhide${seccounter}.setAttribute("onclick", "toggleSectionVisibility(${seccounter}, showhide${seccounter}); return false;");
showhide${seccounter}.onclick = new Function("toggleSectionVisibility(${seccounter}, showhide${seccounter}); return false;");
#if($doHide)
createCookie("Section${seccounter}Hidden", true, "");
#end
</script>
<div id="section${seccounter}content" class="#if($doHide)hidden#end">
#end
##
##
##
##
#macro(displayassettitlebar $asset, $isPrint)
 <div class="asset-metadatas">
 #findCurrikiTitle($asset)
 #if($request.rev)
 #set($currikiTitle = "$currikiTitle $msg.version $request.rev")
 #end
 #titlebar($currikiTitle "" "" "red")
</div>
#end
##
##
##
##
#macro(displayassetmetadatas $asset, $isPrint)
#set($assetObj = $asset.getObject("XWiki.AssetClass"))
 <div class="asset-metadatas">
 #findCurrikiTitle($asset)
 #titlebar($currikiTitle "" "" "red")
<div class="asset-metadatas-block">
 *$msg.get("metadata.description_title"):* <br />
 $asset.description
<table width="100%"><tr><td width="263">
 *$msg.get("metadata.fw_items_title"):* <br />
<select name="fw_items" multiple size="3">
#if($!asset.fw_items.trim() == "")
 <option>All</option>
#else
 #set($subjects = "")
 {pre}#set($sitems = $asset.fw_items.split("<br />")){/pre}
 #set($previousCat = "")
 #foreach($sitem in $sitems)
  #if($sitem.trim().startsWith("Subject Index &gt;"))
   #set($sitem = $sitem.trim().substring(18))
  #end
  #set($gtIndex = $sitem.indexOf("&gt;"))
  #if($gtIndex != -1)
   #set($foundCat = $sitem.substring(0, $gtIndex).trim())
   #if($foundCat != $previousCat)
    #set($previousCat = $foundCat)
    <option>$previousCat</option>
   #end
   #set($nextIndex = 4 + $gtIndex)
   <option>&nbsp; &nbsp; $sitem.substring($nextIndex)</option>
  #else
   #set($previousCat = $sitem)
   <option>$previousCat</option>
  #end
 #end
#end
</select>
</td><td width="61"> </td><td width="263">
 *$msg.get("metadata.educational_level_title"):* <br />
#set($levels = $!asset.educational_level2)
<select name="levels" multiple size="3">
#if($levels == "Choose from list...")
 <option>All</option>
#else
 {pre}#set($litems = $levels.split("#--#")){/pre}
 #set($levels = "")
 #foreach($litem in $litems)
  <option>${litem}</option>
 #end
#end
</select>
</td></tr></table>
<table width="100%"><tr><td width="42%">
#set($creatorDoc = $xwiki.getDocument($asset.creator))
#set($width = 52)
#if($asset.space.startsWith("Coll_Group_")) ## {
#set($spacehome = $asset.space.replaceFirst("Coll_", ""))
## For group assets
#set($m_sm = $xwiki.csm)
#set($s = $m_sm.getSpace($spacehome))
#set($sUrl = $s.getHomeURL())
#groupLogo( $s )
<div id="asset-metadatas-block-groupname">
<span style="font-size: 90%; color: #919179;">$msg.get("asset.groupfrom")</span>
 <a href="${sUrl}">{pre}$xwiki.escapeText($s.getDisplayTitle()){/pre}</a>
</div>
<div id="asset-metadatas-block-username">
<span style="font-size: 90%; color: #919179 ;">$msg.get("asset.createdby")</span> $!xwiki.getUserName($asset.creator)
</div>
#else ## } {
## For non-group assets
<table><tr><td>
#if($creatorDoc.attachmentList.size()==0)
 <img src="$xwiki.getSkinFile("noavatar.png")" width="${width}"/>
#else
 #foreach ($attach in $creatorDoc.attachmentList)
  <a href="$creatorDoc.getURL("view")" >
  <img src="$creatorDoc.getAttachmentURL($attach.filename,"download")" width="${width}" /></a>
 #end
#end
</td><td valign="bottom">
<span style="font-size: 90%; color: #919179 ;">$msg.get("asset.createdby")</span><br />
$!xwiki.getUserName($asset.creator)
</td></tr></table>
#end ## }
</td><td width="16%">
 *$msg.get("asset.lastupdated"):* <br />
$!xwiki.formatDate($asset.date, $msg.get("dateFormat"))
</td><td width="42%">
<div style="float:right;">
#set($status = $!asset.status)
#if($status.trim() == "Choose from list...")
 #set($status = " ")
#end
#displayCRS($asset)
</div>
</td></tr></table>
</div>
#if(!$isPrint)
<hr class="my-curriki-hr" >
#if($request.showMeta == true)
<div class="asset-metadatas-block">

 *$msg.get("metadata.keywords_title"):* $!asset.display("keywords", "view", $assetObj)

 *$msg.get("metadata.language_title"):* $!asset.display("language", "view", $assetObj)

 *$msg.get("metadata.instructional_component_title2"):* <br />
#set($instrComponent = $!asset.display("instructional_component2","view", $assetObj))
<select name="componentType" multiple size="3">
#if($instrComponent != "Choose from list...")
 #set($icitems = $instrComponent.split("#--#"))
 #foreach($icitem in $icitems)
  <option>${icitem}</option>
 #end
#end
</select>

#set($rightsObject = $asset.getObject("XWiki.AssetLicenseClass"))
#set($holder = $!asset.display("rightsHolder", "view", $rightsObject))
#if($xwiki.getDocument($holder).isNew() == false)
 #set($holder = $xwiki.getLocalUserName($holder))
#end
#if($holder == "WebHome")
 #set($holder = " ")
#end
 *$msg.get("metadata.right_holder_title"):* $!holder

 *$msg.get("metadata.rights_title"):* $!asset.display("rights", "view", $assetObj)

 *$msg.get("metadata.license_type_title"):* $!asset.display("licenseType2", "view", $rightsObject)

#set($hidden = $!asset.display("hidden_from_search", "view", $assetObj))
#if($hidden == "")
#set($hidden = $msg.get("yesno_0"))
#end
 *$msg.get("metadata.hidden_from_search"):* $hidden

</div>
<hr class="my-curriki-hr" >
#end
<div class="asset-metadatas-block">
<div class="righttext">
#if($request.showMeta == true)
<a href="$asset.getURL("view", "bc=$!request.bc")">$msg.get("asset.closeMoreInformation")</a>
#else
<a href="$asset.getURL("view", "bc=$!request.bc&showMeta=true")">$msg.get("asset.moreInformation")</a>
#end
</div>
</div> ## asset-metadatas-block
#end ## if ! print
<hr class="my-curriki-hr" >
</div>
#end ##macro metadatas
##
##
##
##
#macro(displaylinks $asset)
 #if($asset.hasAccessLevel("edit"))
  #if($asset.getObject("XWiki.CompositeAssetClass"))
   <a href="javascript:addFileToCollection2('$xwiki.escapeURL($asset.fullName)');">$msg.get("caption.addResourceToThisCollection")</a>
   #sep()
  #end
 #end
 #if(($asset.hasAccessLevel("view"))&&($context.user!="XWiki.XWikiGuest"))
  <a href="javascript:addExistingResource2('$xwiki.escapeURL($asset.fullName)');">$msg.get("caption.addToCollection")</a>
  #sep()
 #end
 #if($asset.hasAccessLevel("view"))
  <a href="$asset.getURL("view", "viewer=print")" onclick="window.open('$asset.getURL("view", "viewer=print")');return false;">$msg.get("caption.print")</a>
 #end
 #if($asset.hasAccessLevel("edit"))
  #sep() <a href="#gwtEditUrl(${asset.fullName})" onclick="window.open('#gwtEditUrl(${asset.fullName})');return false;">$msg.get("caption.edit")</a>
 #end
#end
##
##
##
##
#macro(displayAssetContent $asset $develop $showAll)
#if(!$asset.hasAccessLevel("view"))
 $msg.get("asset.contentNotAllowed")
#else
#set($objTxt = $asset.getObject("XWiki.TextAssetClass"))
#set($objComp = $asset.getObject("XWiki.CompositeAssetClass"))
#if($asset.getObject("XWiki.TextAssetClass"))
<div class="asset-content-body">
#if($objTxt.type == 1)
{pre}$asset.getValue("text",$objTxt){/pre}
#else
$objTxt.text
#end
<div class="clearfloats"></div>
</div>
#elseif ($asset.getObject("XWiki.VIDITalkAssetClass"))
 #set($objVT = $asset.getObject("XWiki.VIDITalkAssetClass"))
 #set($video_id = $objVT.video_id)
<div class="asset-content-body" style="text-align:center;">
 #includeForm("GWT.ViditalkPlayback")
<div class="clearfloats"></div>
</div>
#elseif ($objComp && $objComp != "")
 #if($develop)
 <div class="asset-content-body">
#set($objs = $asset.getObjects("XWiki.SubAssetClass"))
#set($assetList = $xwiki.arrayList)
#foreach($obj in $objs)
#set($ok = $assetList.add(""))
#end
#foreach($obj in $objs)
#set($ok = $asset.use($obj))
#set($position = $asset.getValue("order"))
#set($assetPage = $asset.getValue("assetpage"))
#if($position >= $assetList.size())
#set($ok = $assetList.add($assetPage))
#else
#set($ok = $assetList.set($position.intValue(), $assetPage))
#end
#end
##set($hql = "select str.value from BaseObject obj, StringProperty str, LongProperty lg where obj.className='XWiki.SubAssetClass' and obj.name='$asset.fullName' and obj.id=str.id.id  and obj.id=lg.id.id and str.name='assetpage' and lg.name='order' order by lg.value ")
##set($assetList = $xwiki.search($hql))
  #foreach($assetPage in $assetList)
   #if(($assetPage == "PAGEBREAK")||($assetPage == ""))
 <hr >
   #else
    #set($embeddedDoc = $xwiki.getDocument($assetPage))
    #set($type = "")
    #set($type = $!embeddedDoc.getValue("type", $embeddedDoc.getObject("XWiki.TextAssetClass")))
    #if("$type"=="2")
## We are not showing direction block assets
    #elseif(!$xwiki.hasAccessLevel("view", $context.user, $assetPage))
## We are not showing protected assets
##     $msg.get("asset.contentNotAllowed")
    #else
     #set($embeddedDoc = $xwiki.getDocument($assetPage))
     #if($embeddedDoc.getObject("XWiki.CompositeAssetClass"))
      <div class="asset-content-body-composite-composite">
#findCurrikiTitle($embeddedDoc)
      <div class="righttext"><div class="lefttext">
<a href="$xwiki.getURL($embeddedDoc.fullName, "view", "bc=$!{bcLocal}")">*$currikiTitle*</a>
</div>
<a href="$xwiki.getURL($embeddedDoc.fullName, "view", "bc=$!{bcLocal}")">$msg.get("asset.openToView")</a>
</div>
      </div>
     #else
      <div class="asset-content-body-composite-source">
#findCurrikiTitle($embeddedDoc)
#beginassetsection($currikiTitle $embeddedDoc.fullName $showAll)
       ##<div class="righttext"><div class="lefttext"> *$currikiTitle* </div><a href="$xwiki.getURL($embeddedDoc.fullName, "view", "bc=$!{bcLocal}")">$msg.get("asset.openToView")</a></div>
       #set($objComp = "")
       #displayAssetContent($embeddedDoc false $showAll)
#endsection()
 	  </div>
     #end
    #end ## content view right
   #end
  #end
 </div>
 #else
## This text should be never displayed !!!!
  Composite (not developed) : $!asset.displayTitle [$msg.get("asset.openToView")>$asset.fullName]
 #end
#elseif ($asset.attachmentList.size() > 0)
#set($attachedFile = $asset.attachmentList.get(0))
 #set($mime = $attachedFile.mimeType)
 #set($hql = "select prop2.value from BaseObject as obj, StringProperty as prop, StringProperty as prop2 where  obj.className='XWiki.MimeTypeClass' and prop.id.id = obj.id and prop2.id.id = obj.id and prop2.id.name = 'specificDisplayTemplate' and prop.id.name = 'mimeType' and prop.value='$mime'")
 #set($sDisp = $xwiki.xWiki.search($hql, $context.context))
 #set($mimeDisplay = "MimeType.DefaultDisplay")
 #if($sDisp && $sDisp.size() > 0 && $sDisp.get(0).trim() != "")
  #set($mimeDisplay = $sDisp.get(0))
 #end
 <div class="asset-content-body" style="text-align:center;">
 #set($mimedoc = $asset)
 #includeForm($mimeDisplay)
 <div class="clearfloats"></div>
 </div>
 <hr class="my-curriki-hr" >
 <div class="asset-content-options">
  <a href="$asset.getAttachmentURL("${attachedFile.filename}", "download")" title="$msg.get("downloadthisattachment")">
  $attachedFile.getFilename().toLowerCase()
  </a>&nbsp;&nbsp;
  <a class="button" href="$asset.getAttachmentURL("${attachedFile.filename}", "download", "force-download=1")" onclick="window.open('$asset.getAttachmentURL("${attachedFile.filename}", "download", "force-download=1")');return false;" title="$msg.get("downloadthisattachment")">$msg.get("caption.download")</a>
 </div>
 <div class="clearfloats"></div>
#else
<div class="asset-content-body">
 #set($objExt = $asset.getObject("XWiki.ExternalAssetClass", true))
$msg.get("asset.externallink")
 #set($url = $asset.display("link", "view", $asset.getObject("XWiki.ExternalAssetClass")))
 #if($url.endsWith("jpg") || $url.endsWith("gif"))

  <div align="center"><a href="$url" onclick="window.open('$url'); return false;"><img src="$url" align="middle" width="200" /></a></div>
 #end

  <a href="$url" onclick="window.open('$url'); return false;">#breakLinkText($url, 90)</a>
  <div class="clearfloats"></div>
</div>
#end
#end ##view acces level
#end ##macro displaycontent
##
##
##
##
##
##
#macro(showCollection $subasset)
#set($collDoc = $xwiki.getDocument($subasset.assetpage))
#if ($xwiki.getDocument($subasset.assetpage) && $collDoc.hasAccessLevel("view"))
## look for the title
#findCurrikiTitle($collDoc)
## display the title
#titlebar($currikiTitle "" "" "red")
<div class="righttext"><div class="lefttext">
<div style="width:510px; text-align:left;">
*$msg.get("colls.description")* $!collDoc.description</div></div>
<a href="$xwiki.getURL($collDoc.fullName, "view", "bc=$!request.bc")">$msg.get("caption.view")</a> #if($collDoc.hasAccessLevel("edit"))
#sep() <a target="_blank" href="#gwtEditUrl(${collDoc.fullName})">$msg.get("caption.edit")</a>
#end
#if("XWiki.${shortname}" == $context.user || $xwiki.hasAdminRights() || $xwiki.checkAccess($collDoc.fullName, "delete"))
#set($deleteUrl = $xwiki.getURL("XWiki.DeleteDocument", "view", "confirm=1&docName=${collDoc.fullName}&sourceDoc=${localUrl}"))
#sep() <a onclick="this.href='$deleteUrl'; return confirm('$deleteMsg')" href="javascript:void()">$msg.get("caption.delete")</a>
#end
</div>
*$msg.get("colls.last_edited")* $!xwiki.formatDate($collDoc.date, $msg.get("dateFormat"))<br />
#if($!collDoc.fw_items.trim() == "")
 #set($subjects = "All")
#else
 #set($subjects = "")
 {pre}#set($items = $collDoc.fw_items.split("<br />")){/pre}
 #foreach($item in $items)
  #if($item.trim().startsWith("Subject Index &gt;"))
   #set($item = $item.trim().substring(18))
  #end
  #set($subjects = "${item}, ${subjects}")
 #end
 #set($sindex = $subjects.length() - 2)
 #set($subjects = $subjects.substring(0, $sindex))
#end
*$msg.get("colls.subjects")* $subjects<br />
#set($levels = $!collDoc.educational_level)
#if($levels == "Choose from list...")
 #set($levels = "All")
#else
 {pre}#set($litems = $levels.split("<br />")){/pre}
 #set($levels = "")
 #foreach($litem in $litems)
  #set($levels = "${litem}, ${levels}")
 #end
 #set($lindex = $levels.length() - 2)
 #set($levels = $levels.substring(0, $lindex))
#end
*$msg.get("colls.levels")* $levels
#if($context.user=="XWiki.${shortname}" || $xwiki.hasAdminRights())
<div class="righttext"><a class="button" onclick="addFile2(); return false;" href="#" title="$msg.get("colls.addResource")">$msg.get("colls.addResource")</a></div>
#end ##edit rights
#end ##view rights

#end
##
##
##
## UserProfile
##
##
#macro(dashIfEmpty $text)
#if($!text == "")
$msg.get("profile.emptyField")
#else
$text
#end
#end
##
##
##
##
##
#############################################################
#############################################################
#############################################################
#############################################################

## Adding this macro which does not seem to be loaded from albatross/macros.vm
#macro(xwikitopmenuentrystart $actionurl $linktext $id)
<div class="topmenuentry" onmouseover="showsubmenu(this);" onmouseout="hidesubmenu(this);" id="$id"><a class="tme" href="$actionurl"><strong>$linktext</strong></a><span class="hidden menucolon">: </span><span class="submenu hidden">
#end

## Macro to display the CRS rating image
##
#macro(displayCRSIcon $name $status) ##{
#set($__crsIcon = $xwiki.getSkinFile("crs${status}.gif"))
#set($__crsRating = $msg.get("curriki.crs.rating${status}"))
<span class="tooltip-generator">$xwiki.addTooltip("<img src='${__crsIcon}' id='tooltip-image-${name}' class='tooltip-image' height='48' />", $__crsRating, "ttWidth='auto'")</span>
#end ##}
##

## Curriki Review Status Macros
## This macro displays the current review status
## in the asset view page
#macro(displayCRS $asset)
<div class="crs_review">
<div class="crs_reviewtitle">
<a href="$xwiki.getURL("Coll_curriki.CurrikiReviewSystemCollection", "view", "bc=XWiki.curriki")">
$msg.get("curriki.crs.currikireview"):
</a>
</div>
#set($ok = $asset.use("XWiki.AssetClass"))
#set($rights = $!asset.getValue("rights"))
#if($asset.getObject("CRS.CurrikiReviewStatusClass"))
#set($ok = $asset.use("CRS.CurrikiReviewStatusClass"))
#set($status = $asset.getValue("status"))
#else
#set($status = "")
#end
#if((!$status)||($status=="0")||($status==""))
<div class="crs_reviewrating">
<div class="crs_reviewratingtext">
$msg.get("curriki.crs.unrated")
</div>
</div>
#else
#set($lastreview_date = $asset.getValue("lastreview_date"))
<div class="crs_reviewrating">
<div class="crs_reviewimage">
<a href="$asset.getURL("view", "viewer=comments")">
#displayCRSIcon("review", $status)
</a>
</div>
<div class="crs_reviewratingtext">
$msg.get("curriki.crs.rating${status}")
</div>
#if($lastreview_date)
<div class="crs_reviewratingdate">
$msg.get("curriki.crs.asof") $xwiki.formatDate($lastreview_date, $msg.get("dateFormat"))
</div>
#end
</div>
#end
#if(($status!="P")&&($rights!="private"))
#set($nomination = $asset.getValue("reviewpending"))
<div class="crs_reviewpending">
#if($nomination=="1")
$msg.get("curriki.crs.reviewpending")
#else
#if($context.user!="XWiki.XWikiGuest")
<a href="javascript:nominateAsset2('${asset.fullName}')">$msg.get("curriki.crs.nominate")</a>
#end
#end
</div>
#if($xwiki.hasAccessLevel("view", "CRS.Reviews"))
<div class="crs_reviewreview">
[$msg.get("curriki.crs.review")>CRS.Review?page=${asset.fullName}]
</div>
#end
#end
</div>
#end


## this macro diplays all the reviews in ante-chronological order
#macro(displayCRSReviews $asset)
#set($ok = $asset.use("CRS.CurrikiReviewStatusClass"))
#set($status = $asset.getValue("status"))
#if($status&&($status=="P"))
<div class="crs_reviews">
<div class="crs_reviewstitle">
$msg.get("curriki.crs.reviewlist.currikireview")
</div>
<div class="crs_reviewscontent crs_reviewscontentpartner">
<div class="crs_reviewscontent">
$msg.get("curriki.crs.reviewlist.currikihaspartnered")
</div>
</div>
</div>
#else
#set($reviewlist = $xwiki.arrayList)
#set($ok = $asset.use("XWiki.AssetClass"))
#set($ict = $asset.display("instructional_component2").replaceAll("#--#",","))
#foreach($obj in $asset.getObjects("CRS.CurrikiReviewClass"))
#if($obj)
#set($ok = $reviewlist.add(0, $obj))
#end
#end
#if($reviewlist.size()>0)
<div class="crs_reviews">
<div class="crs_reviewstitle">
$msg.get("curriki.crs.reviewlist.currikireview")
</div>
<div class="crs_reviewslist">
#foreach($obj in $reviewlist)
<div class="crs_reviewsreview">
#set($ok = $asset.use($obj))
#set($vtc = $asset.getValue("technicalcompletness"))
#set($vca = $asset.getValue("contentaccuracy"))
#set($vap = $asset.getValue("appropriatepedagogy"))
#set($rating = $asset.getValue("rating"))
#set($comment = $asset.display("comment"))
#set($date = $asset.getValue("date"))
#set($user = $asset.display("user"))
<div class="crs_reviewsdate">
$xwiki.formatDate($date, $msg.get("dateFormat"))
</div>
<div class="crs_reviewscomment">
#if($rating&&($rating!="0"))
$msg.get("curriki.crs.generatedcomment", [$ict, "#displayCRSIcon(${date.time}, ${rating})", $vtc, $vca, $vap, $comment])
#else
$msg.get("curriki.crs.generatedcommentunrated", [$ict, $vtc, $vca, $vap, $comment])
#end
</div>
</div>
#end
</div>
</div>
$xwiki.addTooltipJS()
#end
#end
#end

#macro(displayMode)
#set($mode = "")
#if($request.getParameter("viewer") && $request.getParameter("viewer").equals("print"))
#set($mode = "print")
#end
#if($request.getParameter("xpage") && $request.getParameter("xpage").equals("assetpreview"))
#set($mode = "preview")
#end
#if($request.getParameter("xpage") && $request.getParameter("xpage").equals("help"))
#set($mode = "help")
#end
#if($request.rev)
#set($mode = "rev")
#end
#if($mode!="")
#set($isPrint = true)
#else
#set($isPrint = false)
#end
#end
#macro(displayAsset $currDoc)
#if(!$isPrint)
<div class="asset-tabs">
<a class="asset-tab-selected" href="$currDoc.getURL("view", "bc=$!request.bc")">$msg.get("caption.view")</a>
<a class="asset-tab"  href="$currDoc.getURL("view", "bc=$!request.bc&viewer=comments")">Comments ($currDoc.comments.size())</a>
</div> ## tabs
#end
<div id="wizzard" class="asset-page">
#set($obj = $currDoc.getObject("XWiki.AssetClass", true))
#if(!$isPrint)
<div class="asset-links">
<div class="righttext">
#displaylinks($currDoc)
</div>
</div>
#end
<div class="asset-contents $mode">
#if(!$isPrint)
#displayassetmetadatas($currDoc, $isPrint)
#else
#displayassettitlebar($currDoc, $isPrint)
#end
<div class="asset-display">
##
## Uncomment the following block to enable the showAll option
##
## #if($request.viewAll == true)
##  #set($showAllvar = true)
## #else
##  #set($showAllvar = false)
## #end
##
#set($showAllvar = true)
##
 #displayAssetContent($currDoc true $showAllvar)
#if(!$isPrint)
<hr class="my-curriki-solid-hr" >
<div class="asset-content-footer">
<div class="asset-content-footer-bordered">
<a href="$currDoc.getURL("view", "bc=$!request.bc&viewer=comments")">$msg.get("caption.NComments", [$currDoc.comments.size()])</a> #sep()
#if($context.user != "XWiki.XWikiGuest" && $xwiki.hasAccessLevel("view", "XWiki.XWikiGuest", $currDoc.fullName))
<a href="$currDoc.getURL("view")" onclick="stafShow(this.href); return false;">$msg.get("caption.sendToAFriend")</a> #sep()
#else
<a href="$currDoc.getURL("view", "bc=$!request.bc")">$msg.get("caption.linkToThePage")</a> #sep()
#end
#displaylinks($currDoc)
</div> ##content-footer-bordered
</div> ##content-footer
#end ## if ! print
</div> ##display
</div> ##contents
</div>
#end
##
##
##
## MyCurriki Macros ## {
##
##
## MyCurriki tab macro
#macro(mycurrikitabs $curtab $whofor) ## {
#set($tabs = ["profile","favorites","contributions","collections","blog","groups"])
<div id="mycurriki-tabs" class="tabs">
#foreach($tab in $tabs) ## {
#if("$!whofor" == "" || $whofor == $context.user) ## {
#set($url=$xwiki.getURL($msg.get("mycurriki.tab.${tab}.page"), "view"))
#else ## } {
#set($url=$xwiki.getURL($msg.get("mycurriki.tab.${tab}.page"), "view", "user=${whofor}"))
#end ## }
<a class="tab#if($curtab==$tab) tab-selected#end" href="$url">$msg.get("mycurriki.tab.${tab}.label")</a>
#end ## foreach ## }
</div>
#end ## macro ## }
##
##
## MyCurriki header macro
#macro(mycurrikiheader $userobj) ## {
<div id="mycurriki-header" class="mycurriki-header">
<div id="mycurriki-header-title" class="heading-1">$userobj.first_name $userobj.last_name</div>
</div>
#end ## macro ## }
##
##
## Main curriki page generation macro
#macro(mycurrikipagefull $pageref $whofor $hasbutton) ## {
## Determine whofor
#if("$!whofor" == "") ## {
#if("$!request.user" != "") ## {
#set($whofor = $request.user)
#else ## } {
#if($doc.web.startsWith("Blog_")) ## {
#set($whofor = $doc.web.substring(5))
#else ## } {
#if("$!whofor" == "") ## {
#set($whofor = $context.user)
#end ## }
#end ## }
#end ## }
#end ## }
#if(!$whofor.startsWith("XWiki.")) ## {
#set($whofor = "XWiki.$whofor")
#end ## }
## Now know whofor
#set($userdoc = $xwiki.getDocument($whofor))
#set($userobj = $userdoc.getObject("XWiki.XWikiUsers"))
<div id="mycurriki-$pageref" class="mycurriki mycurriki-$pageref">
#mycurrikiheader($userobj)
#mycurrikitabs($pageref $whofor)
<div id="mycurriki-main" class="tab-container">
<div id="mycurriki-main-header">
#if($hasbutton == 1) ## {
#mycurrikipage_button($userobj)
#end ## }
#if("$!pageref" == "blog") ## {
#set($hasBlog=$xwiki.exists("Blog_${shortname}.WebHome"))
#if(!$hasBlog) ## {
#set($subtitle = $msg.get("mycurriki.tab.${pageref}.noblog.subtitle", ["$userobj.first_name $userobj.last_name"]))
#else ## }{
#set($subtitle = $msg.get("mycurriki.tab.${pageref}.subtitle", ["$userobj.first_name $userobj.last_name"]))
#end ## }
#else ## } {
#set($subtitle = $msg.get("mycurriki.tab.${pageref}.subtitle"))
#end ## }
<div id="mycurriki-main-header-left">
## <div id="mycurriki-main-header-title" class="main-title">
## TODO: Please note that these rules will only be valid for english
## #findUserPrefix($userdoc.fullName.substring(6))
## $userPrefix $msg.get("mycurriki.tab.${pageref}.label")
#if($hasbutton == 1) ## {
## <br />
#end ## }
## </div>
#if($subtitle != "" && $subtitle != "mycurriki.tab.${pageref}.subtitle") ## {
<div id="mycurriki-main-header-subtitle" class="tab-deck">$subtitle</div>
#end ## }
</div>
<div class="clearfloats"></div>
</div>
<div id="mycurriki-main-content" class="frame">
#mycurrikipage_content($userdoc $userobj)
</div>
</div>
</div>
#end ##macro ## }
##
##
## Page
#macro(mycurrikipage $pageref) ## {
#mycurrikipagefull($pageref "" 0)
#end ##macro ## }
##
##
## Page with Button
#macro(mycurrikipagewithbutton $pageref) ## {
#mycurrikipagefull($pageref "" 1)
#end ##macro ## }
##
##
## Subject breadcrumb macro
#macro(subjectBreadcrumb $bcParam $bcCurrentDoc)
 ##Preparation de la liste
 #set($bcParent = $bcParam)
 #if($bcParam && $!bcParam != "")
  #if($bcParam.endsWith($bcCurrentDoc.fullName))
   #set($bcLocal = $bcParam)
  #else
   #set($bcLocal = "${bcParam};${bcCurrentDoc.fullName}")
  #end
 #else
  #set($bcLocal = $bcCurrentDoc.fullName)
 #end
 #if(!$bcParam || $!bcParam == "")
  #parentsBreadcrumb($bcCurrentDoc 0)
 #end
 #set($bcLocal = $bcLocal.replace("FW_masterFramework.WebHome;", ''))
 ##Deroulage de la liste
 #set($isFirst = true)
 #set($previousBc = "")
 #foreach($bcItem in $bcLocal.split(";"))
  #if($bcItem != "" && $bcItem != "XWiki.XWikiUsers")
   #if(!$isFirst)
    &gt;
   #end
   #set($isFirst = false)
   #set($bcDoc = $xwiki.getDocument($bcItem.replace('/', '.')))
   #if($bcDoc.fullName == "XWiki.EditArticle" && $request.editArticle)
    #set($bcDoc = $xwiki.getDocument($request.editArticle))
   #end
   #findCurrikiTitle($bcDoc)
   #set($userArg = "")
   #if($bcDoc.space=="MyCurriki" && "$!request.user" != "")
    #set($userArg="&user=$request.user")
   #end
   <a href="$bcDoc.getURL("view", "bc=${previousBc}${userArg}")">$currikiTitle</a>
   #set($previousBc = "${previousBc};${bcItem}")
  #end
 #end
#end
##
##
## title Macro
#macro(mycurrikiassettitle $asset) ## {
#findCurrikiTitle($asset)
#set($title = $currikiTitle)
#if(!$title || $title.length() == 0) ## {
 #set($title = $msg.get("caption.untitled"))
#end ## }
<a class="curriki-link" href="$asset.getURL("view")">{pre}$title{/pre}</a>
#end ## macro ## }
##
##
## title with mouseover description Macro
#macro(mycurrikiassettitlewithmodesc $asset) ## {
#set($descnb = $descnb + 1)
#findCurrikiTitle($asset)
#set($title = $currikiTitle)
#if(!$title || $title.length() == 0) ## {
 #set($title = $msg.get("caption.untitled"))
#end ## }
<a class="curriki-link" href="$asset.getURL("view")" onmouseover="$('mycurriki-description-${descnb}').show();" onmouseout="$('mycurriki-description-${descnb}').hide();">{pre}$title{/pre}</a>
<div id="mycurriki-description-${descnb}" class="popup" style="display: none;">
{pre}
$msg.get("mycurriki.favorites.mouseover.description")<br />
$!asset.getObject("XWiki.AssetClass").getProperty("description").getValue() <br />
<br />
$msg.get('mycurriki.favorites.mouseover.subject') <br />
#set($subj = $!asset.getValue('fw_items'))
#set($c = 0)
#foreach($item in $subj) ## {
#if($item == "FW_masterFramework.WebHome") ## {
## Don't count WebHome
#else ## } {
#set($c = $c + 1)
#if($c <= 2) ## {
#set($fw = $xwiki.getDocument($item))
## $fw.displayTitle <br />
## #set($bcLocal = $item)
#subjectBreadcrumb("" $fw) <br />
#end ## }
#end ## }
#end ## }
#if($c > 2) ## {
...<br />
#end ## }
<br />
$msg.get('mycurriki.favorites.mouseover.level')<br />
#set($levl = $!asset.getValue('educational_level2'))
#set($c = 0)
#foreach($item in $levl) ## {
#set($c = $c + 1)
#if($c <= 2) ## {
$msg.get("search.selector.level.${item}")<br />
#end ## }
#end ## }
#if($c > 2) ## {
...<br />
#end ## }
{/pre}
</div>
#end ## macro ## }
##
##
## title with mouseover description Macro and breadcrumb for favorites
#macro(mycurrikifavassettitlewithmodesc $asset) ## {
#set($descnb = $descnb + 1)
#findCurrikiTitle($asset)
#set($title = $currikiTitle)
#if(!$title || $title.length() == 0) ## {
 #set($title = $msg.get("caption.untitled"))
#end ## }
<a class="curriki-link" href="$asset.getURL("view")" onmouseover="$('mycurriki-description-${descnb}').show();" onmouseout="$('mycurriki-description-${descnb}').hide();">{pre}$title{/pre}</a>
<div id="mycurriki-description-${descnb}" class="popup" style="display: none;">
{pre}
$msg.get("mycurriki.favorites.mouseover.description")<br />
$!asset.getObject("XWiki.AssetClass").getProperty("description").getValue() <br />
<br />
$msg.get('mycurriki.favorites.mouseover.subject') <br />
#set($subj = $!asset.getValue('fw_items'))
#set($c = 0)
#foreach($item in $subj) ## {
#if($item == "FW_masterFramework.WebHome") ## {
## Don't count WebHome
#else ## } {
#set($c = $c + 1)
#if($c <= 2) ## {
#set($fw = $xwiki.getDocument($item))
## $fw.displayTitle <br />
## #set($bcLocal = $item)
#subjectBreadcrumb("" $fw) <br />
#end ## }
#end ## }
#end ## }
#if($c > 2) ## {
...<br />
#end ## }
<br />
$msg.get('mycurriki.favorites.mouseover.level')<br />
#set($levl = $!asset.getValue('educational_level2'))
#set($c = 0)
#foreach($item in $levl) ## {
#set($c = $c + 1)
#if($c <= 2) ## {
$msg.get("search.selector.level.${item}")<br />
#end ## }
#end ## }
#if($c > 2) ## {
...<br />
#end ## }
{/pre}
</div>
#end ## macro ## }
##
##
## Access Rights Macro
#macro(mycurrikiaccess $asset) ## {
#set($access = $!asset.getObject("XWiki.AssetClass").getProperty("rights").getValue())
$msg.get("mycurriki.macro.access.${access}")
#end ## macro ## }
##
##
## ICT icon Macro
#macro(mycurrikiict $asset) ## {
#set($ict = "")
#set($ict = $!asset.getObject("XWiki.AssetClass").getProperty("instructional_component2").getValue())
#if($ict == "" || $ict.size() == 0) ## {
## No ICT set -- nothing to do
#else ## } {
#if($ict.size() > 1) ## {
##Multiple
#set($icon = $xwiki.getSkinFile("icons/ICTIcon-Multiple.gif"))
#set($text = $msg.get('search.results.col.ict.multiple'))
#else ## } {
##Single
#set($ict = $ict.get(0))
#set($icon = "${ict.substring(0,1).toUpperCase()}${ict.substring(1)}")
#set($icon = $icon.replaceFirst("_.*", ""))
#set($icon = $xwiki.getSkinFile("icons/ICTIcon-${icon}.gif"))
#set($text = $ict.replaceFirst("_", "."))
#set($text = "search.selector.ict.${text}")
#set($text = $msg.get($text))
#end ## if not multiple ## }
<a href="/xwiki/bin/view/Coll_curriki/InstructionalComponentTypeICT?bc=;Coll_curriki.CurrikiHelp;Coll_curriki.AboutLearningResources" target=\"ICT_HELP\"><img src="${icon}" alt="${text}" title="${text}" /></a>
#end ## if not empty ## }
#end ## Macro ## }
##
##
## File Type Icon Macro
#macro(mycurrikifiletype $asset) ## {
#if($asset.attachmentList.size() == 0) ## {
  #set($mime = "")
  #set($rowType="currikulum")
#else ## } {
  #mimeicon($asset.attachmentList.get(0).getFilename())
  #set($mime = $asset.attachmentList.get(0).mimeType)
  #set($rowType="mime")
#end ## }
#if($asset.getObject("XWiki.TextAssetClass")) ## {
  #set($rowType="currikulum")
#else ## } {
#if($asset.getObject("XWiki.ExternalAssetClass")) ## {
  #set($rowType="URL")
#end ## }
#end ## }
#if($rowType == "URL") ## {
#set($text = $msg.get("mycurriki.macro.filetype.URL"))
{pre}<img src="$xwiki.getSkinFile("mimetypes/HTM.gif")" alt="[${text}]" title="[${text}]"/>{/pre}
#end ## }
#if($rowType == "mime") ## {
#if(!$m_fileExt || $m_fileExt == "Unknown") ## {
  #set($text = $msg.get("mycurriki.macro.filetype.unknown"))
#else ## } {
  #set($text = $m_fileExt)
#end ## if ext ## }
{pre}<img src="$macro_iconUrl" alt="[${text}]" title="[${text}]"/>{/pre}
#end ## if mime ## }
#if($rowType == "curriki-link") ## {
#set($text = $msg.get("mycurriki.macro.filetype.curriki"))
{pre}<img src="$xwiki.getSkinFile("mimetypes/Curriki.gif")" alt="[${text}]" title="[${text}]"/>{/pre}
#end ## }
#if($rowType == "currikulum") ## {
#set($text = $msg.get("mycurriki.macro.filetype.currikulum"))
{pre}<img src="$xwiki.getSkinFile("mimetypes/Curriki.gif")" alt="[${text}]" title="[${text}]"/>{/pre}
#end ## }
#end ## Macro ## }
##
##
## Last Update date
#macro(mycurrikilastupdate $asset) ## {
$!xwiki.formatDate($asset.contentUpdateDate, $msg.get("mycurriki.dateFormat"))
#end ## macro ## }
##
##
## Contributor name
#macro(mycurrikicontributor $asset) ## {
$xwiki.getUserName($asset.creator)
#end ## macro ## }
##
##
## Pagination Macro with args
#macro(mycurrikipaginatorargs $called $from $nbToDisplay $of $addargs) ## {
<div id="mycurriki-paginator" class="table-results">
## Make sure we have sane settings for $of
#if($of < 0) ## {
#set($of = 0)
#end ## }
## We don't show the paginator if nothing to paginate
#if($of != 0) ## {
## Make sure we have sane settings for $from
#if($from < 0) ## {
#set($from = 0)
#end ## }
#if($from >= $of) ## {
#set($from = $of - 1)
#end ## }
## Make sure we have sane settings for $nbToDisplay
#if($nbToDisplay < 1) ## {
#set($nbToDisplay = 1)
#end ## }
#if("$called"=="") ## {
#set($called = $msg.get("mycurriki.macro.paginate.results"))
#end ## }
## Determine what $to sould be
#set($to = ($from + $nbToDisplay) - 1)
#if($to >= $of) ## {
#set($to = ($of - 1))
#end ## }
## Now figure out total, current, first, and last page
#set($pages = (($of - 1) / $nbToDisplay) + 1)
#set($cpage = ($from / $nbToDisplay) + 1)
#set($fpage = ((($cpage - 1) / 10) * 10) + 1)
#set($lpage = $fpage + 9)
#if($lpage > $pages) ## {
#set($lpage = $pages)
#end ## }
## Figure out if we need a user argument
#if("$!request.user" == "") ## {
#set($addarg="")
#else ## } {
#set($addarg="user=${request.user}&")
#end ## }
#if($addargs != "") ## {
#set($addarg="${addarg}${addargs}&")
#end ## }
<div id="mycurriki-paginator-line1" class="table-results-title">
## Display 1 -> X+1 instead of 0 -> X
#set($dFrom = $from + 1)
#set($dTo = $to + 1)
$called $dFrom - $dTo $msg.get("mycurriki.macro.paginate.of") $of
</div>
<div id="mycurriki-paginator-line2" class="table-results-navigation">
#if($cpage == 1) ## {
#set($npage = 0)
#else ## } {
#set($npage = (($cpage - 2) * $nbToDisplay))
#end ## }
#set($url = $xwiki.getURL($doc.fullName, "view", "${addarg}startIndex=${npage}"))
#if($cpage!=1) ## {
#set($prvpage = $cpage - 1)
#set($altprev = "Page "+${prvpage})
<a href="${url}" class="table-results-previous#if($cpage==1) table-results-disabled" onclick="return false;#end" alt="${altprev}" title="${altprev}">$msg.get("mycurriki.macro.paginate.previous")</a>
#end ## }
#foreach ($pg in [${fpage}..${lpage}]) ## {
#set($npage = (($pg - 1) * $nbToDisplay))
#set($url = $xwiki.getURL($doc.fullName, "view", "${addarg}startIndex=${npage}"))
<a href="${url}"#if($pg==$cpage) class="table-results-navigation-selected" onclick="return false;"#end>$pg</a>
#end ## }
#if($cpage==$pages) ## {
#set($npage = (($pages - 1) * $nbToDisplay))
#else ## } {
#set($npage = ($cpage * $nbToDisplay))
#end ## }
#set($url = $xwiki.getURL($doc.fullName, "view", "${addarg}startIndex=${npage}"))
#if($cpage!=$pages) ## {
#set($nxtpage = $cpage + 1)
#set($altnext = "Page "+${nxtpage})
<a href="${url}" class="table-results-next#if($cpage==$pages) table-results-disabled" onclick="return false;#end" alt="${altnext}" title="${altnext}">$msg.get("mycurriki.macro.paginate.next")</a>
#end ## }
</div>
#end ## if != 0 ## }
</div>
#end ## macro ## }
##
##
## Pagination Macro
#macro(mycurrikipaginator $called $from $nbToDisplay $of) ## {
#mycurrikipaginatorargs($called $from $nbToDisplay $of "")
#end ## }
##
##
## Collection description Macro
#macro(mycurrikicollectiondescription $asset) ## {
#set($desc = $!asset.getObject("XWiki.AssetClass").getProperty("description").getValue())
$!desc
#end ## macro ## }
##
##
## Avatar
#macro(mycurrikiavatar $userdoc) ## {
#if($userdoc.attachmentList.size()==0)  ## {
 <img src="$xwiki.getSkinFile("noavatar.png")" width="48px"/>
#else ## } {
 #foreach ($attach in $userdoc.attachmentList) ## {
  <a href="$userdoc.getURL("view")" >
  <img src="$userdoc.getAttachmentURL($attach.filename,"download")" width="48px" /></a>
 #end ## }
#end ## }
#end ## macro ## }
##
##
## Avatar with name
#macro(mycurrikiavatarwithname $userdoc) ## {
#if($userdoc.attachmentList.size()==0)  ## {
 <img src="$xwiki.getSkinFile("noavatar.png")" width="48px"/>
#else ## } {
 #foreach ($attach in $userdoc.attachmentList) ## {
  <a href="$userdoc.getURL("view")" >
  <img src="$userdoc.getAttachmentURL($attach.filename,"download")" width="48px" /></a>
 #end ## }
#end  $xwiki.getUserName($userdoc.fullName) ## }
#end ## macro ## }
##
##
## Titlebar with javascript and regular link
#macro(mycurrikifulltitlebar $lefttitle $righttitle $link $js $color $idpfx) ## {
#if("$!link" != "") ## {
#normalizelink($link)
#end ## }
#set($righttitletrunc = $righttitle)
#if ($righttitletrunc.length() > 35) ## {
#set($righttitletrunc = $righttitle.substring(0, 34))
#set($righttitletrunc = "${righttitletrunc}...")
#end ## }
#if("$!idpfx" != "") ## {
#set($qt = '"')
#set($tmp = "id=${qt}${idpfx}-")
#set($dId = "${tmp}bar${qt}")
#set($tId = "${tmp}title${qt}")
#set($rdId = "${tmp}right${qt}")
#set($lId = "${tmp}link${qt}")
#else ## } {
#set($dId = "")
#set($tId = "")
#set($rdId = "")
#set($lId = "")
#end ## }
<div $dId class="titleheader titleheader-$color"><h3 $tId#if($link!="") class="titleheader-left"#end>$lefttitle</h3>#if($link!="" || $js!="")<div $rdId class="titleheader-right"><a $lId #if("$!link"!="") href="$link"#end#if("$!js"!="") onclick="$js"#end title="$righttitle">$righttitletrunc  &raquo;</a></div>#end
</div>
#end ## macro ## }
##
##
## Titlebar with javascript link
#macro(mycurrikijstitlebar $lefttitle $righttitle $link $color) ## {
#mycurrikifulltitlebar($lefttitle $righttitle "" $link $color "")
#end ## macro ## }
##
##
## Titlebar
#macro(mycurrikititlebar $lefttitle $righttitle $link $color) ## {
#mycurrikifulltitlebar($lefttitle $righttitle $link "" $color "")
#end ## macro ## }
##
##
## Group logo display
#macro(groupLogo $space)
  #set($logofilename = $space.display("logo","view"))
  #set($attachLogo = "")
  #if($logofilename != "")
   #set($spacehome = $space.getSpaceName()+".WebHome")
   #set($srcdoc = $xwiki.getDocument($spacehome))
   #set($attachLogo = $srcdoc.getAttachment($logofilename))
  #end
  #if(($logofilename != "")&&$attachLogo&&($attachLogo!=""))
    #set($m_logo = $srcdoc.getAttachmentURL($logofilename))
    #set($logowidth = $xwiki.image.getWidth($srcdoc.fullName,$logofilename))
    #set($logoheight = $xwiki.image.getHeight($srcdoc.fullName,$logofilename))
  #else
    #set($m_logo = $xwiki.getSkinFile("groups_default_logo.gif"))
	#set($logowidth = 120)
	#set($logoheight = 82)
  #end
#set( $image_resize = "" )
#if($logowidth > 120 || $logoheight > 82)
  ## find out wich dimmension overflows the most and computes scaled sizes
  #set( $ratiox = $logowidth / 120)
  #set( $ratioy = $logoheight / 82)
  #if($ratiox>$ratioy)
    #set($width = 120)
    #set($height = $width * $logoheight /  $logowidth)
    #set( $image_resize = "?width=120")
  #else
    #set($height = 82)
    #set($width = $height * $logowidth / $logoheight)
    #set( $image_resize = "?height=82")
  #end
#else
  #set($height = $logoheight)
  #set($width = $logowidth)
#end
  ##display logo
  <div class="frame-inset-logo">
    <a href="$space.getHomeURL()" title="{pre}$xwiki.escapeText($space.getDisplayTitle()){/pre}" alt="{pre}$xwiki.escapeText($space.getDisplayTitle()){/pre}">
      <img src="${m_logo}${image_resize}" width="$width" height="$height" title="{pre}$xwiki.escapeText(${space.getDisplayTitle()}){/pre}" alt="{pre}$xwiki.escapeText(${space.getDisplayTitle()}){/pre}" />
    </a>
  </div>
#end
##
## Group display
#macro(mycurrikiGroupInfo $m_groupName $displayType) ## {
#if(!$g_rowCount) ## {
#set($g_rowCount = 0)
#end ## }
#set($g_rowCount = $g_rowCount + 1)
#set($m_sm = $xwiki.csm)
#set($s = $m_sm.getSpace($m_groupName))


#if("$!first_frame_done" == "") ## {
<div class="frame">
#else ## } {
#set($first_frame_done = "")
#end ## }
<div class="frame-inset-titlebar">
#if($displayType == "edit")
  #set($editmastheadurl = $s.getHomeURL()+"?action=editmasthead")
  #mycurrikititlebar("{pre}$xwiki.escapeText($s.getDisplayTitle()){/pre}" $msg.get('groups_home_masthead_link') $editmastheadurl "blue")
#elseif($displayType == "view")
  #mycurrikititlebar("{pre}$xwiki.escapeText($s.getDisplayTitle()){/pre}" "" "" "blue")
#else
  #mycurrikititlebar("{pre}$xwiki.escapeText($s.getDisplayTitle()){/pre}" $msg.get('mycurriki.groups.visit') $s.getHomeURL() "blue")
#end
</div>

#groupLogo( $s )

<div class="frame-inset-description">
$s.getDescription()
</div>
</div>
#end ## }
##
## Group masthead showing messages viewable by the user
##
#macro(mycurrikiGroupInfoMessages $m_groupName $displayType) ## {
#if(!$g_rowCount) ## {
#set($g_rowCount = 0)
#end ## }
#set($g_rowCount = $g_rowCount + 1)
#set($m_sm = $xwiki.csm)
#set($s = $m_sm.getSpace($m_groupName))


#if("$!first_frame_done" == "") ## {
<div class="frame">
#else ## } {
#set($first_frame_done = "")
#end ## }
<div class="frame-inset-titlebar">
#if($displayType == "edit")
  #set($editmastheadurl = $s.getHomeURL()+"?action=editmasthead")
  #mycurrikititlebar("{pre}$xwiki.escapeText($s.getDisplayTitle()){/pre}" $msg.get('groups_home_masthead_link') $editmastheadurl "blue")
#elseif($displayType == "view")
  #mycurrikititlebar("{pre}$xwiki.escapeText($s.getDisplayTitle()){/pre}" "" "" "blue")
#else
  #mycurrikititlebar("{pre}$xwiki.escapeText($s.getDisplayTitle()){/pre}" $msg.get('mycurriki.groups.visit') $s.getHomeURL() "blue")
#end
</div>

#groupLogo( $s )

<div class="frame-inset-description">
$s.getDescription()
</div>
#if("$context.user" == "$!userdoc.fullName" ) ## {
## Get last 5 messages
#set($sql = ", BaseObject as obj where obj.name=doc.fullName and obj.className='XWiki.ArticleClass' and doc.web='Messages_${m_groupName}' order by doc.creationDate desc")
#set($messages = $xwiki.searchDocuments($sql, 100, 0))
#if($messages.size() > 0) ## {
<div id="mycurriki-groups-message-container">
## Show messages
<div id="mycurriki-group-mymessages-${m_groupName}" class="lefttext xwikicomment">
<div class="righttext floatright">
<a href="$xwiki.getURL("${m_groupName}.Messages", "view")">$msg.get("mycurriki.groups.viewmessages")</a>
</div>
<b>$msg.get("mycurriki.groups.mymessages")</b>
</div>
#set($showCount = 0)
#foreach($messageName in $messages) ## {
#if($showCount < 3) ## {
#if($xwiki.hasAccessLevel("view", $context.user, $messageName)) ## {
#set($showCount = 1 + $showCount)
#set($message = $xwiki.getDocument($messageName))
#set($msgContent = $message.getObject("XWiki.ArticleClass"))
<div id="mycurriki-group-mymessages-${message.fullName}" class="lefttext xwikicomment">
<div class="righttext floatright">
$xwiki.formatDate($message.creationDate, $msg.get("mycurriki.datetimeFormat"))
$msg.get("mycurriki.groups.message.by") <a href="$xwiki.getURL("${message.creator}", "view")">$xwiki.getUserName($message.creator)</a>
</div>
#set($showTitle = $msgContent.title)
#if($showTitle.length() > 32) ## {
#set($showTitle = $showTitle.substring(0, 32)+"...")
#end ## }
<a href="$xwiki.getURL($message.fullName, "view")"><b>$showTitle</b></a>
</div>
#end ## }
#end ## }
#end ## }
</div>
#end ## }
#end ## }
</div>
#end ## }
##
##
## Blog Entries
#macro(displayMyCurrikiBlogArticle $bentrydoc $bentryobj $displayFully) ## {
#set($creationDay = $xwiki.formatDate($bentrydoc.creationDate,$msg.get("mycurriki.dateFormat")))
#set($creationHour = $xwiki.formatDate($bentrydoc.creationDate,$msg.get("mycurriki.timeFormat")))
#if($doc.web == "MyCurriki") ## {
#set($title = $!bentrydoc.display("title","view", $bentryobj))
#if($title == "") ## {
#set($title = "&nbsp;")
#end ## }
1 $title
#end ## }
#set($extract = $!bentrydoc.display("extract","view", $bentryobj))
<div class="article_content" >
#set($content = $bentrydoc.display("content", "view", $bentryobj))
#if(!$displayFully)
 #if($!extract != "")
  #set($content = $extract)
 #else
  #if($content.length()>400)
   #set($i = $content.lastIndexOf(" ",400))
   #set($i = $i + 1)
   #set($content = "${content.substring(0,$i)}")
  #end
 #end
#end
$bentrydoc.getRenderedContent($content) #if($bentrydoc.fullName != $doc.fullName || !$displayFully)
<div class="clearfloats"></div>

<a href="$bentrydoc.getURL("view", "bc=$!request.bc")" class="curriki-link">$msg.get("caption.readmore")</a>#end
</div>
<div class="clearfloats"></div>
<div class="article_footer" style="border: solid 1px #CDCDCD; padding: 10px; margin-bottom: 5px;">
$msg.get("mycurriki.blog.postedBy", [$xwiki.getLocalUserName($bentrydoc.creator), $creationDay, $creationHour]) #sep() [$bentrydoc.comments.size() $msg.get("caption.comment")(s)>#if($bentrydoc.fullName != $doc.fullName)${bentrydoc.fullName}?bc=$!request.bc#end#comments]
</div>
<div class="article_footer" style="border: solid 1px #CDCDCD; padding: 10px; margin-bottom: 5px;">
#if($context.user != "XWiki.XWikiGuest" && $xwiki.hasAccessLevel("view", "XWiki.XWikiGuest", $bentrydoc.fullName))
<a class="curriki-link" href="$bentrydoc.getURL("view")" onclick="stafShow(this.href); return false;">$msg.get("caption.sendToAFriend")</a>
#else
## #sep()
<a class="curriki-link" href="$bentrydoc.getURL("view")" >$msg.get("myBlog.permalink")</a>
#end
#sep() {pre}
#if ($bentrydoc.hasAccessLevel("edit"))
<a class="curriki-link" href="$bentrydoc.getURL("inline")" >$msg.get("caption.edit")</a>
#set($deleteMsg = $msg.get('mycurriki.blog.actions.delete.confirm'))
#set($blogUrl = $xwiki.getURL("MyCurriki.Blog"))
#set($deleteUrl = $xwiki.getURL("XWiki.DeleteDocument", "view", "confirm=1&docName=${bentrydoc.fullName}&sourceDoc=${blogUrl}"))
#sep() <a class="curriki-link" onclick="this.href='$deleteUrl'; return confirm('$deleteMsg');" href="javascript:void()">$msg.get("caption.delete")</a>
#end
{/pre}
</div>
#end ## }
##
## End of MyCurriki Macros ## }
##
##
##
## Groups Macros ## {
##
##
## login box
#macro(loginbox $logredir)
<div class="main layoutsubsection">
<form id="loginForm" action="$xwiki.getURL("XWiki.XWikiLogin","loginsubmit")" method="post">
<div class="hidden">
<input type="hidden" name="xredirect" value="$logredir" /></div>
#xwikimessageboxstart($msg.get("login") "")
#set($message = $msg.get($xwiki.parseMessage()))
#if($message)
## errors for the previous login
#error($message)
#end
<table class="xwikilogintable" summary="$msg.get("loginform")">
<tr><th><label for="j_username">$msg.get("username"):</label></th>
<td><input type="text" id="j_username" name="j_username" value=""/></td></tr>
<tr><th><label for="j_password">$msg.get("password"):</label></th>
<td><input type="password" id="j_password" name="j_password" value=""/></td></tr>
<tr><td colspan="2" style="text-align: left;"><input id="rememberme" type="checkbox" name="j_rememberme" value="true"/><label for="rememberme">$msg.get("remembermeonthiscomp")</label></td></tr>
</table>
<div id="loginbuttons" class="buttons">
<input type="submit" class="button" value="$msg.get("login")"/>
</div>
#xwikimessageboxend()
</form>
</div>
#end

#macro(groupinit)
#groupsinit()
#end

#macro(groupsinit)
#set($sm = $xwiki.csm)
#set($spaceName = $doc.space)
#if(!$spaceName.startsWith("Group_"))
#set($pos = 1 + $spaceName.indexOf("_"))
#set($spaceName = $spaceName.substring($pos))
#end
#set($s = $sm.getSpace($spaceName))
#set($isGroupAdmin = $sm.isAdmin($spaceName, $context.getUser()))
#set($isGroupMember = ($isGroupAdmin || $sm.isMember($spaceName, $context.getUser())))
#set($isGroupAdmin = $isGroupAdmin || $hasGlobalAdmin)
#end

##
## page: all pages in the groups space
## Groups tab macro
#macro(groupstabs $curtab) ## {
#set($tabs = ["home","messages", "curriculum", "members", "documentation"])
<div id="groups-tabs" class="tabs">
#foreach($tab in $tabs) ## {
#set($tabpage = $msg.get("groups_${tab}_page"))
#set($url=$xwiki.getURL("${spaceName}.${tabpage}", "view"))
#if(!$hasGlobalAdmin && !$isGroupMember && ($s.policy=="closed") && ($tab=="messages" || $tab=="members" || $tab=="documentation"))
<a class="tab tabgreyed#if($curtab==$tab) tab-selected#end" href="javascript:void()" onclick="alert('$msg.get("groups_onlyaccessibletomembers")'); return false;">$msg.get("groups_${tab}_tabname")</a>
#else
<a class="tab#if($curtab==$tab) tab-selected#end" href="$url">$msg.get("groups_${tab}_tabname")</a>
#end
#end ## foreach ## }
</div>
#end ## macro ## }
##
##
## page: all pages in the groups space
## Groups header
##
#macro(groupsheader $curtab) ## {
<h1>{pre}$s.getDisplayTitle(){/pre}</h1>
<div id="groups-$curtab" class="groups groups-$curtab">
#groupstabs($curtab)
<div id="groups-${curtab}-main" class="tab-container">
#end ## macro ## }
##
##
## page: all pages in the groups space in the documentation tab
## There should be no {pre} because we call it from the skin
## Groups header
##
#macro(groupsheaderdoc $curtab) ## {
<h1>$s.getDisplayTitle()</h1>
<div id="groups-$curtab" class="groups groups-$curtab">
#groupstabs($curtab)
<div id="groups-${curtab}-main" class="tab-container">
#end ## macro ## }
##
## page: all pages in the groups space
## Groups header
##
#macro(groupsheader2 $curtab) ## {
<div id="groups-$curtab" class="groups groups-$curtab">
#groupstabs($curtab)
<div id="groups-${curtab}-main" class="tab-container">
#end ## macro ## }
##
##
## page: all pages in the groups space
## Groups footer
##
#macro(groupsfooter) ## {
</div>
</div>
#end ## macro ## }
##
##
## page: Groups.WebHomeSheet and Groups.MembersSheet
## Groups membership info
##
#macro(groupsmembershipinfo $spaceName)
#begingroupsection($msg.get("groups_home_membership_title"),"","", "blue", false)

#if($sm.isMember($spaceName,$context.user))
$msg.get("groups_home_membership_group_infotxt")

<div id="groups-members-invite-button" class="groups-members-button">
<a href="$xwiki.getURL("${spaceName}.InviteMembers")" class="button button-orange">
$msg.get("groups_home_membership_group_btt")
</a>
</div>
#else
#set($gpolicy = $sm.getSpace($spaceName).policy)
#if($gpolicy=="open")
$msg.get("groups_home_membership_open_visitor_infotxt")

<div id="groups-members-join-button" class="groups-members-button">
<a href="$xwiki.getURL("${spaceName}.JoinGroup")" class="button button-orange">
$msg.get("groups_home_membership_open_visitor_btt")
</a>
</div>
#else
$msg.get("groups_home_membership_closed_visitor_infotxt")

<div id="groups-members-request-button" class="groups-members-button">
<a href="$xwiki.getURL("${spaceName}.RequestMembership")" class="button button-orange">
$msg.get("groups_home_membership_closed_visitor_btt")
</a>
</div>
#end
#end
#endgroupsection()
#end
##
##
##
## PAGE: Groups pages
## Macro to display the welcome block and allow editing it
##
#macro(groupsdisplaywelcome $title $spaceName $pageName $isGroupAdmin)
#groupsdisplaywelcomecolour($title $spaceName $pageName "blue" $isGroupAdmin)
#end

#macro(groupsdisplaywelcomecolour $title $spaceName $pageName $colour $isGroupAdmin)
#if($isGroupAdmin)
#groupsajaxjs()
{pre}
<script src="$xwiki.getSkinFile("Pork.Iframe.js")" type="text/javascript"></script>
<script type="text/javascript" src="${request.contextPath}/tiny_mce/tiny_mce.js"></script>
<script type="text/javascript" src="${request.contextPath}/wiki_editor/wiki_editor.js"></script>
<script type="text/javascript">
 wikiEditor.init({
		elements : "",
	    language: "en",
		mode: "exact",
		content_css: "$xwiki.getSkinFile("style.css", true)",
		debug : false,
		remove_linebreaks : false,
		plugins: 'table, contextmenu, paste, searchreplace',
        wiki_use_style: 'true',
        wiki_plugins: 'core,attachments',
        wiki_images_path : '/xwiki/bin/download/${spaceName}/${pageName}/',
        wiki_attach_path : '/xwiki/bin/view/${spaceName}/${pageName}'
        });
function editWelcomeBlock(spaceName,pageName,divid) {
  var pars = "space=" + spaceName + "&page=" + pageName + "&divid=" + divid + "&xpage=plain";
  $(divid).innerHTML = "<p>${msg.groups_loadinginprogress}</p>";
  // call url to get the edit html to edit the profile
  var myAjax = new Ajax.XWikiRequest( "Groups", "EditWelcomeBlockService", {method: 'get', parameters: pars, onComplete: editWelcomeBlockCallback, divid: divid });
}
function editWelcomeBlockCallback(ajaxreq) {
 var divid = ajaxreq.options.divid;
 $(divid).innerHTML = ajaxreq.transport.responseText;
 tinyMCE.addMCEControl(document.getElementById("XWiki.CurrikiWelcomeBlockClass_0_content"), "XWiki.CurrikiWelcomeBlockClass_0_content");
}
function cancelEditWelcomeBlock(spaceName,pageName,divid) {
  if (confirm('$msg.groups_welcomeblock_confirmcancel')) {
   var pars = "space=" + spaceName + "&page=" + pageName + "&divid=" + divid + "&xpage=plain";
   $(divid).innerHTML = "<p>${msg.groups_loadinginprogress}</p>";
   // call url to get the edit html to edit the profile
   var myAjax = new Ajax.XWikiRequest( "Groups", "ViewWelcomeBlockService", {method: 'get', parameters: pars, onComplete: cancelEditWelcomeBlockCallback, divid: divid });
  }
}
function cancelEditWelcomeBlockCallback(ajaxreq) {
 var divid = ajaxreq.options.divid;
 $(divid).innerHTML = ajaxreq.transport.responseText;
}
</script>
{/pre}
#begingroupsection($title,"$msg.groups_home_welcome_link","javascript:editWelcomeBlock('$spaceName','$pageName','groups-members-welcomeblock')", $colour, true)
<div id="groups-members-welcomeblock">
#groupsdisplaywelcomeblock($doc)
</div>
#endgroupsection()
#elseif($doc.name=="WebHome")
#set($ok = $doc.use("XWiki.CurrikiWelcomeBlockClass"))
#set($welcomeContent = $!doc.display("content"))
#if($welcomeContent!="")
#begingroupsection($title,"","", $colour, false)
<div id="groups-members-welcomeblock">
$welcomeContent
</div>
#endgroupsection()
#end
#else
#begingroupsection($title,"","", $colour, false)
<div id="groups-members-welcomeblock">
#groupsdisplaywelcomeblock($doc)
</div>
#endgroupsection()
#end
#end
##
#macro(groupsdisplaywelcomeblock $wdoc)
#set($ok = $wdoc.use("XWiki.CurrikiWelcomeBlockClass"))
#set($welcomeContent = $!wdoc.display("content"))
#if($welcomeContent=="")
$xwiki.getDocument("Groups.${wdoc.name}Welcome").getRenderedContent()
#else
$welcomeContent
#end
#end
##
#macro(groupsdisplayeditwelcome $spaceName $pageName $divid)
$msg.get("groups_home_editwelcome_direction")
<br />
#set($wdoc = $xwiki.getDocument("${spaceName}.${pageName}"))
#if(!$wdoc.getObject("XWiki.CurrikiWelcomeBlockClass"))
#set($ok = $wdoc.newObject("XWiki.CurrikiWelcomeBlockClass"))
#end
#set($ok = $doc.use("XWiki.CurrikiWelcomeBlockClass"))
{pre}
<form id="wblockform" action="$xwiki.getURL("Groups.SaveWelcomeBlockService")" method="post" onsubmit="new iframe(this,{update:'${divid}'}); return false;">
{/pre}
<p>
<input type="hidden" name="xpage" value="plain" />
<input type="hidden" name="space" value="$spaceName" />
<input type="hidden" name="page" value="$pageName" />
$wdoc.display("content", "edit")
<br />
{pre}
<div class="button-right">
<input type="button" class="button button-grey" value="$msg.get("groups_home_editwelcome_cancel_btt")" onclick="cancelEditWelcomeBlock('${spaceName}','${pageName}','${divid}');" />
<input type="submit" class="button button-orange" value="$msg.get("groups_home_editwelcome_submit_btt")" onclick="document.forms['wblockform']['XWiki.CurrikiWelcomeBlockClass_0_content'].value = tinyMCE.getContent();" />
</div>
{/pre}
</p>
</form>
#end
##
## PAGE: Groups.MembersSheet
## Macro to display the members filters in the members page
##
#macro(groupsdisplaymembersfilters $type)
<div id="groups-members-filter">
$msg.get("groups_members_admin_list_instruction")
<form action="">
<span><input type="radio" name="type" value="0" #if($type=="0") checked #end onclick="this.form.submit()" />
$msg.get("groups_members_admin_list_togglecurrent")</span>
#if($spacePolicy=="closed")
#set($mreqs = $im.getMembershipRequests($spaceName, 2))
#set($nbmreqs = $!mreqs.size())
<span><input type="radio" name="type" value="1" #if($type=="1") checked #end onclick="this.form.submit()" />
$msg.get("groups_members_admin_list_togglepending", [ "$!nbmreqs" ])</span>
<span><input type="radio" name="type" value="2" #if($type=="2") checked #end onclick="this.form.submit()" />
$msg.get("groups_members_admin_list_toggledenied")</span>
#end
<span><input type="radio" name="type" value="3" #if($type=="3") checked #end onclick="this.form.submit()" />
$msg.get("groups_members_admin_list_toggleinvitations")</span>
</form>
</div>
#end
##
##
## PAGE: Groups.MembersSheet
## Macro to display the javascript to edit a member profile
##
#macro(groupsdisplayeditmemberjs)
#groupsajaxjs()
{pre}
<script type="text/javascript">
function editProfile(memberName,spaceName,divid) {
  var pars = "user=" + memberName + "&space=" + spaceName + "&divid=" + divid + "&xpage=plain";
  $(divid).innerHTML = "<p>${msg.groups_members_editsettings_loadinginprogress}</p>";
  // call url to get the edit html to edit the profile
  var myAjax = new Ajax.XWikiRequest( "Groups", "EditSpaceUserProfileService", {method: 'get', parameters: pars, onComplete: editProfileCallback, divid: divid });
  return false;
}
function editProfileCallback(ajaxreq) {
 var divid = ajaxreq.options.divid;
 $(divid).innerHTML = ajaxreq.transport.responseText;
 $(divid).parentNode.className = "groups-members-member group-members-edited";
}
function cancelEditProfile(memberName,spaceName,divid) {
  var pars = "user=" + memberName + "&space=" + spaceName + "&divid=" + divid + "&xpage=plain";
  $(divid).innerHTML = "<p>${msg.groups_members_editsettings_loadinginprogress}</p>";
  // call url to get the edit html to edit the profile
  var myAjax = new Ajax.XWikiRequest( "Groups", "ViewSpaceUserProfileService", {method: 'get', parameters: pars, onComplete: cancelEditProfileCallback, divid: divid });
  return false;
}
function cancelEditProfileCallback(ajaxreq) {
 var divid = ajaxreq.options.divid;
 $(divid).innerHTML = ajaxreq.transport.responseText;
 $(divid).parentNode.className = "groups-members-member";
}
function saveProfileCallback(ajaxreq) {
 var divid = ajaxreq.options.divid;
 $(divid).parentNode.className = "groups-members-member";
}
function removeAdmin(memberName,spaceName) {
  var pars = "user=" + memberName + "&space=" + spaceName  + "&code=1&xpage=plain";
  // call url to remove admin
  var myAjax = new Ajax.XWikiRequest( "Groups", "MembersService", {method: 'get', parameters: pars, onComplete: refreshPage});
  return false;
}
function addAdmin(memberName,spaceName) {
  var pars = "user=" + memberName + "&space=" + spaceName  + "&code=2&xpage=plain";
  // call url to remove admin
  var myAjax = new Ajax.XWikiRequest( "Groups", "MembersService", {method: 'get', parameters: pars, onComplete: refreshPage});
  return false;
}
function removeMember(memberName,spaceName) {
  var pars = "user=" + memberName + "&space=" + spaceName  + "&code=3&xpage=plain";
  // call url to remove admin
  var myAjax = new Ajax.XWikiRequest( "Groups", "MembersService", {method: 'get', parameters: pars, onComplete: refreshPage});
  return false;
}
</script>
{/pre}
#end
##
#macro(groupsdisplaymemberinfo $memberName $spaceName $divid) ## {
#set($mdoc = $xwiki.getDocument($memberName))
#if(!$mdoc.isNew())
<div class="groups-members-memberpic userpic">
#if($mdoc.attachmentList.size()==0)
 <img src="$xwiki.getSkinFile("noavatar.png")" width="80" />
#else
 #foreach ($attach in $mdoc.attachmentList)
  <a href="$mdoc.getURL("view")" >
  <img src="$mdoc.getAttachmentURL($attach.filename,"download")" width="80" /></a>
 #end
#end
</div>
#end
#set($uprofile = $sm.getSpaceUserProfile($spaceName,$memberName))
#if($isGroupAdmin||$memberName==$context.user)
<div class="groups-members-membereditlink">
<a href="javascript:void()" onclick="editProfile('$memberName','$spaceName','$divid'); return false;">$msg.get("groups_members_admin_current_members_editsettings_link")</a>
</div>
#end
#if($isGroupAdmin)
#set($memberIsAdmin = $sm.isAdmin($spaceName, $memberName))
#set($adminCount = $sm.getAdmins($spaceName).size())
#if($memberIsAdmin)
#if($adminCount>1)
<div class="groups-members-addadmin">
<a href="javascript:void()" onclick="if (window.confirm('$msg.get("groups_members_admin_current_membersettings_removeadmin_confirm")')) {removeAdmin('$memberName','$spaceName');};return false;">$msg.get("groups_members_admin_current_membersettings_removeadmin_link")</a>
</div>
#end
#else
<div class="groups-members-addadmin">
<a href="javascript:void()" onclick="if (window.confirm('$msg.get("groups_members_admin_current_membersettings_addadmin_confirm")')) {addAdmin('$memberName','$spaceName');};return false;">$msg.get("groups_members_admin_current_membersettings_addadmin_link")</a>
</div>
#end
#if((!$memberIsAdmin) || ($memberIsAdmin &&  $adminCount>1))
<div class="groups-members-remove">
<a href="javascript:void()" onclick="if (window.confirm('$msg.get("groups_members_admin_current_membersettings_remove_confirm")')) {removeMember('$memberName','$spaceName');};return false;">$msg.get("groups_members_admin_current_membersettings_remove_link")</a>
</div>
#end
#else
#if((!$memberIsAdmin) || ($memberIsAdmin &&  $adminCount>1))
#if($memberName==$context.user)
<div class="groups-members-remove">
<a href="javascript:void()" onclick="if (window.confirm('$msg.get("groups_members_admin_current_membersettings_remove_confirm")')) {removeMember('$memberName','$spaceName');};return false;">$msg.get("groups_members_admin_current_membersettings_remove_link")</a>
</div>
#end
#end
#end
<div class="groups-members-membername">
<a href="$uprofile.userURL">$!uprofile.firstName $!uprofile.lastName</a>
</div>
<div class="groups-members-memberprofile">
#set($profile = $uprofile.profile)
#if($profile)
$profile
#end
</div>
#end
##
#macro(groupsdisplaymemberinfo $memberName $spaceName $divid)
#set($mdoc = $xwiki.getDocument($memberName))
#if(!$mdoc.isNew())
<div class="groups-members-memberpic userpic">
#if($mdoc.attachmentList.size()==0)
 <img src="$xwiki.getSkinFile("noavatar.png")" width="80" />
#else
 #foreach ($attach in $mdoc.attachmentList)
  <a href="$mdoc.getURL("view")" >
  <img src="$mdoc.getAttachmentURL($attach.filename,"download")" width="80" /></a>
 #end
#end
</div>
#end
#set($uprofile = $sm.getSpaceUserProfile($spaceName,$memberName))
#if($isGroupAdmin||$memberName==$context.user)
<div class="groups-members-membereditlink">
<a href="javascript:void()" onclick="editProfile('$memberName','$spaceName','$divid'); return false;">$msg.get("groups_members_admin_current_members_editsettings_link")</a>
</div>
#end
#if($isGroupAdmin)
#set($memberIsAdmin = $sm.isAdmin($spaceName, $memberName))
#set($adminCount = $sm.getAdmins($spaceName).size())
#if($memberIsAdmin)
#if($adminCount>1)
<div class="groups-members-addadmin">
<a href="javascript:void()" onclick="if (window.confirm('$msg.get("groups_members_admin_current_membersettings_removeadmin_confirm")')) {removeAdmin('$memberName','$spaceName');};return false;">$msg.get("groups_members_admin_current_membersettings_removeadmin_link")</a>
</div>
#end
#else
<div class="groups-members-addadmin">
<a href="javascript:void()" onclick="if (window.confirm('$msg.get("groups_members_admin_current_membersettings_addadmin_confirm")')) {addAdmin('$memberName','$spaceName');};return false;">$msg.get("groups_members_admin_current_membersettings_addadmin_link")</a>
</div>
#end
#if((!$memberIsAdmin) || ($memberIsAdmin &&  $adminCount>1))
<div class="groups-members-remove">
<a href="javascript:void()" onclick="if (window.confirm('$msg.get("groups_members_admin_current_membersettings_remove_confirm")')) {removeMember('$memberName','$spaceName');};return false;">$msg.get("groups_members_admin_current_membersettings_remove_link")</a>
</div>
#end
#else
#if((!$memberIsAdmin) || ($memberIsAdmin &&  $adminCount>1))
#if($memberName==$context.user)
<div class="groups-members-remove">
<a href="javascript:void()" onclick="if (window.confirm('$msg.get("groups_members_admin_current_membersettings_remove_confirm")')) {removeMember('$memberName','$spaceName');};return false;">$msg.get("groups_members_admin_current_membersettings_remove_link")</a>
</div>
#end
#end
#end
<div class="groups-members-membername">
<a href="$uprofile.userURL">$!uprofile.firstName $!uprofile.lastName</a>
#if($memberIsAdmin) ## {
  ($msg.get('groups.roles.admin.title'))
#else ## } {
  #set($memberRoles = $sm.getRoles($spaceName, $memberName))
  #if($memberRoles.size() > 0) ## {
    #set($firstRole = $xwiki.getDocument($memberRoles.get(0)))
    ($firstRole.title)
  #end ## }
#end ## }
</div>
<div class="groups-members-memberprofile">
#set($profile = $uprofile.profile)
#if($profile)
$profile
#end
</div>
#end ## }
##
#macro(groupsdisplayeditmemberinfo $memberName $spaceName $divid)
#set($mdoc = $xwiki.getDocument($memberName))
#if(!$mdoc.isNew())
<div class="groups-members-memberpic userpic">
#if($mdoc.attachmentList.size()==0)
 <img src="$xwiki.getSkinFile("noavatar.png")" width="80" />
#else
 #foreach ($attach in $mdoc.attachmentList)
  <a href="$mdoc.getURL("view")" >
  <img src="$mdoc.getAttachmentURL($attach.filename,"download")" width="80" /></a>
 #end
#end
</div>
#end
#set($uprofile = $sm.getSpaceUserProfile($spaceName,$memberName))
<div class="groups-members-membername">
<a href="$uprofile.userURL">$!uprofile.firstName $!uprofile.lastName</a>
</div>
<form action="$xwiki.getURL("Groups.SaveSpaceUserProfileService")" method="post" onsubmit="document.getElementById('${divid}').parentNode.className = 'groups-members-member'; new iframe(this,{update:'${divid}'}); return false;">
<div class="groups-members-member-buttons">
<input type="button"  class="button button-grey" value="$msg.get("groups_members_admin_current_membersettings_cancel_link")" onclick="cancelEditProfile('${memberName}','${spaceName}','${divid}');" /><input type="submit" class="button button-orange" value="$msg.get("groups_members_admin_current_membersettings_save_link")" />
</div>
<input type="hidden" name="user" value="$!memberName" />
<input type="hidden" name="space" value="$!spaceName" />
<input type="hidden" name="divid" value="$!divid" />
<input type="hidden" name="xpage" value="plain" />
$uprofile.display("profile","edit")
#if($sm.getRoles($spaceName).size() > 0) ## {
<div class="select-roles">$msg.get("groups.members.selectroles")</div>
<div class="instruction">$msg.get("groups.members.selectroles.info")</div>
<select name="roles" multiple size=4>
#groupRoleSelector($spaceName false false $memberName)
</select>
#foreach($role in $ret_hasRoles) ## {
<input type="hidden" name="hasrole" value="${role}" />
#end ## }
<br />
#end ## }
$uprofile.display("allowNotifications","edit") $msg.get("groups_members_create_membersettings_email")
<br />
$uprofile.display("allowNotificationsFromSelf","edit") $msg.get("groups_members_create_membersettings_changenotice")
</form>
#end
##
##
## PAGE: Groups.MembersSheet
## Macro to display a member block in the members list
##
#macro(groupsdisplaymember $memberName $spaceName $divid)
#set($mdoc = $xwiki.getDocument($memberName))
#if(!$mdoc.isNew())
<div class="groups-members-member">
<div id="groups-members-memberinfo-$divid" class="groups-members-memberinfo">
#groupsdisplaymemberinfo("$memberName" "$spaceName" "groups-members-memberinfo-$divid")
</div>
#else
$msg.get("groups_members_admin_current_membersettings_error")
#end
</div>
#end
##
##
## PAGE: Groups.MembersSheet
## Macro to display a single invitation in the invitation list
##
#macro(groupsdisplayinvitation $invitation)
#groupsajaxjs()
<div class="groups-members-invitee">
#set($memberName = $invitation.invitee)
#set($mdoc = $xwiki.getDocument($memberName))
<div class="groups-members-memberpic userpic">
#if($mdoc.attachmentList.size()==0)
 <img src="$xwiki.getSkinFile("noavatar.png")" width="80" />
#else
 #foreach ($attach in $mdoc.attachmentList)
  <a href="$mdoc.getURL("view")" >
  <img src="$mdoc.getAttachmentURL($attach.filename,"download")" width="80" /></a>
 #end
#end
</div>
<div class="groups-members-inviteeinfo">
<div class="groups-members-inviteename">
#if($mdoc.isNew())
$memberName
#else
$xwiki.getLocalUserName($memberName)
#end
</div>
<div class="groups-members-inviter">
#set($invitationDate = $xwiki.formatDate($invitation.requestDate,$msg.get("mycurriki.datetimeFormat")))	
$msg.get("groups.members.invitedby") $xwiki.getLocalUserName($invitation.inviter) $msg.get("groups.members.on") $invitationDate
</div>
##<div class="groups-members-inviteestatus">
##$msg.get("groups.members.invitestatus") $msg.get("groups.members.invitestatus.${invitation.status}") 
##</div>
<div>
<script type="text/javascript">
function cancelInvitation(invitee, spaceName){
	if (!window.confirm('$msg.get("groups_members_admin_invitations_cancel_confirm")')){
		return;
	}
	var pars = "user=" + invitee + "&space=" + spaceName  + "&code=4&xpage=plain";
  // call url to cancel invitation
  var myAjax = new Ajax.XWikiRequest( "Groups", "MembersService", {method: 'get', parameters: pars, onComplete: refreshPage});
  return false;
}
</script>
<a href="javascript:void()" onclick="cancelInvitation('$invitation.invitee', '$invitation.space'); return false;">$msg.get("groups_members_admin_invitations_cancel_link")</a>
</div>
</div>
</div>
#end
##
##
## PAGE: Groups.MembersSheet
## Macro to display the members lists
##
#macro(groupsdisplaymembers $spaceName)
<script src="$xwiki.getSkinFile("Pork.Iframe.js")" type="text/javascript"></script>
#groupsdisplayeditmemberjs()
#set($members = $sm.getMembers($spaceName))
## pagination parameters
#set($itemsPerPage=10)
#if($request.ipp)
#set($itemsPerPage=$xwiki.parseInt($request.ipp))
#end
#set($startIndex=0)
#if($request.startIndex)
#set($startIndex=$xwiki.parseInt($request.startIndex))
#end
#set($totalCount=$members.size())
## end pagination parameters
#if($members.size()==0)
$msg.get("groups_members_admin_current_members_nomembers")
#else
$msg.get("groups_members_admin_current_members_infotxt")
#set($endIndex = $startIndex + $itemsPerPage - 1)
#if($endIndex >= $totalCount)
#set($endIndex = $totalCount - 1)
#end
#foreach($mid in [$startIndex..$endIndex])
#groupsdisplaymember($members.get($mid) $spaceName $mid)
#end ## foreach
#end ## if
#mycurrikipaginatorargs($msg.get("groups_members_page"),$startIndex,$itemsPerPage,$totalCount,"type=0")
#end
##
##
## PAGE: Groups.MembersSheet
## Macro to display the open membership requests
##
#macro(groupsdisplayopenmembershiprequests $spaceName)
#groupsmembershiprequestsjs()
#set($gdsrid = 0)
#if(!$mreqs)
#set($mreqs = $im.getMembershipRequests($spaceName, 2))
#end
#if($mreqs.size()==0)
$msg.get("groups_members_admin_pending_nomembershiprequests")
#else
$msg.get("groups_members_admin_pending_infotxt")
#foreach($mreq in $mreqs)
#set($gdsrid = $gdsrid + 1)
#groupsdisplaymembershiprequest($mreq $gdsrid)
#end ## foreach
#end ## if
#end
##
##
## PAGE: Groups.MembersSheet
## Macro to display the denied membership requests
##
#macro(groupsdisplaydeniedmembershiprequests $spaceName)
#groupsmembershiprequestsjs()
#set($gdsrid = 0)
#set($mreqs = $im.getMembershipRequests($spaceName, 4))
#if($mreqs.size()==0)
$msg.get("groups_members_admin_denied_nodeniedmembershiprequests")
#else
$msg.get("groups_members_admin_denied_infotxt")
#foreach($mreq in $mreqs)
#set($gdsrid = $gdsrid + 1)
#groupsdisplaymembershiprequest($mreq $gdsrid)
#end ## foreach
#end ## if
#end
##
##
## PAGE: Groups.MembersSheet
## Macro to display the open invitations
##
#macro(groupsdisplayinvitations $spaceName)
## show invitations
#set($minvites = $im.getInvitations($spaceName, 2))
#if($minvites.size()==0)
$msg.get("groups_members_admin_invitations_infotxt_noinvitations")
#else
$msg.get("groups_members_admin_invitations_infotxt")
#foreach($minvite in $minvites)
#groupsdisplayinvitation($minvite)
#end ## foreach
#end ## if
#end
##
##
## PAGE: Groups.MembersSheet
## Macro to display the javascript for
## accepting and rejecting membership requests
##
#macro(groupsajaxjs)
{pre}
<script type="text/javascript">
Ajax.XWikiRequest = Class.create();
Object.extend(Object.extend(Ajax.XWikiRequest.prototype, Ajax.Request.prototype), {
  initialize: function(space, docName, options, action, params) {
    this.transport = Ajax.getTransport();
    this.setOptions(options);
    if (action)
      this.action = action;
    else
      this.action = "view";
    this.baseUrl = "/xwiki/bin/" + this.action;

    var onComplete = this.options.onComplete || Prototype.emptyFunction;
    this.options.onComplete = (function() {
      this.returnValue(onComplete);
      //onComplete(this.transport);
    }).bind(this);
    this.request(this.generateUrl(space, docName));
  },
    generateUrl: function(space, docName){
        return this.baseUrl + "/" + space + "/" + docName;
  },
  returnValue: function(callBack) {
    if (callBack)
        callBack(this);
    else
        alert("error, callback");
  }
});
function refreshPage(ajaxreq) {
  alert(ajaxreq.transport.responseText);
  window.location.href = window.location.href;
}
</script>
{/pre}
#end
##
##
## PAGE: Groups.MembersSheet
## Macro to display a membership request
##
#macro(groupsdisplaymembershiprequest $msreq $gdsrid)
#set($divid = "groups-members-request-$gdsrid")
<div id="$divid" class="groups-members-request">
#set($memberName = $msreq.requester)
#set($mdoc = $xwiki.getDocument($memberName))
<div class="groups-members-memberpic userpic">
#if($mdoc.attachmentList.size()==0)
 <img src="$xwiki.getSkinFile("noavatar.png")" width="80" />
#else
 #foreach ($attach in $mdoc.attachmentList)
  <a href="$mdoc.getURL("view")" >
  <img src="$mdoc.getAttachmentURL($attach.filename,"download")" width="80" /></a>
 #end
#end
</div>
<div class="groups-members-request-name">
#if($mdoc.isNew())
$memberName
#else
$xwiki.getLocalUserName($memberName)
#end
</div>
#set($divid = "groups-members-request-info-$gdsrid")
<div id="${divid}" class="groups-members-request-info">
<div class="groups-members-request-links">
## if group admin
#set($memberDisplayName = $xwiki.getLocalUserName($memberName, false))
<a href="javascript:void()" onclick="acceptRequest('$divid', '$memberName', '$memberDisplayName'); return false;">$msg.get("groups_members_admin_pending_accept_link")</a>
#if($msreq.status!=4)
|
<a href="javascript:void()" onclick="rejectRequest('$divid', '$memberName', '$memberDisplayName'); return false;">$msg.get("groups_members_admin_pending_deny_link")</a>
#end
## end
</div>
<div class="groups-members-request-date">
#set($requestDate = $xwiki.formatDate($msreq.requestDate,$msg.get("mycurriki.datetimeFormat")))
$msg.get("groups_members_admin_pending_requested") $requestDate ## $msg.get("groups_members_admin_pending_forrole")
</div>
##<div class="groups-members-request-status">
##$msg.get("groups_members_admin_pending_status") $msg.get("groups_members_request_status_${msreq.status}")
##</div>
<div class="groups-members-request-message">
<div class="groups-members-request-message-label">
$msg.get("groups_members_admin_pending_reasons")
</div>
<div class="groups-members-request-message-content">
{pre}
$msreq.text
{/pre}
</div>
</div>
</div>
</div>
#end
##
## PAGE: Groups.MembersSheet
## Macro to display the javascript for
## accepting and rejecting membership requests
##
#macro(groupsmembershiprequestsjs)
#groupsajaxjs()
{pre}
<script type="text/javascript">

function acceptRequest(divid, memberName, displayName) {
      $(divid).oldInnerHTML = $(divid).innerHTML;
      $(divid).innerHTML = "<div class=\"groups-members-request-confirm-box \"><form><p>${msg.groups_members_accept_confirm}</p><br />"
                                                 + "<div class=\"button-right\"><input type=\"button\" class=\"button button-grey\" value=\"${msg.groups_members_cancel_btt}\""
                                                 + " onclick=\"acceptRequestCancel('" + divid + "','" + memberName + "');\" />"
                                                + "<input type=\"button\" class=\"button button-orange\" value=\"${msg.groups_members_accept_confirm_btt}\""
                                                + " onclick=\"acceptRequestConfirm('" + divid + "','" + memberName + "');\" /></div>"
                                                + "</form></div>";
      $(divid).parentNode.className = "groups-members-request group-members-request-confirm";
}
function acceptRequestCancel(divid, memberName) {
      $(divid).innerHTML = $(divid).oldInnerHTML;
      $(divid).parentNode.className = "groups-members-request";
}
function acceptRequestConfirm(divid, memberName) {
      var pars = "user=" + memberName + "&space=${spaceName}&xpage=plain";
      $(divid).innerHTML = "<p>${msg.groups_members_accept_inprogress}</p>";
      // call url to accept the request.. check the return is "SUCCESS" other wise show output
      var myAjax = new Ajax.XWikiRequest( "Groups", "AcceptMembershipRequestService", {method: 'get', parameters: pars, onComplete: acceptRequestCallback, divid: divid });
}
function acceptRequestCallback(ajaxreq) {
    // hide div to show success full acceptance for user
    var result = ajaxreq.transport.responseText;
    // alert(result);
    var divid = ajaxreq.options.divid;
    if (result=="SUCCESS")
     $(divid).innerHTML = "<p>${msg.groups_members_accept_done}</p>";
    else
     $(divid).innerHTML = "<p>${msg.groups_members_accept_failed}</p>" + "<p>" + result + "</p>";
     $(divid).parentNode.className = "groups-members-request";
}
function rejectRequest(divid, memberName) {
      $(divid).oldInnerHTML = $(divid).innerHTML;
      $(divid).innerHTML = "<div class=\"groups-members-request-confirm-box\"><form><p>${msg.groups_members_reject_confirm}</p><textarea id=\"" + divid + "-reason\" cols=\"60\" rows=\"7\"></textarea><br />"
                                                + "<div class=\"button-right\"><input type=\"button\" class=\"button button-grey\" value=\"${msg.groups_members_cancel_btt}\""
                                                + " onclick=\"rejectRequestCancel('" + divid + "','" + memberName + "');\" />"
                                                + "<input type=\"button\" class=\"button button-orange\" value=\"${msg.groups_members_reject_confirm_btt}\""
                                                + " onclick=\"rejectRequestConfirm('" + divid + "','" + memberName + "');\" /></div>"
                                                + "</form></div>";
      $(divid).parentNode.className = "groups-members-request group-members-request-confirm";
}
function rejectRequestCancel(divid, memberName, displayName) {
      $(divid).innerHTML = $(divid).oldInnerHTML;
      $(divid).parentNode.className = "groups-members-request";
}
function rejectRequestConfirm(divid, memberName) {
      var reason = encodeURIComponent($(divid+"-reason").value);
      var pars = "user=" + memberName + "&reason=" + reason + "&space=${spaceName}&xpage=plain";
      $(divid).innerHTML = "<p>${msg.groups_members_reject_inprogress}</p>";
      // call url to accept the request.. check the return is "SUCCESS" other wise show output
      var myAjax = new Ajax.XWikiRequest( "Groups", "RejectMembershipRequestService", {method: 'get', parameters: pars, onComplete: rejectRequestCallback, divid: divid});
}
function rejectRequestCallback(ajaxreq) {
    // hide div to show success full acceptance for user
    var result = ajaxreq.transport.responseText;
    // alert(result);
    var divid = ajaxreq.options.divid;
    if (result=="SUCCESS")
     $(divid).innerHTML = "<p>${msg.groups_members_reject_done}</p>";
    else
     $(divid).innerHTML = "<p>${msg.groups_members_reject_failed}</p>" + "<p>" + result + "</p>";
    $(divid).parentNode.className = "groups-members-request";
}
</script>
{/pre}
#end
##
dd
## Macro to display a form field tooltip
##
#macro(tooltip $name $txt) ##{
	<span class="tooltip-generator">$xwiki.addTooltip("<img src='/xwiki/skins/curriki8/icons/exclamation.png' id='tooltip-image-$name' class='tooltip-image' />",$txt)</span>
#end ##}
##

#macro(begingroupsection $title $righttitle $link $color) ##{
#begingroupsection($title "" "" $color false)
#end ##}

## Macro for the sections with information int the group pages
#macro(begingroupsection $title $righttitle $link $color $isGroupAdmin) ##{
  ## this is the autoincrement value used to create unique ids
  #if(!$counter)
    #set($counter = 1)
  #else
    #set($counter = $counter + 1) 
  #end
  
  ##normalizing link
  #normalizelink($link)
  
  ##if the right title is too big we truncate it
  #set($righttitletrunc = $righttitle)
  #if ($righttitletrunc.length() > 35)
    #set($righttitletrunc = $righttitle.substring(0, 34))
    #set($righttitletrunc = "${righttitletrunc}...")
  #end
  
  <div class="frame" id="section_${counter}">
     #if($isGroupAdmin)
     #mycurrikititlebar($title $righttitle $link $color)
     #else
     #mycurrikititlebar($title "" "" $color)
	 #end
     <div class="frame-content" id="section${counter}content">

#end ##}

## ending macro for begingroupsection
#macro(endgroupsection) ##{
<div class="clearfloats"></div>
     </div>
  </div>
#end ##}


#macro(messagelistjs)
{pre}
<script type="text/javascript">
#if(!$togglemsgsectionvisibility)
#set($togglemsgsectionvisibility = 1)
function toggleMsgSectionVisibility(seccounter, showhide){
  var seccontent = document.getElementById("msgsection" + seccounter + "content");
  if(eltHasClass(seccontent, "hidden")){
    rmClass(seccontent, "hidden");
    seccontent.style.display = "";
    // change text
    showhide.removeChild(showhide.firstChild);
    showhide.appendChild(document.createTextNode("$msg.get('caption.hide')"));
    // erase cookie
    eraseCookie("Section" + seccounter + "Hidden");
  }
  else{
    addClass(seccontent, "hidden");
    seccontent.style.display = "none";
    // Change text
    showhide.removeChild(showhide.firstChild);
    showhide.appendChild(document.createTextNode("$msg.get('caption.show')"));
    // set cookie
    createCookie("Section" + seccounter + "Hidden", true, "");
  }
  return false;
}
#end
var linksDiv = document.getElementById("msgsection${seccounter}links");
var showhide${seccounter} = document.createElement("a");
addClass(showhide${seccounter}, "button-link-table");
linksDiv.appendChild(showhide${seccounter});
showhide${seccounter}.setAttribute("href", "#msgsection${seccounter}content");
#if($show)
showhide${seccounter}.appendChild(document.createTextNode("$msg.get('caption.hide')"));
#else
showhide${seccounter}.appendChild(document.createTextNode("$msg.get('caption.show')"));
#end
showhide${seccounter}.setAttribute("onclick", "toggleMsgSectionVisibility(${seccounter}, showhide${seccounter}); return false;");
showhide${seccounter}.onclick = new Function("toggleMsgSectionVisibility(${seccounter}, showhide${seccounter}); return false;");
</script>
{/pre}
#end

#macro(messagelistmessage $messagePageName)
#if(!$seccounter)
#set($seccounter = 1)
#else
#set($seccounter = $seccounter + 1)
#end
#set($messageDoc = $xwiki.getDocument($messagePageName))
#set($ok = $messageDoc.use("XWiki.ArticleClass"))
	<div class="frame-inset">	
#set($modificationDate = $xwiki.formatDate($messageDoc.date,$msg.get("mycurriki.datetimeFormat")))
	 <p><span class="date">$modificationDate</span>, $msg.groups_messages_createdby <a>$xwiki.getLocalUserName($messageDoc.author)</a></p>
	 <p id="msgsection${seccounter}links" class="button-links">
	  <a class="button-link" href="$messageDoc.getURL()">$msg.get("groups_messages_message_optionsview_link")</a>
#if($messageDoc.hasAccessLevel("edit"))
	  <a class="button-link-table" href="$messageDoc.getURL("view","edit=1")">$msg.get("groups_messages_message_optionsedit_link")</a>
#end
	  ## show/hide will be added automatically
	 </p>
	 <p class="messages-title"><a href="$messageDoc.getURL("view")">$messageDoc.display("title")</a></p>
#set($show = 1)
#messagelistjs()
#if($show)
     <div id="msgsection${seccounter}content" class="messages-content">
#else
     <div id="msgsection${seccounter}content" class="messages-content hidden">
#end
	 $messageDoc.display("content")
	 <div class="clearfloats"></div>
	 <p class="date">
	  <a href="$messageDoc.getURL("view")#attachments">$msg.get("groups_messages_message_attachments", [$messageDoc.attachmentList.size()])</a>
	  <a href="$messageDoc.getURL("view")#comments">$msg.get("groups_messages_message_comments", [$messageDoc.getComments().size()])</a>
	 </p>
	</div>
   </div>	
#end

#macro(groupsdisplayarticleblock $adoc)
#if($adoc.hasAccessLevel("view"))
#set($obj = $adoc.getObject("XWiki.ArticleClass",0))
#set($msgtitle = $adoc.display("title", "view"))
#set($msgcontent = $adoc.display("content", "view"))
## CURRIKI-1860: we display the modification date and the last author
#set($modificationDate = $xwiki.formatDate($adoc.date,$msg.get("mycurriki.datetimeFormat")))
<p><span class="date">$modificationDate</span>, by <a>$xwiki.getLocalUserName($adoc.author)</a></p>
<p class="frame-title">$msgtitle</p>
<p>
$msgcontent
</p> 	
#end
#end

#macro(validateGroup $key $msgok $msgerr) ##{
#if( $context.validation.get($key) )
  <div class="validation-error" style="background-color:red; color: white;">
    $msgerr
  </div>
#else
   ##msgok
#end
#end ##}
##
## Core Group Role macros
##
#macro(groupGetRoles $spaceName $withAdmin) ## {
## Sets ret_groupRoles
#set($ret_groupRoles = $xwiki.arrayList)
#set($ret_groupRoleNames = $sm.getRoles($spaceName))
#foreach($role in $ret_groupRoleNames) ## {
  #set($discard = $ret_groupRoles.add($xwiki.getDocument($role)))
#end ## }
#if($withAdmin) ## {
  #set($adminGroup = $xwiki.getDocument($sm.getAdminGroupName($spaceName)))
  #set($discard = $adminGroup.setTitle($msg.get("groups.roles.admin.title")))
  #set($discard = $ret_groupRoleNames.add(0, $sm.getAdminGroupName($spaceName)))
  #set($discard = $ret_groupRoles.add(0, $adminGroup))
#end ## }
#end ## }
##
##
#macro(checkForUniqueRole $spaceName $roleName) ## {
#set($ret_isRoleUnique = true)
#groupGetRoles($spaceName true)
#foreach($role in $ret_groupRoles)
  #if($roleName.equalsIgnoreCase($role.title)) ## {
    #set($ret_isRoleUnique = false)
  #end ## }
#end ## }
#end ## }
##
##
#macro(checkForValidSizeRole $spaceName $roleName) ## {
#set($ret_isRoleValidSize = true)
#if($roleName.length() > 32 || $roleName.length() == 0) ## {
  #set($ret_isRoleValidSize = false)
#end ## }
#end ## }
##
##
#macro(findUniquePageWithExtra $spaceName $prefix $suffix $extra) ## {
#set($ret_pageName = "${prefix}${extra}${suffix}")
#if($xwiki.exists($ret_pageName)) ## {
  #set($extra = "_"+$xwiki.generateRandomString(3).toLowerCase())
  #findUniquePageWithExtra($spaceName $prefix $suffix $extra)
#end ## }
#end ## }
##
##
#macro(findUniqueRolePage $spaceName $roleName) ## {
#set($clearName = $xwiki.clearName($roleName))
#if($clearName.length() == 0) ## {
  #set($clearName = "__"+$xwiki.generateRandomString(3).toLowerCase())
#end ## }
#findUniquePageWithExtra($spaceName "Role_${clearName}" "Group" "")
#end ## }
##
##
#macro(createGroupRole $spaceName $roleName) ## {
#set($ret_err = false)
#set($ret_rDoc = false)
#set($roleName = $roleName.trim())
#checkForUniqueRole($spaceName $roleName)
#checkForValidSizeRole($spaceName $roleName)
#if(!$ret_isRoleUnique) ## {
  #set($ret_err = $msg.get("groups.roles.create.notunique"))
#elseif(!$ret_isRoleValidSize) ## } {
  #set($ret_err = $msg.get("groups.roles.create.invalidsize"))
#else ## } {
  #findUniqueRolePage($spaceName $roleName)
  #set($ret_rDoc = $xwiki.getDocument("${spaceName}.${ret_pageName}"))
  #set($discard = $ret_rDoc.setTitle($roleName))
  #set($discard = $ret_rDoc.saveWithProgrammingRights($msg.get("groups.roles.comment.created", [$roleName])))
  #set($ret_success = $msg.get("groups.roles.create.created", [$roleName]))
#end ## }
#end ## }
##
##
#macro(renameGroupRole $groupDoc $newRoleName) ## {
#set($ret_err = false)
#set($newRoleName = $newRoleName.trim())
#checkForUniqueRole($groupDoc.space $newRoleName)
#checkForValidSizeRole($groupDoc.space $newRoleName)
#if(!$ret_isRoleUnique) ## {
  #set($ret_err = $msg.get("groups.roles.rename.notunique"))
#elseif(!$ret_isRoleValidSize) ## } {
  #set($ret_err = $msg.get("groups.roles.rename.invalidsize"))
#else ## } {
  #set($discard = $groupDoc.setTitle($newRoleName))
  #set($discard = $groupDoc.saveWithProgrammingRights($msg.get("groups.roles.comment.renamed", [$oldRoleName,$newRoleName])))
  #set($ret_success = $msg.get("groups.roles.rename.renamed", [$oldRoleName, $newRoleName]))
#end ## }
#end ## }
##
##
#macro(deleteGroupRole $groupDoc) ## {
#set($roleName = $groupDoc.title)
#set($discard = $groupDoc.deleteWithProgrammingRights())
#set($ret_success = $msg.get("groups.roles.delete.deleted", [$roleName]))
#end ## }
##
##
#macro(addUserToRole $groupName $member) ## {
#set($discard = $sm.addUserToRole($spaceName, $member, $groupName))
#end ## }
##
##
#macro(removeUserFromRole $groupName $member) ## {
#set($discard = $sm.removeUserFromRole($spaceName, $member, $groupName))
#end ## }
##
##
#macro(groupGetRoleMemberCount $groupDoc) ## {
## Sets ret_roleCount
#set($userList = $groupDoc.getObjects("XWiki.XWikiGroups"))
#set($ret_roleCount = $userList.size())
#end ## }
##
##
#macro(groupRoleSelector $spaceName $withAdmin $disableEmpty $selectFor) ## {
#groupGetRoles($spaceName $withAdmin)
#set($ret_hasRoles = $xwiki.arrayList)
#foreach($role in $ret_groupRoles) ## {
  #if($disableEmpty) ## {
    #groupGetRoleMemberCount($role)
    #set($disabled = ($ret_roleCount == 0))
  #else ## } {
    #set($disabled = false)
  #end ## }
  #if($!selectFor) ## {
    #set($sql = ", BaseObject as obj, StringProperty as prop1 where doc.fullName ='${role.fullName}' and doc.fullName=obj.name and obj.className='XWiki.XWikiGroups' and obj.id=prop1.id.id and prop1.id.name='member' and prop1.id.value='${selectFor}'")
    #set($search = $xwiki.searchDocuments($sql, 1, 0))
    #set($selected = ($search.size() > 0))
    #if($selected) ## {
      #set($discard = $ret_hasRoles.add($role.fullName))
    #end ## }
  #else ## } {
    #set($selected = false)
  #end ## }
<option#if($disabled) DISABLED#end #if($selected) SELECTED#end value="${role.fullName}">$role.title</option>
#end ## }
#end ## }
##
## PAGE: Groups.CreateMessageSheet
## Macro to update from request the rights of the given message document
##
#macro(messageUpdateRightsFromRequest $msgdoc)
## Remove any previous rights
#set($ok = true)
#if($msgdoc.getObject("XWiki.XWikiRights"))
#set($ok = $msgdoc.removeObjects("XWiki.XWikiRights"))
#end
#if($ok)
## Add edit right to creator
$msgdoc.use($msgdoc.newObject("XWiki.XWikiRights"))
$msgdoc.set("users", $context.user)
$msgdoc.set("levels", "edit")
$msgdoc.set("groups",  "")
$msgdoc.set("allow","1")
## Add view rights
#set($users = $context.user)
#if($request.toMember)
#set($users = $users + "," + $request.selectedMembersList)
#end
#set($groups = "")
#if($request.toGroup)
#set($groups = $groups + "," + $spaceName + ".MemberGroup")
#if($s.policy == "open")
#set($groups = $groups + ",XWiki.XWikiAllGroup")
#end
#end
#if($request.toRole)
#set($groups = $groups + "," + $request.selectedRolesList)
#end
$msgdoc.use($msgdoc.newObject("XWiki.XWikiRights"))
$msgdoc.set("users", $users)
$msgdoc.set("groups",  $groups)
$msgdoc.set("levels", "view")
$msgdoc.set("allow","1")
$msgdoc.save()
#end ## if previous rights have been removed successfuly
#end
##
## PAGE: Groups.CreateMessageSheet
## Macro to send a notification mail to the "To" list of the message that has just been created
##
#macro(messageSendNotificationMail $msg_doc)
#if($request.notify && $xwiki.mailsender)
#set($mailTo = "")
#if($request.toGroup)
## add all group members
#foreach($member in $sm.getMembers($spaceName))
#set($profile = $sm.getSpaceUserProfile($spaceName, $member))
#if($profile && $profile.allowNotifications)
#set($mailTo = $mailTo + $xwiki.getUser($member).email + ",")
#end
#end
#else
#set($mailToList = $xwiki.arrayList)
#if($request.toMember && $request.selectedMembersList.trim().length() > 0)
## add selected members
#foreach($member in $request.selectedMembersList.split(","))
#set($profile = $sm.getSpaceUserProfile($spaceName, $member))
#if($profile && $profile.allowNotifications)
#set($memberEmail = $xwiki.getUser($member).email)
#if(!$mailToList.contains($memberEmail))
#set($ok = $mailToList.add($memberEmail))
#set($mailTo = $mailTo + $memberEmail + ",")
#end
#end
#end
#end
#if($request.toRole && $request.selectedRolesList.trim().length() > 0)
## add members having selected roles
#foreach($role in $request.selectedRolesList.split(","))
#foreach($member in $sm.getUsersForRole($spaceName, $role))
#set($profile = $sm.getSpaceUserProfile($spaceName, $member))
#if($profile && $profile.allowNotifications)
#set($memberEmail = $xwiki.getUser($member).email)
#if(!$mailToList.contains($memberEmail))
#set($ok = $mailToList.add($memberEmail))
#set($mailTo = $mailTo + $memberEmail + ",")
#end
#end
#end
#end
#end
#end
#if($!mailTo != "")
#set($mailFrom = $xwiki.getXWikiPreference("admin_email"))
#set($mailDoc = $xwiki.getDocument("Groups.MailTemplateCreateMessage"))
## $msgdoc has to be in the current context because it is used in the mail template
#set($msgdoc = $msg_doc)
$msgdoc.use("XWiki.ArticleClass")
#set($mailSubject = $doc.getRenderedContent($mailDoc.title))
#set($mailContent = $doc.getRenderedContent($mailDoc.content))
#set($ok = $xwiki.mailsender.sendTextMessage($mailFrom, null, null, $mailTo, $mailSubject, $mailContent, null))
#end
#end
#end
##
## PAGE: Groups.CreateMessageSheet
## Macro to include the JavaScript code needed for message creation
##
#macro(messageIncludeCreateJs)
{pre}
<script type="text/javascript">
function checkForm(formName) {
   var isValid = true;
   var title = document.forms[formName]['XWiki.ArticleClass_0_title'].value;
   if (title.length <= 1) {
     alert("$msg.get("groups_messages_create_mandatory")");
     isValid = false;
   }
   if (isValid && !saveToList()){
     alert('$msg.get("groups_messages_create_to_mandatory")');
     isValid = false;
   }
   return isValid;
}
function displayAddLink(selectObj, linkId){
var linkObj = document.getElementById(linkId);
if (selectObj.value!=''){
linkObj.style.display='';
}else{
linkObj.style.display='none';
}
}
function addToList(addLink, selectId, divId){
var selectObj = document.getElementById(selectId);
if (selectObj.selectedIndex < 0){
return;
}
var option = selectObj.options[selectObj.selectedIndex]
if (option.value.length == 0){
return;
}
var getClass=document.getElementsByClassName(divId);
var menu=getClass[0].getElementsByTagName('td');
var tr = document.createElement('tr');
tr.className=divId;
var td1 = document.createElement('td');
var td2 = document.createElement('td');
var td3 = document.createElement('td');
getClass[0].parentNode.insertBefore(tr, getClass[0]);
tr.appendChild(td1);
moveChildNodes(menu[0], td1);
tr.appendChild(td2);
tr.appendChild(td3);

var deleteLink = document.createElement('a');
deleteLink.appendChild(document.createTextNode('Delete'));
deleteLink.href = 'javascript:void()';
if (selectId == 'rolesList') {
deleteLink.title = '${msg.get('groups_messages_create_to_delete_role_tooltip')}';
} else if (selectId == 'membersList') {
deleteLink.title = '${msg.get('groups_messages_create_to_delete_member_tooltip')}';
} else {
deleteLink.title = '${msg.get('groups_messages_create_to_delete_tooltip')}';
}
deleteLink.onclick = function(){
if (!selectObj.disabled){
var parentTr=this.parentNode.parentNode;
var getClass=document.getElementsByClassName(parentTr.className);
if(parentTr==getClass[0]){
moveChildNodes(parentTr.getElementsByTagName('td')[0],getClass[1].getElementsByTagName('td')[0]);
}
this.parentNode.parentNode.parentNode.removeChild(this.parentNode.parentNode);
option.style.display = '';
option.disabled = false;
}
return false;
};
td2.appendChild(document.createTextNode(option.text));
td3.appendChild(deleteLink);
option.style.display = 'none';
option.disabled = true;
selectObj.selectedIndex = 0;
selectObj.onchange();
}
function getInputs(parent, type){
var inputs = parent.getElementsByTagName('input');
var result = [];
for(var i=0; i<inputs.length; i++){
if (inputs[i].type == type){
result.push(inputs[i]);
}
}
return result;
}
function moveChildNodes(fromParent, toParent){
var checkboxes = getInputs(fromParent, 'checkbox');
var checked = new Array(checkboxes.length);
for(var i=0; i<checkboxes.length; i++){
checked[i] = checkboxes[i].checked;
}
var child = fromParent.firstChild;
while(child){
var nextSibling = child.nextSibling;
toParent.appendChild(child);
child = nextSibling;
}
checkboxes = getInputs(toParent, 'checkbox');
for(var i=0; i<checkboxes.length; i++){
checkboxes[i].checked = checked[i];
}
}
function enableSelect(checkbox, selectId){
var selectObj = document.getElementById(selectId);
selectObj.selectedIndex = 0;
selectObj.disabled = !checkbox.checked;
selectObj.onchange();
}
function getSelectedOptions(select){
var selectedOptions = [];
for(var i=0; i<select.options.length; i++){
if (select.options[i].style.display == 'none'){
selectedOptions.push(select.options[i].value);
}
}
return selectedOptions;
}
function saveSelectedOptions(checkBoxId, selectId, hiddenId){
if (document.getElementById(checkBoxId).checked){
var select = document.getElementById(selectId);
var selectedOptions = getSelectedOptions(select);
if (selectedOptions.length == 0){
return false;
}
document.getElementById(hiddenId).value = selectedOptions.join(',');
return true;
}
return false;
}
function saveToList(){
var rolesSaved = saveSelectedOptions('toRole', 'rolesList', 'selectedRolesList');
var membersSaved = saveSelectedOptions('toMember', 'membersList', 'selectedMembersList');
var toGroup = document.getElementById('toGroup').checked;
return toGroup || rolesSaved || membersSaved;
}
function preFillList(addLinkId, selectId, divId, items){
  var select = document.getElementById(selectId);
  var addLink = document.getElementById(addLinkId);
  for(var i=0; i<select.options.length; i++){
    var option = select.options[i];
    if (inArray(option.value, items)){
      select.selectedIndex = option.index;
      addToList(addLink, selectId, divId);
    }
  }
}
function inArray(item, items){
  for(var i=0; i<items.length; i++){
    if (items[i] == item){
      return true;
    }
  }
  return false;
}
</script>
{/pre}
#end
##
## PAGE: Groups.CreateMessageSheet
## Macro to add the input fields needed for selecting the "To" list
##
#macro(messageAddSendToFormFields $spaceName $toGroup $selectedRoles $selectedMembers)
<div class="groups-create-messages">
<div class="strong">$msg.get('groups_messages_create_to_label')</div>
<table>
<tbody>
<tr>
<td colspan="3">
<input id="toGroup" name="toGroup" type="checkbox" #if($toGroup)checked="checked"#end style="width:auto;" /><label for="toGroup">$msg.get('groups_messages_create_to_group_label')</label>
</td>
</tr>
<tr class="selectedRoles">
<td>
<input id="toRole" name="toRole" type="checkbox" #if($selectedRoles.size()>0)checked="checked"#end style="width:auto;" onclick="enableSelect(this, 'rolesList')" /><label for="toRole">$msg.get('groups_messages_create_to_role_label')</label>
</td>
<td>
<input id="selectedRolesList" name="selectedRolesList" type="hidden" value="" />
<select id="rolesList" onchange="displayAddLink(this, 'addRoleLink')" disabled="true">
<option value="">$msg.get('groups_messages_create_to_role_default')</option>
#groupGetRoles($spaceName true)
#foreach($role in $ret_groupRoles)
#groupGetRoleMemberCount($role)
<option#if($ret_roleCount==0) DISABLED#end value="${role.fullName}">$role.title</option>
#end
</select>
</td>
<td>
<a id="addRoleLink" href="javascript:void()" title="${msg.get('groups_messages_create_to_role_add_tooltip')}" onclick="addToList(this, 'rolesList', 'selectedRoles'); return false;" style="display:none;">$msg.get('groups_messages_create_to_role_add_label')</a>
</td>
</tr>
<tr class="selectedMembers">
<td>
<input id="toMember" name="toMember" type="checkbox" #if($selectedMembers.size()>0)checked="checked"#end style="width:auto;" onclick="enableSelect(this, 'membersList')" /><label for="toMember">$msg.get('groups_messages_create_to_member_label')</label>
</td>
<td>
<input id="selectedMembersList" name="selectedMembersList" type="hidden" value="" />
<select id="membersList" onchange="displayAddLink(this, 'addMemberLink');" disabled="true">
<option value="" selected="selected">$msg.get('groups_messages_create_to_member_default')</option>
#foreach($memberName in $sm.getMembers($spaceName))
<option value="${memberName}">$xwiki.getUserName($memberName, false)</option>
#end
</select>
</td>
<td>
<a id="addMemberLink" href="javascript:void()" title="${msg.get('groups_messages_create_to_member_add_tooltip')}" onclick="addToList(this, 'membersList','selectedMembers'); return false;" style="display:none;">$msg.get('groups_messages_create_to_member_add_label')</a>
</td>
</tr>
</tbody>
</table>
<div class="strong">$msg.get('groups_messages_create_notify_label')</div>
<div>
<input id="notify" name="notify" type="checkbox" style="width:auto;" /><label for="notify">$msg.get('groups_messages_create_notify_mail_label')</label>
</div>
</div>
#if($selectedRoles.size()>0 || $selectedMembers.size()>0)
{pre}
<script type="text/javascript">
#if($selectedRoles.size()>0)
enableSelect(document.getElementById('toRole'), 'rolesList');
var selectedRoles = [#foreach($role in $selectedRoles)'${role}',#end];
preFillList('addRoleLink', 'rolesList', 'selectedRoles', selectedRoles); 
#end
#if($selectedMembers.size()>0)
enableSelect(document.getElementById('toMember'), 'membersList');
var selectedMembers = [#foreach($member in $selectedMembers)'${member}',#end];
preFillList('addMemberLink', 'membersList','selectedMembers', selectedMembers);
#end
</script>
{/pre}
#end
#end
##
##
## End of Groups Macros ## }
##
##
## From space.vm - as the macros loaded there don't seem to work from here any more
##
#macro(parentsBreadcrumb $bcDoc $level)

#set($sm = $xwiki.csm)
#set($spaceName = $bcDoc.getSpace())
#set($s = $sm.getSpace($spaceName))
#if( $s ) #if( $s.isNew() || $s.isDeleted() )
  #set( $s = "" )
#end #end

##groups specifics
###group creation page
#if($bcDoc.fullName == "Groups.CreateNewGroup")
  #set($usr = $context.user)
  $xwiki.getUserName($usr,true) &gt;
#end
###group home

#if($!s=="") ## NOT groups specific

#set($parent = $bcDoc.parent) 
#if($parent && ($!parent != "") && ($level < 6) && ($bcLocal.indexOf($parent) == -1))
  #set($bcLocal = "${parent};${bcLocal}")
  #set($level = $level + 1)
  #parentsBreadcrumb($xwiki.getDocument($parent) $level)
#else
  #set($hql = "select obj from BaseObject as obj, StringProperty as props where obj.id=props.id.id and obj.className='XWiki.SubAssetClass' and props.id.name='assetpage' and props.value='${bcDoc.fullName}'")
  #foreach($bcItem in $xwiki.search($hql, 1, 0))
   #set($bcLocal = "${bcItem.name};${bcLocal}")
   #set($level = $level + 1)
   #parentsBreadcrumb($xwiki.getDocument(${bcItem.name}) $level)
  #end
#end

#if($bcDoc.space.startsWith("Documentation_")) ## documentation space
  #set($grName = $bcDoc.space.substring( 14 ))
  #set($s = $sm.getSpace($grName))
  #if( $s )
    #if( $s.isNew() || $s.isDeleted() )
      #set( $s = "" )
    #end
  #end
  #if($!s=="") #else
  		  <a href="$s.getHomeURL()">$s.getDisplayTitle()</a> &gt; ##groups name 
  		  #set($docPageName = $grName+".Documentation") 
  		  #set($docPage = $xwiki.getDocument( $docPageName ) ) 
  		  <a href="$docPage.getURL()">${docPage.displayTitle}</a> &gt; ##documentation page
  #end  
#end ## end of documentation space
  
#else ##GROUP SPECIFIC
  <a href="$s.getHomeURL()">$s.getDisplayTitle()</a> &gt;
 
  #if($bcDoc.name == "Contributions" || $bcDoc.name == "ContributionsSearch")
    <a href="${s.getHomeURL()}Curriculum">$msg.get("groups_curriculum_tabname")</a> &gt;
  #end

#end  ## end group specifics

#end ## end macro
##
##
##
##
#macro(currikiBreadcrumb $bcParam $bcCurrentDoc)

#set($sm = $xwiki.csm)
#set($spaceName = $bcCurrentDoc.getSpace())
#set($s = $sm.getSpace($spaceName))
#if( $s ) #if( $s.isNew() || $s.isDeleted() )
  #set( $s = "" )
#end #end

 ##Preparation de la liste
 #set($bcParent = $bcParam)
 #if($bcParam && $!bcParam != "")
  #if($bcParam.endsWith($doc.fullName))
   #set($bcLocal = $bcParam)
  #else
   #set($bcLocal = "${bcParam};${doc.fullName}")
  #end
 #else
  #set($bcLocal = $doc.fullName)
 #end
 #if(!$bcParam || $!bcParam == "")
  #parentsBreadcrumb($bcCurrentDoc, 0)
 #end
 ##Deroulage de la liste
 #set($isFirst = true)
 #set($previousBc = "")
 #foreach($bcItem in $bcLocal.split(";"))
  #if($bcItem != "" && $bcItem != "XWiki.XWikiUsers")
   
   #if(!$isFirst)
    &gt; 
   #end

   #set($isFirst = false)
   #set($bcDoc = $xwiki.getDocument($bcItem.replace('/', '.')))
   
   #if($bcDoc.fullName == "XWiki.EditArticle" && $request.editArticle)
    #set($bcDoc = $xwiki.getDocument($request.editArticle))
   #end

   #findCurrikiTitle($bcDoc)

   ##groups specific rules
   #if($!s=="") 
     ##don't fix anything
   #else
     #if($bcDoc.name==$msg.groups_home_page) ##home page
       #set($currikiTitle = $msg.groups_home_tabname)
       #if($request.action)
         #if($request.action=="editmasthead")
           #set($currikiTitle = $currikiTitle + "</a> &gt; <a href='${bcDoc.getURL()}?action=editmasthead'>${msg.groups_home_editmasthead_bc}</a>")
	         #end
         #if($request.action=="editinfo")
           #set($currikiTitle = $currikiTitle + "</a> &gt; <a href='${bcDoc.getURL()}?action=editinformation'>${msg.groups_home_editinformation_bc}</a>")
         #end
       #end
     #end ##end home page
     #if($bcDoc.name=="Documentation") ##documentation page
     	  #if(	$request.action)
     	  	  #if($request.action == "newdoc")
     	  	  	  #set($currikiTitle = $currikiTitle + "</a> &gt; <a href='${bcDoc.getURL()}?action=newdoc'>${msg.groups_documentation_create_wiki_page_title}</a>")
     	  	  #end
     	  	  #if($request.action == "editdoc")
     	  	  	  #set($currikiTitle = $currikiTitle + "</a> &gt; <a href='${bcDoc.getURL()}?action=newdoc'>${msg.groups_documentation_edit_wiki_title}</a>")
     	  	  #end
     	  	  #if($request.action == "history")
     	  	  	  #set($currikiTitle = $currikiTitle + "</a> &gt; <a href='${bcDoc.getURL()}?action=newdoc'>${msg.groups_documentation_history_title}</a>")
     	  	  #end
     	  	  #if($request.action == "compare")
     	  	  	  #set($currikiTitle = $currikiTitle + "</a> &gt; <a href='${bcDoc.getURL()}?action=newdoc'>${msg.groups_documentation_compare_title}</a>")
     	  	  #end
     	  #end
     #end  ##end documentation page
   ###else
   ##  #if($bcDoc.fullName == "Groups.CreateNewGroup")
   ##    #set($currikiTitle = $msg.get("groups_creategroup_pagename"))
   ##  #end
   #end
   ##end of groups specific rules

   #set($userArg = "")
   #if($bcDoc.space=="MyCurriki" && "$!request.user" != "")
    #set($userArg="&user=$request.user")
   #end

   <a href="$bcDoc.getURL("view", "bc=${previousBc}${userArg}")">$currikiTitle</a>
   #set($previousBc = "${previousBc};${bcItem}")
   
   #set($more = "")
   #if($bcDoc.fullName == "Groups.Browse")
     #if( $request.subject )
		#set($sdoc = $xwiki.getDocument($request.subject))
		#set($more = "${sdoc.title} ${msg.get('browseGroups.groups')}")
		#set($more_href = "${doc.getURL()}?subject=${request.subject}")
     #end
   #end

 
   #if($more != "")
     &gt; <a href="$more_href">$more</a>
   #end
   

  #end
 #end
 
#end
##
## End from space.vm
##
## allows to insert a style sheet
#macro(css $filename)
<style type="text/css">
@import "$doc.getAttachmentURL($filename)";
</style>
#end
