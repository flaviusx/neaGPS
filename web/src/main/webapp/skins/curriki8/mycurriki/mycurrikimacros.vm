#**
  *
  * My Curriki Macros
  *
  * The my curriki module is the personal pages of each user
  *
  * The following sections are available in MyCurriki:
  *
  * - Profile
  * - Favorites
  * - Contributions
  * - Groups
  * - Blog
  *
  * These macros are used in the pages of the Wiki MyCurriki space
  *
  *#

##
## My Curriki General Macros
##
##


#**
  * Adding a dash instead of an empty text
  *
  * @param $text Text to test
  * @author dward@curriki.org
  *#
#macro(mycurriki_dashifempty $text)
#if($!text == "")
$msg.get("profile.emptyField")
#else
$text
#end
#end


#**
  * Display the my curriki tabs for the top of the page
  *
  * @param $curtab Current active tab
  * @param $whofor Name of the user to evaluate the links
  * @author dward@curriki.org
  *#
#macro(mycurriki_tabs $curtab $whofor) ## {
  #set($tabs = ["profile","favorites","contributions","collections","blog","groups"])
  <div id="mycurriki-tabs" class="tabs">
  #foreach($tab in $tabs) ## {
    #if("$!whofor" == "" || $whofor == $context.user) ## {
      #set($url=$xwiki.getURL($msg.get("mycurriki.tab.${tab}.page"), "view"))
    #else ## } {
      #set($url=$xwiki.getURL($msg.get("mycurriki.tab.${tab}.page"), "view", "user=${whofor}"))
    #end ## }
    <a class="tab#if($curtab==$tab) tab-selected#end" href="$url">$msg.get("mycurriki.tab.${tab}.label")</a>
  #end ## foreach ## }
  </div>
#end ## macro ## }

#**
  * Display the MyCurriki header
  *
  * @param $userobj User object to display the form for
  * @author dward@curriki.org
  *#
#macro(mycurriki_header $userobj) ## {
<h2>$userobj.first_name $userobj.last_name</h2>
#end ## macro ## }


#**
  * My Curriki Main Page Generation
  * This macro is called by every my curriki page and uses callbacks defined as macro in the wiki page
  *
  * @param $pageref Page Name to use in call back
  * @param $whofor User to display the page for
  * $param $hasbutton True if the page uses buttons
  * @author dward@curriki.org
  *#
#macro(mycurriki_pagefull $pageref $whofor $hasbutton) ## {
## Determine whofor
#if("$!whofor" == "") ## {
#if("$!request.user" != "") ## {
#set($whofor = $request.user)
#else ## } {
#if($doc.web.startsWith("Blog_")) ## {
#set($whofor = $doc.web.substring(5))
#else ## } {
#if("$!whofor" == "") ## {
#set($whofor = $context.user)
#end ## }
#end ## }
#end ## }
#end ## }
#if(!$whofor.startsWith("XWiki.")) ## {
#set($whofor = "XWiki.$whofor")
#end ## }
## Now know whofor
#set($userdoc = $xwiki.getDocument($whofor))
#set($userobj = $userdoc.getObject("XWiki.XWikiUsers"))
<div id="mycurriki-$pageref" class="mycurriki mycurriki-$pageref">
#mycurriki_header($userobj)
#mycurriki_tabs($pageref $whofor)
<div id="mycurriki-main" class="tab-container">
<div id="mycurriki-main-header">
#if($hasbutton == 1) ## {
## This is a call back to the local macro of the page including this macro
#mycurriki_pagebutton($userobj)
#end ## }
#if("$!pageref" == "blog") ## {
#set($hasBlog=$xwiki.exists("Blog_${shortname}.WebHome"))
#if(!$hasBlog) ## {
#set($subtitle = $msg.get("mycurriki.tab.${pageref}.noblog.subtitle", ["$userobj.first_name $userobj.last_name"]))
#else ## }{
#set($subtitle = $msg.get("mycurriki.tab.${pageref}.subtitle", ["$userobj.first_name $userobj.last_name"]))
#end ## }
#else ## } {
#set($subtitle = $msg.get("mycurriki.tab.${pageref}.subtitle"))
#end ## }
<div id="mycurriki-main-header-left">
#if($subtitle != "" && $subtitle != "mycurriki.tab.${pageref}.subtitle") ## {
<div id="mycurriki-main-header-subtitle" class="tab-deck">$subtitle</div>
#end ## }
</div>
<div class="clearfloats"></div>
</div>
<div id="mycurriki-main-content" class="frame">
## This is a call back to the local macro of the page including this macro
#mycurriki_pagecontent($userdoc $userobj)
</div>
</div>
</div>
#end ##macro ## }
##

#**
  * My Curriki callback function
  *
  * @param $pageref Page Name to use in call back
  * @author dward@curriki.org
  *#
#macro(mycurriki_page $pageref) ## {
## This is a call back to the local macro of the page including this macro
#mycurriki_pagefull($pageref "" 0)
#end ##macro ## }

#**
  * My Curriki callback function with a button
  *
  * @param $pageref Page Name to use in call back
  * @author dward@curriki.org
  *#
#macro(mycurriki_pagewithbutton $pageref) ## {
## This is a call back to the local macro of the page including this macro
#mycurriki_pagefull($pageref "" 1)
#end ##macro ## }


#**
  * My Curriki subject breadcrumb
  *
  * @param $bcParam status parameter
  * @param $bcCurrentDoc current doc to check in the breadcrumb
  * @author dward@curriki.org
  *#
#macro(mycurriki_subjectbreadcrumb $bcParam $bcCurrentDoc)
 ##Preparation de la liste
 #set($bcParent = $bcParam)
 #if($bcParam && $!bcParam != "")
  #if($bcParam.endsWith($bcCurrentDoc.fullName))
   #set($bcLocal = $bcParam)
  #else
   #set($bcLocal = "${bcParam};${bcCurrentDoc.fullName}")
  #end
 #else
  #set($bcLocal = $bcCurrentDoc.fullName)
 #end
 #if(!$bcParam || $!bcParam == "")
  #parentsBreadcrumb($bcCurrentDoc 0)
 #end
 #set($bcLocal = $bcLocal.replace("FW_masterFramework.WebHome;", ''))
 ##Deroulage de la liste
 #set($isFirst = true)
 #set($previousBc = "")
 #foreach($bcItem in $bcLocal.split(";"))
  #if($bcItem != "" && $bcItem != "XWiki.XWikiUsers")
   #if(!$isFirst)
    &gt;
   #end
   #set($isFirst = false)
   #set($bcDoc = $xwiki.getDocument($bcItem.replace('/', '.')))
   #if($bcDoc.fullName == "XWiki.EditArticle" && $request.editArticle)
    #set($bcDoc = $xwiki.getDocument($request.editArticle))
   #end
   #findCurrikiTitle($bcDoc)
   #set($userArg = "")
   #if($bcDoc.space=="MyCurriki" && "$!request.user" != "")
    #set($userArg="&user=$request.user")
   #end
   <a href="$bcDoc.getURL("view", "bc=${previousBc}${userArg}")">$currikiTitle</a>
   #set($previousBc = "${previousBc};${bcItem}")
  #end
 #end
#end


#**
  * Display the title of an Asset
  *
  * @param $asset Asset to display the title for
  * @author dward@curriki.org
  *#
#macro(mycurriki_assettitle $asset) ## {
#findCurrikiTitle($asset)
#set($title = $currikiTitle)
#if(!$title || $title.length() == 0) ## {
 #set($title = $msg.get("caption.untitled"))
#end ## }
<a class="curriki-link" href="$asset.getURL("view")">{pre}$title{/pre}</a>
#end ## macro ## }

#**
  * Display the title of an Asset with a mouserover description
  *
  * @param $asset Asset to display the title for
  * @author dward@curriki.org
  *#
#macro(mycurriki_assettitlewithmodesc $asset) ## {
#set($descnb = $descnb + 1)
#findCurrikiTitle($asset)
#set($title = $currikiTitle)
#if(!$title || $title.length() == 0) ## {
 #set($title = $msg.get("caption.untitled"))
#end ## }
<a class="curriki-link" href="$asset.getURL("view")" onmouseover="$('mycurriki-description-${descnb}').show();" onmouseout="$('mycurriki-description-${descnb}').hide();">{pre}$title{/pre}</a>
<div id="mycurriki-description-${descnb}" class="popup" style="display: none;">
{pre}
$msg.get("mycurriki.favorites.mouseover.description")<br />
$!asset.getObject("XWiki.AssetClass").getProperty("description").getValue() <br />
<br />
$msg.get('mycurriki.favorites.mouseover.subject') <br />
#set($subj = $!asset.getValue('fw_items'))
#set($c = 0)
#foreach($item in $subj) ## {
#if($item == "FW_masterFramework.WebHome") ## {
## Don't count WebHome
#else ## } {
#set($c = $c + 1)
#if($c <= 2) ## {
#set($fw = $xwiki.getDocument($item))
## $fw.displayTitle <br />
## #set($bcLocal = $item)
#mycurriki_subjectbreadcrumb("" $fw) <br />
#end ## }
#end ## }
#end ## }
#if($c > 2) ## {
...<br />
#end ## }
<br />
$msg.get('mycurriki.favorites.mouseover.level')<br />
#set($levl = $!asset.getValue('educational_level2'))
#set($c = 0)
#foreach($item in $levl) ## {
#set($c = $c + 1)
#if($c <= 2) ## {
$msg.get("search.selector.level.${item}")<br />
#end ## }
#end ## }
#if($c > 2) ## {
...<br />
#end ## }
{/pre}
</div>
#end ## macro ## }

#**
  * Display Rights status of an Asset
  *
  * @param $asset Asset
  * @author dward@curriki.org
  *#
#macro(mycurriki_access $asset) ## {
#set($access = $!asset.getObject("XWiki.AssetClass").getProperty("rights").getValue())
$msg.get("mycurriki.macro.access.${access}")
#end ## macro ## }


#**
  * Display the ict of an Asset
  *
  * @param $asset Asset
  * @author dward@curriki.org
  *#
#macro(mycurriki_ict $asset) ## {
#set($ict = "")
#set($ict = $!asset.getObject("XWiki.AssetClass").getProperty("instructional_component2").getValue())
#if($ict == "" || $ict.size() == 0) ## {
## No ICT set -- nothing to do
#else ## } {
#if($ict.size() > 1) ## {
##Multiple
#set($icon = $xwiki.getSkinFile("icons/ICTIcon-Multiple.gif"))
#set($text = $msg.get('search.results.col.ict.multiple'))
#else ## } {
##Single
#set($ict = $ict.get(0))
#set($icon = "${ict.substring(0,1).toUpperCase()}${ict.substring(1)}")
#set($icon = $icon.replaceFirst("_.*", ""))
#set($icon = $xwiki.getSkinFile("icons/ICTIcon-${icon}.gif"))
#set($text = $ict.replaceFirst("_", "."))
#set($text = "search.selector.ict.${text}")
#set($text = $msg.get($text))
#end ## if not multiple ## }
<img src="${icon}" alt="${text}" title="${text}" />
#end ## if not empty ## }
#end ## Macro ## }


#**
  * Display the file type of an Asset
  *
  * @param $asset Asset
  * @author dward@curriki.org
  *#
#macro(mycurriki_filetype $asset) ## {
#if($asset.attachmentList.size() == 0) ## {
  #set($mime = "")
  #set($rowType="currikulum")
#else ## } {
  #mimeicon($asset.attachmentList.get(0).getFilename())
  #set($mime = $asset.attachmentList.get(0).mimeType)
  #set($rowType="mime")
#end ## }
#if($asset.getObject("XWiki.TextAssetClass")) ## {
  #set($rowType="currikulum")
#else ## } {
#if($asset.getObject("XWiki.ExternalAssetClass")) ## {
  #set($rowType="URL")
#end ## }
#end ## }
#if($rowType == "URL") ## {
#set($text = $msg.get("mycurriki.macro.filetype.URL"))
{pre}<img src="$xwiki.getSkinFile("mimetypes/HTM.gif")" alt="[${text}]" title="[${text}]"/>{/pre}
#end ## }
#if($rowType == "mime") ## {
#if(!$m_fileExt || $m_fileExt == "Unknown") ## {
  #set($text = $msg.get("mycurriki.macro.filetype.unknown"))
#else ## } {
  #set($text = $m_fileExt)
#end ## if ext ## }
{pre}<img src="$macro_iconUrl" alt="[${text}]" title="[${text}]"/>{/pre}
#end ## if mime ## }
#if($rowType == "curriki-link") ## {
#set($text = $msg.get("mycurriki.macro.filetype.curriki"))
{pre}<img src="$xwiki.getSkinFile("mimetypes/Curriki.gif")" alt="[${text}]" title="[${text}]"/>{/pre}
#end ## }
#if($rowType == "currikulum") ## {
#set($text = $msg.get("mycurriki.macro.filetype.currikulum"))
{pre}<img src="$xwiki.getSkinFile("mimetypes/Curriki.gif")" alt="[${text}]" title="[${text}]"/>{/pre}
#end ## }
#end ## Macro ## }

#**
  * Display the last update date of an Asset
  *
  * @param $asset Asset
  * @author dward@curriki.org
  *#
#macro(mycurriki_lastupdate $asset) ## {
$!xwiki.formatDate($asset.contentUpdateDate, $msg.get("mycurriki.dateFormat"))
#end ## macro ## }

#**
  * Display the contributor of an Asset
  *
  * @param $asset Asset
  * @author dward@curriki.org
  *#
#macro(mycurriki_contributor $asset) ## {
$xwiki.getUserName($asset.creator)
#end ## macro ## }


#**
  * My Curriki pagination macro with additional arguments
  *
  * @param $called Text to use in the pagination macro
  * @param from start number
  * @param $nbToDisplay number of elements to display
  * @param $of Maximum number of elements
  * @param $addargs Additional arguments for the url
  * @author dward@curriki.org
  *#
#macro(mycurriki_paginatorargs $called $from $nbToDisplay $of $addargs) ## {
<div id="mycurriki-paginator" class="table-results">
## Make sure we have sane settings for $of
#if($of < 0) ## {
#set($of = 0)
#end ## }
## We dont show the paginator if nothing to paginate
#if($of != 0) ## {
## Make sure we have sane settings for $from
#if($from < 0) ## {
#set($from = 0)
#end ## }
#if($from >= $of) ## {
#set($from = $of - 1)
#end ## }
## Make sure we have sane settings for $nbToDisplay
#if($nbToDisplay < 1) ## {
#set($nbToDisplay = 1)
#end ## }
#if("$called"=="") ## {
#set($called = $msg.get("mycurriki.macro.paginate.results"))
#end ## }
## Determine what $to sould be
#set($to = ($from + $nbToDisplay) - 1)
#if($to >= $of) ## {
#set($to = ($of - 1))
#end ## }
## Now figure out total, current, first, and last page
#set($pages = (($of - 1) / $nbToDisplay) + 1)
#set($cpage = ($from / $nbToDisplay) + 1)
#set($fpage = ((($cpage - 1) / 10) * 10) + 1)
#set($lpage = $fpage + 9)
#if($lpage > $pages) ## {
#set($lpage = $pages)
#end ## }
## Figure out if we need a user argument
#if("$!request.user" == "") ## {
#set($addarg="")
#else ## } {
#set($addarg="user=${request.user}&")
#end ## }
#if($addargs != "") ## {
#set($addarg="${addarg}${addargs}&")
#end ## }
<div id="mycurriki-paginator-line1" class="table-results-title">
## Display 1 -> X+1 instead of 0 -> X
#set($dFrom = $from + 1)
#set($dTo = $to + 1)
$called $dFrom - $dTo $msg.get("mycurriki.macro.paginate.of") $of
</div>
<div id="mycurriki-paginator-line2" class="table-results-navigation">
#if($cpage == 1) ## {
#set($npage = 0)
#else ## } {
#set($npage = (($cpage - 2) * $nbToDisplay))
#end ## }
#set($url = $xwiki.getURL($doc.fullName, "view", "${addarg}startIndex=${npage}"))
#if($cpage!=1) ## {
#set($prvpage = $cpage - 1)
#set($altprev = "Page "+${prvpage})
<a href="${url}" class="table-results-previous#if($cpage==1) table-results-disabled" onclick="return false;#end" alt="${altprev}" title="${altprev}">$msg.get("mycurriki.macro.paginate.previous")</a>
#end ## }
#foreach ($pg in [${fpage}..${lpage}]) ## {
#set($npage = (($pg - 1) * $nbToDisplay))
#set($url = $xwiki.getURL($doc.fullName, "view", "${addarg}startIndex=${npage}"))
<a href="${url}"#if($pg==$cpage) class="table-results-navigation-selected" onclick="return false;"#end>$pg</a>
#end ## }
#if($cpage==$pages) ## {
#set($npage = (($pages - 1) * $nbToDisplay))
#else ## } {
#set($npage = ($cpage * $nbToDisplay))
#end ## }
#set($url = $xwiki.getURL($doc.fullName, "view", "${addarg}startIndex=${npage}"))
#if($cpage!=$pages) ## {
#set($nxtpage = $cpage + 1)
#set($altnext = "Page "+${nxtpage})
<a href="${url}" class="table-results-next#if($cpage==$pages) table-results-disabled" onclick="return false;#end" alt="${altnext}" title="${altnext}">$msg.get("mycurriki.macro.paginate.next")</a>
#end ## }
</div>
#end ## if != 0 ## }
</div>
#end ## macro ## }

#**
  * My Curriki pagination macro
  *
  * @param $called Text to use in the pagination macro
  * @param from start number
  * @param $nbToDisplay number of elements to display
  * @param $of Maximum number of elements
  * @author dward@curriki.org
  *#
#macro(mycurriki_paginator $called $from $nbToDisplay $of) ## {
#mycurriki_paginatorargs($called $from $nbToDisplay $of "")
#end ## }


#**
  * Display the description of a collection
  *
  * @param $asset Asset
  * @author dward@curriki.org
  *#
#macro(mycurriki_collectiondescription $asset) ## {
#set($desc = $!asset.getObject("XWiki.AssetClass").getProperty("description").getValue())
$!desc
#end ## macro ## }


#**
  * Display the avatar of a user
  *
  * @param $userdoc User document
  * @author dward@curriki.org
  *#
#macro(mycurriki_avatar $userdoc) ## {
#if($userdoc.attachmentList.size()==0)  ## {
 <img src="$xwiki.getSkinFile("noavatar.png")" width="48px"/>
#else ## } {
 #foreach ($attach in $userdoc.attachmentList) ## {
  <a href="$userdoc.getURL("view")" >
  <img src="$userdoc.getAttachmentURL($attach.filename,"download")" width="48px" /></a>
 #end ## }
#end ## }
#end ## macro ## }


#**
  * Display the avatar of a user with a name
  *
  * @param $userdoc User document
  * @author dward@curriki.org
  *#
#macro(mycurriki_avatarwithname $userdoc) ## {
#if($userdoc.attachmentList.size()==0)  ## {
 <img src="$xwiki.getSkinFile("noavatar.png")" width="48px"/>
#else ## } {
 #foreach ($attach in $userdoc.attachmentList) ## {
  <a href="$userdoc.getURL("view")" >
  <img src="$userdoc.getAttachmentURL($attach.filename,"download")" width="48px" /></a>
 #end ## }
#end  $xwiki.getUserName($userdoc.fullName) ## }
#end ## macro ## }



#**
  * Display a title bar with link and js
  *
  * @param $lefttitle Title to show on the left
  * @param $righttitle Title to show on the right
  * @param $link Link to show
  * @param $js Javascript to add to the link
  * @param $color Color of the title bar (red,blue). This adds the class titleheader-red or titleheader-blue
  * @param $idpfx unique ID to add to html tags
  * @author dward@curriki.org
  *#
#macro(mycurriki_fulltitlebar $lefttitle $righttitle $link $js $color $idpfx) ## {
#if("$!link" != "") ## {
#normalizelink($link)
#end ## }
#set($righttitletrunc = $righttitle)
#if ($righttitletrunc.length() > 35) ## {
#set($righttitletrunc = $righttitle.substring(0, 34))
#set($righttitletrunc = "${righttitletrunc}...")
#end ## }
#if("$!idpfx" != "") ## {
#set($qt = '"')
#set($tmp = "id=${qt}${idpfx}-")
#set($dId = "${tmp}bar${qt}")
#set($tId = "${tmp}title${qt}")
#set($rdId = "${tmp}right${qt}")
#set($lId = "${tmp}link${qt}")
#else ## } {
#set($dId = "")
#set($tId = "")
#set($rdId = "")
#set($lId = "")
#end ## }
<div $dId class="titleheader titleheader-$color"><h3 $tId#if($link!="") class="titleheader-left"#end>$lefttitle</h3>#if($link!="" || $js!="")<div $rdId class="titleheader-right"><a $lId #if("$!link"!="") href="$link"#end#if("$!js"!="") onclick="$js"#end title="$righttitle">$righttitletrunc  &raquo;</a></div>#end
</div>
#end ## macro ## }

#**
  * Display a simple title bar with js
  *
  * @param $lefttitle Title to show on the left
  * @param $righttitle Title to show on the right
  * @param $js js to add
  * @param $color Color of the title bar (red,blue). This adds the class titleheader-red or titleheader-blue
  * @author dward@curriki.org
  *#
#macro(mycurriki_jstitlebar $lefttitle $righttitle $js $color) ## {
#mycurriki_fulltitlebar($lefttitle $righttitle "" $js $color "")
#end ## macro ## }

#**
  * Display a simple title bar
  *
  * @param $lefttitle Title to show on the left
  * @param $righttitle Title to show on the right
  * @param $link Link to show
  * @param $color Color of the title bar (red,blue). This adds the class titleheader-red or titleheader-blue
  * @author dward@curriki.org
  *#
#macro(mycurriki_titlebar $lefttitle $righttitle $link $color) ## {
#mycurriki_fulltitlebar($lefttitle $righttitle $link "" $color "")
#end ## macro ## }


##
## My Curriki Profile
##
##


#**
  * Display the user photo with a link to remove it
  *
  * @param $userdoc Name of the user to evaluate the links
  * @param $xeditredirect Redirect link after remove
  * @author dward@curriki.org
  *#
#macro(mycurriki_editphoto $userdoc $xeditredirect) ##{
  <!-- Edit Profile Photo -->
  <div class="userpic">
  #set($width = 88)
  #if($userdoc.attachmentList.size()==0) ##{
    <img src="$xwiki.getSkinFile("noavatar.png")" width="${width}"/>
  #else ##}{
    #foreach ($attach in $userdoc.attachmentList) ##{
      <a class="curriki-link" href="$userdoc.getAttachmentURL($attach.filename,"download")" >
      <img src="$userdoc.getAttachmentURL($attach.filename,"download")" width="${width}" /></a>
      <a class="curriki-link" id="profile-removephoto"
	 href="$userdoc.getAttachmentURL("${attach.filename}", "delattachment", "xredirect=${xeditredirect}")"
	 onclick="return confirm('$msg.get("profile.removePhoto.confirmation")');"
	 title="$msg.get("profile.removeYourPhoto")">
	 $msg.get("profile.removePhoto")
      </a>
    #end ##}
  #end ##}
  </div>
  <!-- End Edit Profile Photo -->
#end ##}

#**
  * Display profile in edit mode
  *
  * @param $userdoc User document to display the form for
  * @param $userobj User object to display the form for
  * @author dward@curriki.org
  *#
#macro(mycurriki_editprofile $userdoc $userobj) ##{
 <!-- Edit Profile Form -->
 <table border="0" cellspacing="2" cellpadding="2">
  <tbody> 
   <tr>
     <td> *${msg.get("profile.field.firstName")}*</td>
   </tr>
   <tr>
     <td> $userdoc.display("first_name", "edit", $userobj) </td>
   </tr>
   <tr>
     <td> *$msg.get("profile.field.lastName")* </td>
   </tr>
   <tr>
     <td> $userdoc.display("last_name", "edit", $userobj)</td>
   </tr>
   <tr>
     <td> *$msg.get("profile.field.memberType")* </td>
   </tr>
   <tr>
     <td> $userdoc.display("member_type", "edit", $userobj)</td>
   </tr>
   <tr>
     <td> *$msg.get("profile.field.affiliation")* </td>
   </tr>
   <tr>
     <td> $userdoc.display("affiliation", "edit", $userobj)</td>
   </tr>
   <tr>
     <td> *$msg.get("profile.field.city")* </td>
   </tr>
   <tr>
     <td> $userdoc.display("city", "edit", $userobj)</td>
   </tr>
   <tr>
     <td> *$msg.get("profile.field.state")* </td>
   </tr>
   <tr>
     <td> $userdoc.display("state", "edit", $userobj)</td>
   </tr>
   <tr>
     <td> *$msg.get("profile.field.country")* </td>
   </tr>
   <tr>
     <td> $userdoc.display("country", "edit", $userobj)</td>
   </tr>
   <tr>
     <td> *$msg.get("profile.field.showContact")* $userdoc.display("show_contact", "edit", $userobj)</td>
   </tr>
   <tr>
     <td> *$msg.get("profile.field.email")* </td>
   </tr>
   <tr>
     <td> $userdoc.display("email", "edit", $userobj)</td>
   </tr>
   <tr>
     <td> *$msg.get("profile.field.opt_out")* </td>
   </tr>
   <tr>
     <td> $userdoc.display("opt_out", "edit", $userobj) $msg.get("profile.field.opt_out.checkbox_text")</td>
   </tr>
   <tr>
     <td> *$msg.get("profile.field.password")* </td>
   </tr>
   <tr>
     <td> $userdoc.display("password", "edit", $userobj)</td>
   </tr>
   <tr>
     <td> *$msg.get("profile.field.passwordConfirm")* </td>
   </tr>
   <tr>
     <td> {pre}<input size='30' id='XWiki.XWikiUsers_0_password_repeat' value='$userdoc.display("password", "view", $userobj)' name='XWiki.XWikiUsers_0_password_repeat' type='password'/>{/pre}</td>
   </tr>
   <tr>
     <td> *$msg.get("profile.field.topics")* </td>
   </tr>
   <tr>
     <td> $userdoc.display("topics", "edit", $userobj)</td>
   </tr>
   <tr>
     <td> *$msg.get("profile.field.bio")* </td>
   </tr>
   <tr>
     <td> $userdoc.display("comment", "edit", $userobj) </td>
   </tr>
  </tbody>
 </table>
 <!-- End Edit Profile Form -->
#end ##}


#**
  * Display profile edit buttons
  *
  * @param $xredirect redirect url to send to
  * @author dward@curriki.org
  *#
#macro(mycurriki_editprofilebuttons $xredirect) ##{
  <!-- Edit Profile Buttons -->
  <div class="button-right">
    <input class="button button-grey" type="submit" name="formactioncancel" value="$msg.get("cancel")" onclick="document.forms.inline.action='$userdoc.getURL("cancel", "xredirect=$xredirect")'; document.forms.inline.submit(); return false;"/>
    <input class="button button-orange" type="submit" name="formactionsave" value="$msg.get("mycurriki.editprofile.saveButton")" onclick="document.forms.inline.action='$userdoc.getURL("save", "xredirect=$xredirect")'; if(document.forms.inline.onsubmit() == false) return false; document.forms.inline.submit(); return false;"/>
  </div>
  <!-- End Edit Profile Buttons -->
#end ##}

#**
  * Display profile editing box
  *
  * @param $userdoc Document of the user
  * @param $userobj Object of the user
  * @author dward@curriki.org
  *#
#macro(mycurriki_editprofilebox $userdoc $userobj) ##{
  <!-- Profile Box -->
  #if($context.user == $userdoc.fullName)
    #set($userarg = "")
  #else ## user == owner
    #set($userarg = "user=${userdoc.fullName}")
    #if(!$xwiki.hasAdminRights())
      $response.sendRedirect($xwiki.getURL('MyCurriki.Profile', "$userarg"))
    #end ## not admin
  #end ## user == owner
  #set($xredirect = $xwiki.getURL("MyCurriki.Profile", "view", "$userarg"))
  #set($xeditredirect = $xwiki.getURL("MyCurriki.Profile", "edit", "$userarg"))
  #set($xredirectemail = $xwiki.getURL("MyCurriki.EditProfileEmail", "view", "$userarg"))
  #set($xredirectemail2 = $xwiki.getURL("Registration.EmailVerification", "view", "username=${userdoc.name}"))

  #mycurriki_titlebar($msg.get("mycurriki.editprofile.titlebar") "" "" "blue")
  <form id="inline" action="$userdoc.getURL("preview")" method="post">
    <input id="origemail" name="origemail" type="hidden" value="${userobj.getProperty('email').getValue()}" />
    {pre}
    <input id="origpw" name="origpw" type="hidden" value="********" />{/pre}
    <br />
    <table border="0" cellspacing="0" cellpadding="3">
     <tbody>
      <tr>
        <td valign="top">
          #mycurriki_editphoto($userdoc $xeditredirect)
        </td>
        <td width="100%">
          #mycurriki_editprofile($userdoc $userobj)
        </td>
      </tr>
     </tbody>
    </table>
  </form>
  #mycurriki_editprofilebuttons($xredirect)
  {pre}
  <script type="text/javascript">
  function checkInlineForm() {
  var isValid = true;
   if(document.forms.inline['XWiki.XWikiUsers_0_password'].value.indexOf(" ") >= 0){
     alert("$msg.get("profile.field.password.nospaces")");
     isValid = false;
   }

   if (document.forms.inline['XWiki.XWikiUsers_0_password'].value.length < 5) {
     alert("$msg.get("profile.field.password.tooShort")");
     isValid = false;
   }

   if (document.forms.inline['XWiki.XWikiUsers_0_first_name'].value.length == 0) {
     alert("$msg.get("profile.field.firstName.mandatory")");
     isValid = false;
   }

   if (document.forms.inline['XWiki.XWikiUsers_0_last_name'].value.length == 0) {
     alert("$msg.get("profile.field.lastName.mandatory")");
     isValid = false;
   }

   var emailStr = document.forms.inline['XWiki.XWikiUsers_0_email'].value;
   if (emailStr.length <= 1) {
     alert("$msg.get("profile.field.email.mandatory")");
     isValid = false;
   } else {
     var atIndex = emailStr.indexOf("@");
     if ((atIndex < 1) || (emailStr.lastIndexOf(".") <= (atIndex+1)) || (emailStr.length <= (emailStr.lastIndexOf(".") + 1)) || (emailStr.lastIndexOf("@") != atIndex)) {
       alert("$msg.get("profile.field.email.invalid")");
       isValid = false;
     }
   }

   if (document.forms.inline['XWiki.XWikiUsers_0_password_repeat'].value != document.forms.inline['XWiki.XWikiUsers_0_password'].value){
       alert("$msg.get("profile.field.password.mustMatch")");
       isValid = false;
  }

  if (document.forms.inline['origemail'].value != document.forms.inline['XWiki.XWikiUsers_0_email'].value) {
    document.forms.inline.action='$userdoc.getURL("save", "xredirect=$xredirectemail")';
  }

  if (isValid) {
    checkEmail();
  }
  return false;
}

  function checkEmail(){
    var email = $F("XWiki.XWikiUsers_0_email");
    var account = "${userdoc.fullName}";
    var url= "$xwiki.getURL("XWiki.CheckAccountCreation").replaceAll("http","https")";
    var pars = 'xpage=plain&email=' + email + '&account=' + account;
    var myAjax = new Ajax.Request( url, { method: 'get', parameters: pars, onComplete: checkEmailResponse });
    return false;
  }

  function checkEmailResponse(originalRequest){
    var text = originalRequest.responseText;
    var res = eval('[' + text + '][0]');
    if(!res.email){
      alert("$msg.get("joincurriki.email.alreadyUsed")");
      return false;
    }
    document.forms.inline.onSubmit = "";
    if (($F("XWiki.XWikiUsers_0_email") != $F("origemail"))
     && (document.forms.inline['XWiki.XWikiUsers_0_password'].value != $F("origpw"))){
	var ia=document.createElement('input');
	ia.setAttribute('id', "XWiki.XWikiUsers_0_active");
	ia.setAttribute('name', "XWiki.XWikiUsers_0_active");
	ia.setAttribute('type', "hidden");
	ia.setAttribute('value', "0");
	$('inline').appendChild(ia);

	var eu=document.createElement('input');
	eu.setAttribute('id', "XWiki.XWikiUsers_0_email_undeliverable");
	eu.setAttribute('name', "XWiki.XWikiUsers_0_email_undeliverable");
	eu.setAttribute('type', "hidden");
	eu.setAttribute('value', "1");
	$('inline').appendChild(eu);

        document.forms.inline.action='$userdoc.getURL("save", "xredirect=$xredirectemail2")';
      }
      document.forms.inline.submit();
    }
    document.forms.inline.onsubmit=checkInlineForm;
  </script>
  {/pre}
  #if("$!footerJScript" == "")
    #set($footerJScript = "")
  #end
  #set($footerJScript = $footerJScript + '<script>$$("a").invoke("observe", "click", function(event){ var el = Event.element(event); if (((typeof el.id == "undefined") || (el.id != "profile-removephoto")) && !confirm("'+$msg.get('mycurriki.editprofile.confirmLeave')+'")){event=event||window.event; if (typeof event.preventDefault != "undefined") { event.preventDefault(); } else if (window.event){ event.returnValue = false; } }; });</script>')
  <!-- End Profile Box -->
#end ##}

#**
  * Displays the edit profile button for the user
  *
  * @param $userdoc Document of the user
  *#
#macro(mycurriki_editprofilebutton $userdoc) ##{
  <!-- My Curriki edit profile button -->
  #if($context.action == "view" && ($context.user==$userdoc.fullName || $xwiki.hasAdminRights())) ##{
    <a class="button button-orange" href="$xwiki.getURL("MyCurriki.EditProfile", "view", "user=${userdoc.fullName}")" title="$msg.get("mycurriki.profile.editButton")">$msg.get("mycurriki.profile.editButton")</a></span>
  #end ##}
  <!-- End My Curriki edit profile button -->
#end ## } end macro


#**
  * Displays the photo of the user
  *
  * @param $userdoc Document of the user
  *#
#macro(mycurriki_viewphoto $userdoc) ##{
<!-- My Curriki View Photo -->
<div class="userpic">
    #if($userdoc.attachmentList.size()==0) ##{
      <img src="$xwiki.getSkinFile("noavatar.png")"/>
      #if($context.action=="view" && ($userdoc.fullName == $context.user || $hasGlobalAdmin)) ##{
	<a class="curriki-link" onclick='document.getElementById("attachdiv").attributes{pre}[{/pre}"class"].value="visible"; {pre}$("attachdiv").scrollTo();{/pre} return false;' href="$userdoc.getURL("attach")">$msg.get('profile.changeMyPhoto')</a>
      #end ## }
    #else  ## }{ attachmentList.size must be > 0
      #foreach ($attach in $userdoc.attachmentList) ## {
	<a class="curriki-link" href="$userdoc.getAttachmentURL($attach.filename,"download")" >
	<img src="$userdoc.getAttachmentURL($attach.filename,"download")"  /></a>
	#if ($context.action=="inline") ##{
	  #set($deleteredir = $userdoc.getURL("inline"))
	  <a class="curriki-link" href="$userdoc.getAttachmentURL("${attach.filename}", "delattachment", "xredirect=${deleteredir}")" onclick="return confirm('$msg.get("profile.removePhoto.confirmation")');" title="$msg.get("profile.removeYourPhoto")">$msg.get("profile.removePhoto")</a>
	#end  ## } if inline
      #end  ## } foreach attach in list
      #if ($context.action!="inline") ##{
	#set($i = $context.user.indexOf(":")+1)
	#set($attach = $userdoc.attachmentList.get(0))
	#if ($context.user.substring($i) == $userdoc.fullName || $hasGlobalAdmin) ## {
	  #set($deleteredir = $userdoc.getURL("view"))
	  <a class="curriki-link" href="$userdoc.getAttachmentURL("${attach.filename}", "delattachment", "xredirect=${deleteredir}")" onclick="return confirm('You need to remove your picture first. Do you want to do that ?');" >$msg.get("profile.modifyYourPhoto")</a>
	#end  ## } is same user
      #end  ## } is inline
   #end ##}
</div>
<!-- End My Curriki View Photo -->
#end ##}


#**
  * Displays the profile of the user
  *
  * @param $userdoc Document of the user
  * @param $userobj Object of the user
  *#
#macro(mycurriki_viewprofile $userdoc $userobj) ##{
  <!-- Curriki View Profile -->
  <table border="0" cellspacing="2" cellpadding="2">
   <tbody>
    <tr>
     <td> *$msg.get("profile.field.display.firstName")*
     #if ($context.action=="inline") </td></tr><tr><td> #end
     #mycurriki_dashifempty($userdoc.display("first_name", $userobj)) </td>
    </tr>
    <tr>
     <td> *$msg.get("profile.field.display.lastName")*
     #if ($context.action=="inline") </td></tr><tr><td> #end
     #mycurriki_dashifempty($userdoc.display("last_name", $userobj))</td>
    </tr>
    <tr>
     <td> *$msg.get("profile.field.memberType")*
     #mycurriki_dashifempty($userdoc.display("member_type", $userobj))</td>
    </tr>
    <tr>
     <td> *$msg.get("profile.field.affiliation")*
     #if ($context.action=="inline") </td></tr><tr><td> #end
     #mycurriki_dashifempty($userdoc.display("affiliation", $userobj))</td>
    </tr>
    </tr>
     <td> *$msg.get("profile.field.city")*
     #if ($context.action=="inline") </td></tr><tr><td> #end
     #mycurriki_dashifempty($userdoc.display("city", $userobj))</td>
    </tr>
    <tr>
     <td> *$msg.get("profile.field.state")*
     #if ($context.action=="inline") </td></tr><tr><td> #end
     #mycurriki_dashifempty($userdoc.display("state", $userobj))</td>
    </tr>
    <tr>
     <td> *$msg.get("profile.field.country")*
     #if ($context.action=="inline") </td></tr><tr><td> #end
     #mycurriki_dashifempty($userdoc.display("country", $userobj))</td>
     </tr>
     #if ($context.action=="inline") ##{
       <tr>
         <td> *$msg.get("profile.field.showContact")*
         #mycurriki_dashifempty($userdoc.display("show_contact", $userobj))</td>
       </tr>
     #end ##}
     #if(($context.user==$userdoc.fullName)||($xwiki.hasAdminRights())) ##{
       <tr>
         <td> *$msg.get("profile.field.email")*
         #if ($context.action=="inline") </td></tr><tr><td> #end
         #mycurriki_dashifempty($userdoc.display("email", $userobj))</td>
       </tr>
       <tr>
         <td> *$msg.get("profile.field.showContact")*
         #if ($context.action=="inline") </td></tr><tr><td> #end
         #mycurriki_dashifempty($userdoc.display("show_contact", $userobj))</td>
       </tr>
       <tr>
         <td> *$msg.get("profile.field.opt_out")*
         #if ($context.action=="inline") </td></tr><tr><td> #end
         #mycurriki_dashifempty($userdoc.display("opt_out", $userobj))</td>
       </tr>
       #if ($context.action=="inline") ##{
         <tr>
           <td> *$msg.get("profile.field.passwordConfirm")*
             #if ($context.action=="inline") </td></tr><tr><td> #end
             {pre}<input size='30' id='XWiki.XWikiUsers_0_password_repeat' value='$userdoc.display("password", "view", $userobj)' name='XWiki.XWikiUsers_0_password_repeat' type='password'/>{/pre}</td>
         </tr>
      #end ##}
    #end ##}
    <tr>
      <td> *$msg.get("profile.field.topics")*
      #if ($context.action=="inline") </td></tr><tr><td> #end
      #set($topics = "")
      {pre}#set($titems = $userdoc.topics.split("<br />")){/pre}
      #foreach($titem in $titems) ##{
	#if($titem.trim().startsWith("Subject Index &gt;")) ##{
	  #set($titem = $titem.trim().substring(18))
	#end ##{
	#set($topics = "${topics}, ${titem}")
      #end ##}
      #if($topics.length() > 2) ##{
	#set($topics = $topics.substring(2))
      #end ##}
      #mycurriki_dashifempty($topics)</td>
    </tr>
    <tr>
      <td> *$msg.get("profile.field.bio")*
      #if ($context.action=="inline") </td></tr><tr><td> #end
      #mycurriki_dashifempty($userdoc.display("comment", $userobj)) </td>
    </tr>
   </tbody>
  </table>
  <!-- End Curriki View Profile -->
#end ##} end macro


#**
  * Displays the profile of the user with his photo
  *
  * @param $userdoc Document of the user
  * @param $userobj Object of the user
  *#
#macro(mycurriki_viewprofiletable $userdoc $userobj) ##{
  <!-- Curriki View Profile Table -->
  ## This is the main display
  #set($class = $userobj.xWikiClass)
  <div style="margin:0px; padding:0px;" class="edit-profile"> ##{
  <table border="0" cellspacing="0" cellpadding="3"> ##{
      <tbody> ##{
       <tr> ##{
        <td valign="top"> ##{
          #mycurriki_viewphoto($userdoc)
        </td> ##}
        <td width="100%"> ##{
          #mycurriki_viewprofile($userdoc $userobj)
          #if($userdoc.attachmentList.size()==0 && $context.action=="view") ##{
            #if(($userdoc.fullName==$context.user)||$xwiki.hasAdminRights()) ##{
              #set($redirect = $xwiki.requestURL)
              <div id="attachdiv" class="hidden"> ##{
              <form id="attach" action="$userdoc.getURL("upload")" enctype="multipart/form-data" method="post" name="profilImageAttach"> ##{
                <input type="hidden" name="xredirect" value="$xwiki.getFormEncoded($redirect)"/>
                <input id="xwikiuploadname" type="hidden" name="filename" value="" size="20"/>
                <fieldset style="width:90%" class="expanded" id="attachform"> ##{
                  <div><label id="xwikiuploadfilelabel" for="xwikiuploadfile">$msg.get("profile.chooseAPhoto")</label></div>
                  <div><input id="xwikiuploadfile" type="file" name="filepath" value="" size="20"/></div>
                  <div> ##{
                    {pre} ##{
                      <input type="submit" value="$msg.get("attachthisfile")" onclick="if (!checkFileExtension()) return false; return updateAttachName(document.forms.profilImageAttach, '$msg.get("doyouwanttoreplace")')" class="button button-orange"/>
                    {/pre} ##}
                    {pre} ##{
                      <script type="text/javascript"> ##{
			function checkFileExtension() {
			  var isValid = true;
			  var ext = getFileExtension();
			  if (ext) {
				if (ext != "ai" && ext != "gif" && ext != "jpg" && ext != "tif" && ext != "bmp" && ext != "jpe" && ext != "psd" && ext != "png") {
					isValid = false;
				}
			  } else {
				isValid = false;
			  }
			  if (!isValid) {
				alert("$msg.get("mycurriki.profile.needPicture")");
			  }
			  return isValid;
			}

			function getFileExtension() {
			  var fileName = document.getElementById("xwikiuploadfile").value;
			  if (fileName.length){
			    fileName = fileName.toLowerCase();
			    var pos = fileName.lastIndexOf(".");
			    if (pos > 0){
			      return fileName.substring(pos + 1);
			    }
			  }
			  return "";
			}
                       </script> ##}
                      {/pre} ##}
                    </div> ##}
                  </fieldset> ##}
                </form> ##}
              </div> ##}
            #end ##}
          #end ##}
        </td> ##}
      </tr> ##}
     </tbody> ##}
    </table> ##}
  </div> ##}
  <!-- End Curri View Profile Table -->
#end ##} endmacro


#**
  * Displays the profile of the user with a title bar
  *
  * @param $userdoc Document of the user
  * @param $userobj Object of the user
  *#
#macro(mycurriki_viewprofilebox $userdoc $userobj) ##{
  <!-- View Profile Box -->
  #mycurriki_titlebar($msg.get("mycurriki.profile.titlebar") "" "" "blue")
  #if($context.user=="XWiki.XWikiGuest") ##{
    #set($logredir = $doc.getURL("view"))
    #set($loginurl = $xwiki.getURL("XWiki.XWikiLogin", "login", "xredirect=$logredir"))
    #if("$!request.user" == "") ## {
      $response.sendRedirect($loginurl)
    #else ## }{
      $msg.get("profile.accessDenied", [$loginurl])
    #end ## }
  #else ## }{ if XWiki.XWikiGuest
    #set($showcontact=$userobj.getProperty("show_contact").getValue())
    #if(($showcontact=="0")&&($context.user!=$userdoc.fullName)&&(!$xwiki.hasAdminRights())) ##{
      $msg.get("profile.userNotVisible")
    #else ## }{ if showcontact == No
      #mycurriki_viewprofiletable( $userdoc $userobj)
    #end ##} if showcontact == No
  #end ##} if XWikiGuest
  <!-- End View Profile Box -->
#end ##} end macro

##
## My Curriki Favorites
##
##


#**
  * Displays the favorites header
  *
  * @param $allcols True if we show the action column of the favorites
  *#
#macro(mycurriki_favoritesheader $allcols)
<!-- MyCurriki Favorites Header -->
<tr>
  <th class="table-header table-col-title">$msg.get('mycurriki.favorites.table.title')</th>
  <th class="table-header table-col-contributor">$msg.get('mycurriki.favorites.table.contributor')</th>
  <th class="table-header table-col-ict">$msg.get('mycurriki.favorites.table.ict')</th>
  <th class="table-header table-col-filetype">$msg.get('mycurriki.favorites.table.filetype')</th>
  #if($allcols) ## {
    <th class="table-header table-header-fixed table-col-action">$msg.get('mycurriki.favorites.table.action')</th>
  #end ## if allcols ## }
</tr>
<!-- End MyCurriki Favorites Header -->
#end ##} end macro mycurrikifavoritesheader


#**
  * Displays the a favorite item
  * TODO: I'm not sure why ret_escaped and currikiTitle are needed
  *
  * @param $asset Asset to display
  * @param $ret_escaped The asset escaped title to be usable in Javascript
  * @param $currikiTitle The asset Title
  * @param $g_userHasCollections True if the user has collections
  * @param $allcols True if we show the action column of the favorites
  *#
#macro(mycurriki_favoritesasset $asset $ret_escaped $currikiTitle $g_userHasCollections $allcols)
  <!-- MyCurriki Favorites Asset -->
  #if(!$g_rowCount) ## {
    #set($g_rowCount = 0)
  #end ## }
  #set($g_rowCount = $g_rowCount + 1)
  <tr class="table-row#if(($g_rowCount % 2) == 0) table-odds#end">
    <td class="table-col-title">#mycurriki_favassettitlewithmodesc($asset)</td>
    <td class="table-col-contributor">#mycurriki_contributor($asset)</td>
    <td class="table-col-ict">#mycurriki_ict($asset)</td>
    <td class="table-col-filetype">#mycurriki_filetype($asset)</td>
    #if($allcols) ## {
      <td class="table-col-action">
        <div class="button-links">
          #checkForCollections()
          #escapeForJS($asset.fullName)
          #set($escapedFullName = $ret_escaped)
          #findCurrikiTitle($asset)
          #escapeForJS($currikiTitle)
          #set($escapedTitle = $ret_escaped)
          #if($g_userHasCollections && ($allcols || $hasGlobalAdmin))##{
            {pre}
            <a class="button-link" onclick="Curriki.module.addpath.startPath('H', {assetName:'$escapedFullName', assetTitle:'$escapedTitle'});" title="$msg.get('mycurriki.contributions.add_tooltip')">$msg.get('mycurriki.contributions.add')</a>
            {/pre}
          #end##}
          #set($removeMsg = $msg.get('mycurriki.favorites.table.action.remove.confirm'))
          #set($deleteUrl = $xwiki.getURL("MyCurriki.RemoveFavorite", "view", "confirm=1&docName=${asset.fullName}&sourceDoc=$doc.getURL('view')"))
          <a class="button-link#if($g_userHasCollections && ($allcols || $hasGlobalAdmin))-table#end" onclick="return confirm('$removeMsg')" href="$deleteUrl">$msg.get("mycurriki.favorites.table.action.remove")</a>
        </div>
      </td>
    #end ## if allcols ## }
  </tr>
  <!-- End MyCurriki Favorites Asset -->
#end ##end macro mycurriki_favoritesasset

#**
  * Displays the pagination footer for the favorites section
  *
  * @param $startIndex start index of the pagination
  * @param $nbToDisplay number of elements shown in a page
  * @param $assetList asset list that is displayed
  *#
#macro(mycurriki_favoritespagination $startIndex $nbToDisplay $assetList) ##{
  <!-- MyCurriki Favorites Pagination -->
  #mycurriki_paginator($msg.get("mycurriki.tab.favorites.label") $startIndex $nbToDisplay $assetList.size())
  <!-- End MyCurriki Favorites Pagination -->
#end ## } end macro mycurriki_favoritespagination


#**
  * Displays the favorites button of the user
  *
  * @param $userobj Object of the user
  *#
#macro(mycurriki_favoritesbutton $userobj)
  <!-- MyCurriki Favorites Button -->
  #if($context.user==$userdoc.fullName) ## {
    #set($shortname = $userdoc.fullName)
    #set($breadcrumb="MyCurriki.WebHome")
    #if($shortname.startsWith("XWiki.")) ## {
      #set($shortname = $shortname.substring(6))
    #end ## }
    #set($favPage = "Coll_${shortname}.Favorites")
    #if($xwiki.exists($favPage)) ## {
      #set($favDoc = $xwiki.getDocument("Coll_${shortname}.Favorites"))
      #set($assetList = $favDoc.getObjects('XWiki.SubAssetClass'))
      #if($assetList.size() > 0) ## {
        #if("$!breadcrumb" == "") ## {
          #set($breadcrumb=$userdoc.fullName)
        #end ## }
        <a class="button button-orange" href="$xwiki.getURL("${favPage}", "view", "bc=${breadcrumb}")" title="$msg.get("mycurriki.favorites.viewButton")">$msg.get("mycurriki.favorites.viewButton")</a></span>
      #end ## }
    #end ## }
  #end ## }
  <!-- End MyCurriki Favorites Button -->
#end

#**
  * Displays the favorites box
  *
  * @param $userdoc Document of the user
  * @param $userobj Object of the user
  *#
#macro(mycurriki_favoritesbox $userdoc $userobj) ##{
  <!-- MyCurriki Favorites Box -->
  #set($allcols = false)
  #if($context.user=="XWiki.XWikiGuest") ## {
    ## Settings for guests here
  #end ## }
  #if($hasGlobalAdmin) ## {
    ## Settings for admins here
    #set($allcols = true)
  #end ## }
  #if($context.user==$userdoc.fullName) ## {
    ## Settings for owner here
    #set($allcols = true)
  #end ## }
  #set($shortname = $userdoc.fullName)
  #if($shortname.startsWith("XWiki.")) ## {
    #set($shortname = $shortname.substring(6))
  #end ## }
  ## Do query for favorites
  #set($favDoc = $xwiki.getDocument("Coll_${shortname}.Favorites"))
  #set($assetList = $favDoc.getObjects('XWiki.SubAssetClass'))
  #set($nbToDisplay = 20)
  #set($startIndex = 0)
  #set($Integer = 0)
  #if($request.startIndex) ## {
    #set($startIndex = $Integer.parseInt($request.getParameter("startIndex")))
  #end ## }
  #if($startIndex > ($assetList.size() - 1)) ## {
    #set($startIndex = $assetList.size() - 1)
  #end ## }
  #set($endIndex = $startIndex - 1 + $nbToDisplay)
  #if($endIndex > ($assetList.size() - 1)) ## {
    #set($endIndex = $assetList.size() - 1)
  #end ## }
  ## Display favorites in table using pagination
  <table id="mycurriki-favorites-table" class="table table-favorites">
    #mycurriki_favoritesheader($allcols)
    ## row per item -- number of rows configurable
    #set($descnb = 0)
    #set($showcount = 0)
    #foreach($assetPointer in $assetList) ## {
      #set($assetPage = $assetPointer.get('assetpage'))
      #if($xwiki.hasAccessLevel("view", $context.user, $assetPage)) ## {
        #set($asset = $xwiki.getDocument($assetPage))
        #set($type = $!asset.getValue("type", $asset.getObject("XWiki.TextAssetClass")))
        #if("$type"!="2") ## {
          #set($showcount = 1 + $showcount)
          #if(($showcount > $startIndex) && ($showcount < ($endIndex + 2))) ## {
            #favoriteAsset($asset $allcols)
          #end ## showcount > startIndex && showcount < endIndex ## }
        #end  ## type != 2 ## }
      #end  ## if has view access ## }
    #end ## foreach assetPage in list ## }
    #if($showcount == 0) ## {
      <tr><td colspan="6">$msg.get("mycurriki.favorites.noresults")</td></tr>
    #end ## }
  </table>
  ## Pagination here
  #mycurriki_favoritespagination( $startIndex $nbToDisplay $assetList )
  <!-- End MyCurriki Favorites Box -->
#end ##} end macro mycurrikifavoritesbox


##
## My Curriki Contributions
##
##


#**
  * Displays the contributions header
  *
  * @param $sortBy Sorting column
  * @param $sortDir Sorting direction
  * $param $headersArgs Arguments added to the url
  * @param $allcols true if the actions columns are added
  *#
#macro(mycurriki_contributionsheader $sortBy $sortDir $headerArgs $allcols) ##{
  <!-- MyCurriki Contributions Header -->
  <tr>
      #if($sortBy=="title" && $sortDir == "asc") ## {
        #set($url = $xwiki.getURL($doc.fullName, "view", "${headerArgs}sortBy=title&sortDir=desc"))
      #else ## } {
        #set($url = $xwiki.getURL($doc.fullName, "view", "${headerArgs}sortBy=title"))
      #end ## }
      <th class="table-header#if($sortBy=="title") table-header-sorted#end table-col-title"><a href="$url">$msg.get('mycurriki.contributions.table.title')</a></th>
      <th class="table-header table-header-fixed table-col-ict">$msg.get('mycurriki.contributions.table.ict')</th>
      #if($sortBy=="date" && $sortDir == "desc") ## {
        #set($url = $xwiki.getURL($doc.fullName, "view", "${headerArgs}sortDir=asc"))
      #else ## } {
        #set($url = $xwiki.getURL($doc.fullName, "view", "${headerArgs}"))
      #end ## }
      <th class="table-header#if($sortBy=="date") table-header-sorted#end table-col-lastupdated"><a href="$url">$msg.get('mycurriki.contributions.table.lastupdated')</a></th>
      #if($allcols)
        #if($sortBy=="access" && $sortDir == "asc") ## {
          #set($url = $xwiki.getURL($doc.fullName, "view", "${headerArgs}sortBy=access&sortDir=desc"))
        #else ## } {
          #set($url = $xwiki.getURL($doc.fullName, "view", "${headerArgs}sortBy=access"))
        #end ## }
        <th class="table-header#if($sortBy=="access") table-header-sorted#end table-col-access"><a href="$url">$msg.get('mycurriki.contributions.table.access')</a></th>
      #end ## if allcols
      <th class="table-header table-header-fixed table-col-filetype">$msg.get('mycurriki.contributions.table.filetype')</th>
      #if($allcols)
        <th class="table-header table-header-fixed table-col-action">$msg.get('mycurriki.contributions.table.action')</th>
      #end ## if allcols
    </tr>
    <!-- End MyCurriki Contributions Header -->
#end ##} end macro mycurrikicontributionsheader


#**
  * Displays a contributions asset
  *
  * @param $asset Asset to display
  * @param $allcols true if the actions columns are added
  *#
#macro(mycurriki_contributionsasset $asset $allcols)
  <!-- MyCurriki Contributions Asset -->
  #if(!$g_rowCount) ## {
    #set($g_rowCount = 0)
  #end ## }
  #set($g_rowCount = $g_rowCount + 1)
  <tr class="table-row#if(($g_rowCount % 2) == 0) table-odds#end">
    <td class="table-col-title">#mycurriki_assettitlewithmodesc($asset)</td>
    <td class="table-col-ict">#mycurriki_ict($asset)</td>
    <td class="table-col-updated">#mycurriki_lastupdate($asset)</td>
    #if($allcols)
      <td class="table-col-access">#mycurriki_access($asset)</td>
    #end ## if allcols
    <td class="table-col-filetype">#mycurriki_filetype($asset)</td>
    #if($allcols)
      <td class="table-col-action">
        <div class="button-links">
          #checkForCollections()
          #escapeForJS($asset.fullName)
          #set($escapedFullName = $ret_escaped)
          #findCurrikiTitle($asset)
          #escapeForJS($currikiTitle)
          #set($escapedTitle = $ret_escaped)
          #if($g_userHasCollections && ($asset.creator == $context.user || $hasGlobalAdmin))##{
            {pre}
            <a class="button-link" onclick="Curriki.module.addpath.startPath('J', {assetName:'$escapedFullName', assetTitle:'$escapedTitle'});" title="$msg.get('mycurriki.contributions.add_tooltip')">$msg.get('mycurriki.contributions.add')</a>
            {/pre}
          #end##}
          #if($asset.hasAccessLevel("edit"))
            <a class="button-link-table" target="_blank" href="#gwtEditUrl(${asset.fullName})">$msg.get("caption.edit")</a>
          #end
          #if($asset.creator == $context.user || $hasGlobalAdmin || $xwiki.checkAccess($asset.fullName, "delete"))
            #set($deleteMsg = $msg.get('mycurriki.contributions.actions.delete.confirm'))
            #set($deleteUrl = $xwiki.getURL("XWiki.DeleteDocument", "view", "confirm=1&docName=${asset.fullName}&sourceDoc=$doc.getURL('view')"))
            <a class="button-link-table" onclick="return confirm('$deleteMsg')" href="$deleteUrl">$msg.get("caption.delete")</a>
          #end
        </div>
      </td>
    #end ## if allcols
  </tr>
  <!-- End MyCurriki Contributions Asset -->
#end


#**
  * Displays the pagination footer for the contributions section
  *
  * @param $startIndex start index of the pagination
  * @param $nbToDisplay number of elements shown in a page
  * @param $showcount If we should show a count of the number of contributions
  * @param $sortArgs The sort arguments for the url
  *#
#macro(mycurriki_contributionspagination $startIndex $nbToDisplay $showcount $sortArgs) ##{
  <!-- MyCurriki Contributions Pagination -->
  #mycurriki_paginatorargs($msg.get("mycurriki.tab.contributions.label") $startIndex $nbToDisplay $showcount $sortArgs)
  <!-- End MyCurriki Contributions Pagination -->
#end ##} end macro


#**
  * Displays the contributions button of the user
  *
  * @param $userobj Object of the user
  *#
#macro(mycurriki_contributionsbutton $userdoc $userobj )
  <!-- MyCurriki Contributions Buttons -->
  #if($context.action == "view" && ($context.user==$userdoc.fullName || $hasGlobalAdmin))##{
    {pre}
    <a class="button button-orange" onclick="Curriki.module.addpath.startPath('I', {});" title="$msg.get('mycurriki.contributions.addButton_tooltip')">$msg.get('mycurriki.contributions.addButton')</a>
    {/pre}
  #end ##}
  <!-- End MyCurriki Contributions Buttons -->
#end ##} end macro


#**
  * Displays the contributions box
  *
  * @param $userdoc Document of the user
  * @param $userobj Object of the user
  *#
#macro(mycurriki_contributionsbox $userdoc $userobj) ##{
  <!-- MyCurriki Contributions Box -->
  #set($headerArgs="user=${userdoc.fullName}&")
  #set($allcols = false)
  #if($context.user=="XWiki.XWikiGuest")
    ## Settings for guests here
  #end
  #if($hasGlobalAdmin) ##{
    ## Settings for admins here
    #set($allcols = true)
  #end ##}
  #if($context.user==$userdoc.fullName)
    ## Settings for owner here
    #set($allcols = true)
    #set($headerArgs="")
  #end
  #set($shortname = $userdoc.fullName)
  #if($shortname.startsWith("XWiki."))
    #set($shortname = $shortname.substring(6))
  #end
  #set($descnb = 0)
  ## Do query for contributions
  #if("$!request.sortBy"=="") ## {
    #set($sortBy = "date")
    #set($sortDir = 'desc')
  #elseif($request.sortBy=="date") ## } {
    #set($sortBy = "date")
    #set($sortDir = 'desc')
  #elseif($request.sortBy=="title") ## } {
    #set($sortBy = "title")
    #set($sortDir = 'asc')
  #elseif($request.sortBy=="access" && $allcols) ## } {
    #set($sortBy = "access")
    #set($sortDir = 'asc')
  #else ## } {
    #set($sortBy = "date")
    #set($sortDir = 'desc')
  #end ## }
  ##
  #if("$!request.sortDir"=="") ## {
  #elseif($request.sortDir=="asc") ## } {
    #set($sortDir = 'asc')
  #elseif($request.sortDir=="desc") ## } {
    #set($sortDir = 'desc')
  #end ## }
  ##
  #set($sortArgs = "")
  #if($sortBy == "date") ## {
    #if($sortDir == "asc") ## {
      #set($sortArgs = "sortDir=asc")
    #end ## }
  #elseif ($sortBy == "title") ## } {
    #set($sortArgs = "sortBy=title")
    #if($sortDir == "desc") ## {
      #set($sortArgs = "${sortArgs}&sortDir=desc")
    #end ## }
  #elseif ($sortBy == "access") ## } {
    #set($sortArgs = "sortBy=access")
    #if($sortDir == "desc") ## {
      #set($sortArgs = "${sortArgs}&sortDir=desc")
    #end ## }
  #end ## }
  ##
  ## Order by reverse last updated
  #if($sortBy=="title") ## {
    #set($sql = ", BaseObject as obj, StringProperty as prop1 where doc.fullName=obj.name and obj.className='XWiki.AssetClass' and doc.creator='${userdoc.fullName}' and doc.web != 'AssetTemp' and doc.name != 'Favorites' and obj.id=prop1.id.id and prop1.id.name='title' order by prop1.value $sortDir")
  #elseif($sortBy=="access") ## Default sort by rights ## } {
    #set($sql = ", BaseObject as obj, StringProperty as prop1, StringProperty as prop2 where doc.fullName=obj.name and obj.className='XWiki.AssetClass' and doc.creator='${userdoc.fullName}' and doc.web != 'AssetTemp' and doc.name != 'Favorites' and obj.id=prop1.id.id and prop1.id.name='rights' and obj.id=prop2.id.id and prop2.id.name='title' order by prop1.value $sortDir, prop2.value asc")
  #else ## Default sort by date ## } {
    #set($sql = ", BaseObject as obj where doc.fullName=obj.name and obj.className='XWiki.AssetClass' and doc.creator='${userdoc.fullName}' and doc.web != 'AssetTemp' and doc.name != 'Favorites' order by doc.date $sortDir")
  #end ## }
  ## Order by property ascending
  ## How can we sort by
  ## filetype (determined in a macro)
  ## instructional_component (if not exists how do we act as blank)
  ##doesnt work #set($sql = ", BaseObject as obj left outer join StringProperty as prop1 on obj.id=prop1.id.id and prop1.id.name='instructional_component' where doc.fullName=obj.name and obj.className='XWiki.AssetClass' and doc.creator='${userdoc.fullName}' and doc.web != 'AssetTemp' and doc.name != 'Favorites' order by prop1.value $sortDir")
  ##
  ##
  #set($assetList = $xwiki.searchDocuments($sql))
  #set($nbToDisplay = 20)
  #set($startIndex = 0)
  #set($Integer = 0)
  #if($request.startIndex)
    #set($startIndex = $Integer.parseInt($request.getParameter("startIndex")))
  #end
  #if($startIndex > ($assetList.size() - 1))
    #set($startIndex = $assetList.size() - 1)
  #end
  #set($endIndex = $startIndex - 1 + $nbToDisplay)
  #if($endIndex > ($assetList.size() - 1))
    #set($endIndex = $assetList.size() - 1)
  #end
  ## Display contributions in table using pagination
  <table id="mycurriki-contributions-table" class="table table-contributions">
    #mycurriki_contributionsheader($sortBy $sortDir $headerArgs $allcols)
    ## row per item -- number of rows configurable
    #set($showcount = 0)
    #foreach($assetPage in $assetList)
      #if($xwiki.hasAccessLevel("view", $context.user, $assetPage))
        #set($asset = $xwiki.getDocument($assetPage))
        #set($type = $!asset.getValue("type", $asset.getObject("XWiki.TextAssetClass")))
        #if("$type"!="2")
          #set($showcount = 1 + $showcount)
          #if(($showcount > $startIndex) && ($showcount < ($endIndex + 2)))
            #mycurriki_contributionsasset($asset $allcols)
          #end ## showcount > startIndex && showcount < endIndex
        #end ## type != 2
      #end  ## if has view access
    #end ## foreach assetPage in list
    #if($showcount == 0)
      <tr><td colspan="6">$msg.get("mycurriki.contributions.noresults")</td></tr>
    #end
  </table>
  ## Pagination here
  #mycurriki_contributionspagination( $startIndex $nbToDisplay $showcount $sortArgs )
  <!-- End MyCurriki Contributions Box -->
#end ##} end macro



#**
  * Displays an asset title with mouseover description
  *
  * @param $asset Asset to display the title
  *#
#macro(mycurriki_favassettitlewithmodesc $asset) ## {
#set($descnb = $descnb + 1)
#findCurrikiTitle($asset)
#set($title = $currikiTitle)
#if(!$title || $title.length() == 0) ## {
 #set($title = $msg.get("caption.untitled"))
#end ## }
<a class="curriki-link" href="$asset.getURL("view")" onmouseover="$('mycurriki-description-${descnb}').show();" onmouseout="$('mycurriki-description-${descnb}').hide();">{pre}$title{/pre}</a>
<div id="mycurriki-description-${descnb}" class="popup" style="display: none;">
{pre}
$msg.get("mycurriki.favorites.mouseover.description")<br />
$!asset.getObject("XWiki.AssetClass").getProperty("description").getValue() <br />
<br />
$msg.get('mycurriki.favorites.mouseover.subject') <br />
#set($subj = $!asset.getValue('fw_items'))
#set($c = 0)
#foreach($item in $subj) ## {
#if($item == "FW_masterFramework.WebHome") ## {
## Don't count WebHome
#else ## } {
#set($c = $c + 1)
#if($c <= 2) ## {
#set($fw = $xwiki.getDocument($item))
## $fw.displayTitle <br />
## #set($bcLocal = $item)
#mycurriki_subjectbreadcrumb("" $fw) <br />
#end ## }
#end ## }
#end ## }
#if($c > 2) ## {
...<br />
#end ## }
<br />
$msg.get('mycurriki.favorites.mouseover.level')<br />
#set($levl = $!asset.getValue('educational_level2'))
#set($c = 0)
#foreach($item in $levl) ## {
#set($c = $c + 1)
#if($c <= 2) ## {
$msg.get("search.selector.level.${item}")<br />
#end ## }
#end ## }
#if($c > 2) ## {
...<br />
#end ## }
{/pre}
</div>
#end ## macro ## }

##
##
## My Curriki Groups Macros
##
##

#**
  * Displays the group list of the user
  *
  * @param $userdoc Document of the user
  * @param $userobj Object of the user
  *#
#macro(mycurriki_grouplist $userdoc $userobj)
##
#set($nbToDisplay = 5)
##
#set($sm = $xwiki.csm)
#set($spaceList = $sm.getSpaceNames($userdoc.fullName, $xwiki.null))
#set($startIndex = 0)
#set($Integer = 0)
#if($request.startIndex)
 #set($startIndex = $Integer.parseInt($request.getParameter("startIndex")))
#end
#if($startIndex > ($spaceList.size() - 1))
 #set($startIndex = $spaceList.size() - 1)
#end
#set($endIndex = $startIndex - 1 + $nbToDisplay)
#if($endIndex > ($spaceList.size() - 1))
 #set($endIndex = $spaceList.size() - 1)
#end
##
#set($first_frame_done = "yes")
#set($showcount = 0)
#foreach($space in $spaceList) ## {
#set($showcount = 1 + $showcount)
#if(($showcount > $startIndex) && ($showcount < ($endIndex + 2))) ## {
#mycurriki_groupinfomessages($space "")
#end ## }
#end ## }
#if($showcount != 0) ## {
#set($sortArgs = "")
<div class="frame">
#mycurriki_paginatorargs($msg.get("mycurriki.tab.groups.label") $startIndex $nbToDisplay $spaceList.size() $sortArgs)
#end ## }
#end ## macro ## }

#**
  * Display a Group logo for a space
  *
  * @param $space Space/Group to display the logo of
  * @author dward@curriki.org
  *#
#macro(mycurriki_grouplogo $space)
  #set($logofilename = $space.display("logo","view"))
  #set($attachLogo = "")
  #if($logofilename != "")
   #set($spacehome = $space.getSpaceName()+".WebHome")
   #set($srcdoc = $xwiki.getDocument($spacehome))
   #set($attachLogo = $srcdoc.getAttachment($logofilename))
  #end
  #if(($logofilename != "")&&$attachLogo&&($attachLogo!=""))
    #set($m_logo = $srcdoc.getAttachmentURL($logofilename))
    #set($logowidth = $xwiki.image.getWidth($srcdoc.fullName,$logofilename))
    #set($logoheight = $xwiki.image.getHeight($srcdoc.fullName,$logofilename))
  #else
    #set($m_logo = $xwiki.getSkinFile("groups_default_logo.gif"))
	#set($logowidth = 120)
	#set($logoheight = 82)
  #end
#set( $image_resize = "" )
#if($logowidth > 120 || $logoheight > 82)
  ## find out wich dimmension overflows the most and computes scaled sizes
  #set( $ratiox = $logowidth / 120)
  #set( $ratioy = $logoheight / 82)
  #if($ratiox>$ratioy)
    #set($width = 120)
    #set($height = $width * $logoheight /  $logowidth)
    #set( $image_resize = "?width=120")
  #else
    #set($height = 82)
    #set($width = $height * $logowidth / $logoheight)
    #set( $image_resize = "?height=82")
  #end
#else
  #set($height = $logoheight)
  #set($width = $logowidth)
#end
  ##display logo
  <div class="frame-inset-logo">
    <a href="$space.getHomeURL()" title="{pre}$xwiki.escapeText($space.getDisplayTitle()){/pre}" alt="{pre}$xwiki.escapeText($space.getDisplayTitle()){/pre}">
      <img src="${m_logo}${image_resize}" width="$width" height="$height" title="{pre}$xwiki.escapeText(${space.getDisplayTitle()}){/pre}" alt="{pre}$xwiki.escapeText(${space.getDisplayTitle()}){/pre}" />
    </a>
  </div>
#end

#**
  * Group masthead showing the group information for my curriki
  *
  * @param m_groupName group name to display messages for
  * @param displayType display in view or edit mode
  * @author dward@curriki.org
  *#
#macro(mycurriki_groupinfo $m_groupName $displayType) ## {
#if(!$g_rowCount) ## {
#set($g_rowCount = 0)
#end ## }
#set($g_rowCount = $g_rowCount + 1)
#set($m_sm = $xwiki.csm)
#set($s = $m_sm.getSpace($m_groupName))


#if("$!first_frame_done" == "") ## {
<div class="frame">
#else ## } {
#set($first_frame_done = "")
#end ## }
<div class="frame-inset-titlebar">
#if($displayType == "edit")
  #set($editmastheadurl = $s.getHomeURL()+"?action=editmasthead")
  #mycurriki_titlebar("{pre}$xwiki.escapeText($s.getDisplayTitle()){/pre}" $msg.get('groups_home_masthead_link') $editmastheadurl "blue")
#elseif($displayType == "view")
  #mycurriki_titlebar("{pre}$xwiki.escapeText($s.getDisplayTitle()){/pre}" "" "" "blue")
#else
  #mycurriki_titlebar("{pre}$xwiki.escapeText($s.getDisplayTitle()){/pre}" $msg.get('mycurriki.groups.visit') $s.getHomeURL() "blue")
#end
</div>

#mycurriki_grouplogo( $s )

<div class="frame-inset-description">
$s.getDescription()
</div>
</div>
#end ## }


#**
  * Group masthead showing messages viewable by the user for my curriki
  *
  * @param m_groupName group name to display messages for
  * @param displayType display in view or edit mode
  * @author dward@curriki.org
  *#
#macro(mycurriki_groupinfomessages $m_groupName $displayType) ## {
#if(!$g_rowCount) ## {
#set($g_rowCount = 0)
#end ## }
#set($g_rowCount = $g_rowCount + 1)
#set($m_sm = $xwiki.csm)
#set($s = $m_sm.getSpace($m_groupName))


#if("$!first_frame_done" == "") ## {
<div class="frame">
#else ## } {
#set($first_frame_done = "")
#end ## }
<div class="frame-inset-titlebar">
#if($displayType == "edit")
  #set($editmastheadurl = $s.getHomeURL()+"?action=editmasthead")
  #mycurriki_titlebar("{pre}$xwiki.escapeText($s.getDisplayTitle()){/pre}" $msg.get('groups_home_masthead_link') $editmastheadurl "blue")
#elseif($displayType == "view")
  #mycurriki_titlebar("{pre}$xwiki.escapeText($s.getDisplayTitle()){/pre}" "" "" "blue")
#else
  #mycurriki_titlebar("{pre}$xwiki.escapeText($s.getDisplayTitle()){/pre}" $msg.get('mycurriki.groups.visit') $s.getHomeURL() "blue")
#end
</div>

#mycurriki_grouplogo( $s )

<div class="frame-inset-description">
$s.getDescription()
</div>
#if("$context.user" == "$!userdoc.fullName" ) ## {
## Get last 5 messages
#set($sql = ", BaseObject as obj where obj.name=doc.fullName and obj.className='XWiki.ArticleClass' and doc.web='Messages_${m_groupName}' order by doc.creationDate desc")
#set($messages = $xwiki.searchDocuments($sql, 100, 0))
#if($messages.size() > 0) ## {
<div id="mycurriki-groups-message-container">
## Show messages
<div id="mycurriki-group-mymessages-${m_groupName}" class="lefttext xwikicomment">
<div class="righttext floatright">
<a href="$xwiki.getURL("${m_groupName}.Messages", "view")">$msg.get("mycurriki.groups.viewmessages")</a>
</div>
<b>$msg.get("mycurriki.groups.mymessages")</b>
</div>
#set($showCount = 0)
#foreach($messageName in $messages) ## {
#if($showCount < 3) ## {
#if($xwiki.hasAccessLevel("view", $context.user, $messageName)) ## {
#set($showCount = 1 + $showCount)
#set($message = $xwiki.getDocument($messageName))
#set($msgContent = $message.getObject("XWiki.ArticleClass"))
<div id="mycurriki-group-mymessages-${message.fullName}" class="lefttext xwikicomment">
<div class="righttext floatright">
$xwiki.formatDate($message.creationDate, $msg.get("mycurriki.datetimeFormat"))
$msg.get("mycurriki.groups.message.by") <a href="$xwiki.getURL("${message.creator}", "view")">$xwiki.getUserName($message.creator)</a>
</div>
#set($showTitle = $msgContent.title)
#if($showTitle.length() > 32) ## {
#set($showTitle = $showTitle.substring(0, 32)+"...")
#end ## }
<a href="$xwiki.getURL($message.fullName, "view")"><b>$showTitle</b></a>
</div>
#end ## }
#end ## }
#end ## }
</div>
#end ## }
#end ## }
</div>
#end ## }


##
##
## My Curriki Blog Macros
##
##
#**
  * MyCurriki Blog Page Content Call Back function
  * @param $userdoc Document of the user
  * @param $userobj Object of the user
  *#
#macro(mycurriki_blogbox $userdoc $userobj)
#mycurriki_titlebar($msg.get("mycurriki.blog.titlebar") "" "" "blue")
#set($shortname = $userdoc.fullName)
#if($shortname.startsWith("XWiki."))
 #set($shortname = $shortname.substring(6))
#end
#set($hasBlog=$xwiki.exists("Blog_${shortname}.WebHome"))
#if(!$hasBlog) ## {
<div>
$msg.get("mycurriki.blog.noblog")
</div>
#else ## } {
##
#set($category = "$!request.category")
#set($nbitems = "10")
#set($nbstart = $request.nbstart)
#set($space = "Blog_${shortname}")
#if(!$itemname)
 #set($itemname = "Blog")
#end
#set($next = $msg.get("myBlog.nextArticle"))
#set($prev = $msg.get("myBlog.previousArticle"))
#set($readnext = $msg.get("myBlog.continueReading"))
#set($addanews = $msg.get("myBlogs.addArticle"))
#set($addanewsdetails = $msg.get("myBlogs.addArticle.details"))
#set($newstitle = $msg.get("myBlogs.articleTitle"))
#set($spacesql = " and doc.web='${space}'")
#if($category=='')
#set ($sql = ", BaseObject as obj where obj.name=doc.fullName and obj.className='XWiki.ArticleClass' and doc.name<>'ArticleClassTemplate' $spacesql order by doc.creationDate desc")
#else
#set ($sql = ", BaseObject as obj, DBStringListProperty as cat join cat.list list where obj.name=doc.fullName and obj.className='XWiki.ArticleClass' and doc.name<>'ArticleClassTemplate' $spacesql and obj.id=cat.id.id and cat.id.name='category' and list='$category' order by doc.creationDate desc")
#end
#set($cdate = "")
#set($inbitems = $xwiki.parseInt($nbitems))
#set($inbstart = $xwiki.parseInt($nbstart))
#set($counter = 0)
#foreach ($item in $xwiki.searchDocuments($sql, $inbitems, $inbstart))
#if ($counter != 0)
 <hr />
#end
<div class="cd-article">
#set($counter = $counter+1)
#set($bentrydoc = $xwiki.getDocument($item))
#set($bentryobj = $bentrydoc.getObject("XWiki.ArticleClass"))
#set($creationDate = $xwiki.formatDate($bentrydoc.creationDate,$msg.get("mycurriki.datetimeFormat")))
#mycurriki_blogarticle($bentrydoc, $bentryobj, false)
<br/>
#if($counter==$inbitems)
<div style="float: right; margin-right: 30px">
#if ($inbstart!=0)
#set($iprev = $inbstart - $inbitems)
[$prev>$doc.name?nbstart=${iprev}]
#end
#set($inext = $inbstart + $inbitems)
[$next>$doc.name?nbstart=${inext}]
</div>
#end
</div>
#end
#end ## }
#end ## content macro


#**
  * MyCurriki Blog Page Button Call Back function
  * @param $userobj Object of the user
  *#
#macro(mycurriki_blogbutton $userobj)
#if($context.action == "view" && ($context.user==$userdoc.fullName || $xwiki.hasAdminRights()))
#set($shortname = $userdoc.fullName)
#if($shortname.startsWith("XWiki."))
 #set($shortname = $shortname.substring(6))
#end
#set($hasBlog=$xwiki.exists("Blog_${shortname}.WebHome"))
#if(!$hasBlog) ## {
<a class="button button-orange" href="$xwiki.getURL("MyCurriki.BlogCreateBlog", "view", "xredirect=$xwiki.requestURL")" title="$msg.get("mycurriki.blog.createBlog")">$msg.get("mycurriki.blog.createBlog")</a>
#else ## } {
<a class="button button-orange" href="$xwiki.getURL("MyCurriki.BlogCreateArticle", "view", "space=Blog_${shortname}&xredirect=$xwiki.requestURL")" title="$msg.get("mycurriki.blog.createEntry")">$msg.get("mycurriki.blog.createEntry")</a>
#end ## }
#end
#end ## button macro


#**
  * Displaying a blog article for the my curriki view
  *
  * @param $bentrydoc Article document to display the article for
  * @param $bentryobj Article object to display the article for
  * @param $displayFully Displaying the full article or only the extract
  * @author dward@curriki.org
  *#
#macro(mycurriki_blogarticle $bentrydoc $bentryobj $displayFully) ## {
#set($creationDay = $xwiki.formatDate($bentrydoc.creationDate,$msg.get("mycurriki.dateFormat")))
#set($creationHour = $xwiki.formatDate($bentrydoc.creationDate,$msg.get("mycurriki.timeFormat")))
#if($doc.web == "MyCurriki") ## {
#set($title = $!bentrydoc.display("title","view", $bentryobj))
#if($title == "") ## {
#set($title = "&nbsp;")
#end ## }
1 $title
#end ## }
#set($extract = $!bentrydoc.display("extract","view", $bentryobj))
<div class="article_content" >
#set($content = $bentrydoc.display("content", "view", $bentryobj))
#if(!$displayFully)
 #if($!extract != "")
  #set($content = $extract)
 #else
  #if($content.length()>400)
   #set($i = $content.lastIndexOf(" ",400))
   #set($i = $i + 1)
   #set($content = "${content.substring(0,$i)}")
  #end
 #end
#end
$bentrydoc.getRenderedContent($content) #if($bentrydoc.fullName != $doc.fullName || !$displayFully)
<div class="clearfloats"></div>

<a href="$bentrydoc.getURL("view", "bc=$!request.bc")" class="curriki-link">$msg.get("caption.readmore")</a>#end
</div>
<div class="clearfloats"></div>
<div class="article_footer" style="border: solid 1px #CDCDCD; padding: 10px; margin-bottom: 5px;">
$msg.get("mycurriki.blog.postedBy", [$xwiki.getLocalUserName($bentrydoc.creator), $creationDay, $creationHour]) #sep() [$bentrydoc.comments.size() $msg.get("caption.comment")(s)>#if($bentrydoc.fullName != $doc.fullName)${bentrydoc.fullName}?bc=$!request.bc#end#comments]
</div>
<div class="article_footer" style="border: solid 1px #CDCDCD; padding: 10px; margin-bottom: 5px;">
#if($context.user != "XWiki.XWikiGuest" && $xwiki.hasAccessLevel("view", "XWiki.XWikiGuest", $bentrydoc.fullName))
<a class="curriki-link" href="$bentrydoc.getURL("view")" onclick="stafShow(this.href); return false;">$msg.get("caption.sendToAFriend")</a>
#else
## #sep()
<a class="curriki-link" href="$bentrydoc.getURL("view")" >$msg.get("myBlog.permalink")</a>
#end
#sep() {pre}
#if ($bentrydoc.hasAccessLevel("edit"))
<a class="curriki-link" href="$bentrydoc.getURL("inline")" >$msg.get("caption.edit")</a>
#set($deleteMsg = $msg.get('mycurriki.blog.actions.delete.confirm'))
#set($blogUrl = $xwiki.getURL("MyCurriki.Blog"))
#set($deleteUrl = $xwiki.getURL("XWiki.DeleteDocument", "view", "confirm=1&docName=${bentrydoc.fullName}&sourceDoc=${blogUrl}"))
#sep() <a class="curriki-link" onclick="this.href='$deleteUrl'; return confirm('$deleteMsg');" href="javascript:void()">$msg.get("caption.delete")</a>
#end
{/pre}
</div>
#end ## }
##
##
##
## Collections Macros
##
##
#**
  *  My Curriki Collection Actions
  *
  *  @param $asset Asset to display actions for
  *#
#macro(mycurriki_collectionactions $asset)
<a href="$asset.getURL("view")" class="button-link">$msg.get("mycurriki.collections.view")</a>
#if($asset.hasAccessLevel("edit"))
<a target="_blank" href="#gwtEditUrl(${asset.fullName})" class="button-link-table">$msg.get("mycurriki.collections.edit")</a>
#end

#if($asset.hasAccessLevel("edit"))
#escapeForJS($asset.fullName)
#set($escapedFullName = $ret_escaped)
#findCurrikiTitle($asset)
#escapeForJS($currikiTitle)
#set($escapedTitle = $ret_escaped)
{pre}
<a class="button-link-table" onclick="Curriki.module.addpath.startPath('L', {parentAsset:'$escapedFullName', parentTitle:'$escapedTitle'});" alt="$msg.get("mycurriki.collections.buildup")" title="$msg.get("mycurriki.collections.buildup_tooltip")">$msg.get("mycurriki.collections.buildup")</a>
{/pre}
#end

#if($asset.creator == $context.user || $xwiki.hasAdminRights() || $xwiki.checkAccess($asset.fullName, "delete"))
#set($deleteMsg = $msg.get('mycurriki.collections.actions.delete.confirm'))
#set($deleteUrl = $xwiki.getURL("XWiki.DeleteDocument", "view", "confirm=1&docName=${asset.fullName}&sourceDoc=$doc.getURL('view')"))
<a onclick="return confirm('$deleteMsg')" href="$deleteUrl" class="button-link-table">$msg.get("mycurriki.collections.delete")</a>
#end
#end
##
##
#**
  *  My Curriki Collection Display
  *
  *  @param $asset Asset to display
  *#
#macro(mycurriki_collection $asset)
#if(!$g_rowCount) ## {
#set($g_rowCount = 0)
#end ## }
#set($g_rowCount = $g_rowCount + 1)
<div class="frame-inset#if(($g_rowCount % 2) == 0) table-odds#end">
<div>
<div class="button-links">
#mycurriki_collectionaction($asset)
</div>
<div class="frame-inset-ict">
#mycurriki_ict($asset)
</div>
<div class="frame-inset-title">
#mycurriki_assettitle($asset)
</div>
</div>
<div class="frame-inset-description mycurriki-collections-row-description">
#mycurriki_collectiondescription($asset)
</div>
</div>
#end

#**
  * MyCurriki Collections Page Content Call Back function
  * @param $userdoc Document of the user
  * @param $userobj Object of the user
  *#
#macro(mycurriki_collections $userdoc $userobj)
#if($context.user=="XWiki.XWikiGuest")
## Settings for guests here
#end
#if($context.user==$userdoc.fullName)
## Settings for owner here
#end
#set($shortname = $userdoc.fullName)
#if($shortname.startsWith("XWiki."))
 #set($shortname = $shortname.substring(6))
#end
## Do query for contributions
#set($sql = ", BaseObject as obj, StringProperty as props where obj.id=props.id.id and doc.fullName=obj.name and obj.className='XWiki.CompositeAssetClass' and doc.creator='${userdoc.fullName}' and doc.web='Coll_${shortname}' and doc.name != 'Favorites' and props.id.name='type' and props.value='collection' order by doc.date desc")
#set($assetList = $xwiki.searchDocuments($sql))
#set($nbToDisplay = 20)
#set($startIndex = 0)
#set($Integer = 0)
#if($request.startIndex)
 #set($startIndex = $Integer.parseInt($request.getParameter("startIndex")))
#end
#if($startIndex > ($assetList.size() - 1))
 #set($startIndex = $assetList.size() - 1)
#end
#set($endIndex = $startIndex - 1 + $nbToDisplay)
#if($endIndex > ($assetList.size() - 1))
 #set($endIndex = $assetList.size() - 1)
#end
##
{pre}
<script type="text/javascript">
var $hidden = false;
function toggle_desc(){
  var $action;
  var $titl;
  if ($hidden){
    $hidden = false;
    $action = 'show';
    $titl = "$msg.get('mycurriki.collections.titlebarbutton')";
  } else {
    $hidden = true;
    $action = 'hide';
    $titl = "$msg.get('mycurriki.collections.titlebarbuttonalt')";
  }
  $$('.mycurriki-collections-row-description').invoke($action);
  $('hider-link').title=$titl;
  $('hider-link').innerHTML=$titl+"  &raquo;";
  return false;
}
</script>
{/pre}
#mycurriki_fulltitlebar($msg.get("mycurriki.collections.titlebar") $msg.get("mycurriki.collections.titlebarbutton") "" "return toggle_desc();" "red" "hider")
## row per item -- number of rows configurable
#set($showcount = 0)
#foreach($assetPage in $assetList)
#if($xwiki.hasAccessLevel("view", $context.user, $assetPage))
#set($showcount = 1 + $showcount)
#if(($showcount > $startIndex) && ($showcount < ($endIndex + 2)))
#set($asset = $xwiki.getDocument($assetPage))
#mycurriki_collection($asset)
#end ## showcount > startIndex && showcount < endIndex
#end  ## if has view access
#end ## foreach assetPage in list
#if($showcount == 0)
<div class="centertext">$msg.get("mycurriki.collections.noresults")</div>
#end ## showcount
#mycurriki_paginator($msg.get("mycurriki.tab.collections.label") $startIndex $nbToDisplay $assetList.size())
#end ## content macro

#**
  * MyCurriki Collections Page Button Call Back function
  * @param $userobj Object of the user
  *#
#macro(mycurriki_collectionbutton $userobj)
#if($context.action == "view" && ($context.user==$userdoc.fullName || $hasGlobalAdmin))
{pre}
<a class="button button-orange" onclick="Curriki.module.addpath.startPath('K', {});" alt="$msg.get("mycurriki.collections.addButton")" title="$msg.get("mycurriki.collections.addButton_tooltip")">$msg.get("mycurriki.collections.addButton")</a>
{/pre}
#end
#end ## buttonmacro

## End of MyCurriki Macros ## }